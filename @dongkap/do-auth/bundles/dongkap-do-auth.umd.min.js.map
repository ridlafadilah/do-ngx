{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@dongkap/do-auth/lib/storage/auth-indexeddb.service.ts","ng://@dongkap/do-auth/lib/storage/profile-indexeddb.service.ts","ng://@dongkap/do-auth/lib/storage/settings-indexeddb.service.ts","ng://@dongkap/do-auth/lib/services/auth-token.service.ts","ng://@dongkap/do-auth/lib/services/auth-guard.service.ts","ng://@dongkap/do-auth/lib/services/unauth-guard.service.ts","ng://@dongkap/do-auth/lib/services/auth-guard-child.service.ts","ng://@dongkap/do-auth/lib/auth/terms-conditions/terms-conditions.component.ts","ng://@dongkap/do-auth/lib/auth/login/login-page.component.ts","ng://@dongkap/do-auth/lib/auth/logout/logout.component.ts","ng://@dongkap/do-auth/lib/layout/auth.component.ts","ng://@dongkap/do-auth/lib/auth/register/register-page.component.ts","ng://@dongkap/do-auth/lib/auth/forgot/request-forgot-page.component.ts","ng://@dongkap/do-auth/lib/auth/forgot/forgot-page.component.ts","ng://@dongkap/do-auth/lib/auth/oauth2/oauth2-callback.component.ts","ng://@dongkap/do-auth/lib/do-auth-routing.module.ts","ng://@dongkap/do-auth/lib/layout/auth-block/auth-block.component.ts","ng://@dongkap/do-auth/lib/layout/do-layout-auth.module.ts","ng://@dongkap/do-auth/lib/services/auth-signature.service.ts","ng://@dongkap/do-auth/lib/services/http-interceptor-token.service.ts","ng://@dongkap/do-auth/lib/services/http-interceptor-signature.service.ts","ng://@dongkap/do-auth/lib/services/auth-lang.service.ts","ng://@dongkap/do-auth/lib/services/http-interceptor-lang.service.ts","ng://@dongkap/do-auth/lib/services/http-error.handler.ts","ng://@dongkap/do-auth/lib/services/http-interceptor-error.service.ts","ng://@dongkap/do-auth/lib/services/auth-user.service.ts","ng://@dongkap/do-auth/lib/do-auth.module.ts","ng://@dongkap/do-auth/lib/miscellaneous/404/404.component.ts","ng://@dongkap/do-auth/lib/miscellaneous-routing.module.ts","ng://@dongkap/do-auth/lib/miscellaneous.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","pop","length","push","__read","o","m","r","i","ar","error","__spread","arguments","concat","AuthIndexedDBService","injector","_super","getEnc","key","storeName","keyEncrypted","enc","getHmacSha256","oauthResource","$dbPromise","_a","get","_this","decryptAES","putEnc","val","valueEncrypted","encryptAES","put","removeEnc","delete","getOfEnc","result$","Subject","asObservable","putOfEnc","removeOfEnc","loginStorage","response","oauthInfoModels","forEach","data","type","TypeDataOauth","OAUTH","string","JSON","stringify","logout","isLogin","oauthInfo","access_token","Injector","Injectable","args","providedIn","IndexedDBService","ProfileIndexedDBService","PROFILE","remove","SettingsIndexedDBService","translate","TranslateService","SETTINGS","getTranslation","subscribe","lang","use","setTranslation","AuthTokenService","httpBaseService","apiPath","router","authIndexedDB","profileIndexedDB","settingsIndexedDB","idle","destroy$","setIdle","setTimeout","setInterrupts","DEFAULT_INTERRUPTSOURCES","onTimeout","onIdleEnd","ngOnDestroy","clearInterval","timer","complete","login","username","password","HTTP_BASE","getAuthBody","toString","getAuthHeader","pipe","takeUntil","toPromise","watch","refresh","getBodyRefresh","switchMap","map","setInterval","doLogout","HTTP_AUTH","stop","navigate","oauthHeaders","request","httpHeaders","headers","HttpHeaders","has","signatureHeader","authorization","all","token_type","set","clone","Content-Type","Authorization","btoa","Accept","URLSearchParams","append","refresh_token","Inject","HTTP_SERVICE","OAUTH_INFO","API","Router","Idle","AuthGuardService","authTokenService","authService","canActivate","route","state","url","loadPhotoUser","UserInfo","decorators","USER_INFO","UnauthorizeGuardService","AuthGuardChildService","storage","canActivateChild","strg","includes","EncryptionService","TermsConditionsComponent","ref","action","submit","close","NbDialogRef","Component","selector","template","Input","LoginPageComponent","dialogService","buttonLogin","progressBar","form","FormGroup","FormControl","urlAuthorizeGoogle","document","getElementsByTagName","href","socialLinks","target","icon","snapshot","queryParams","console","log","responseError","unsubscribe","invalid","querySelectorAll","pace","className","replace","progressDOM_1","getElementsByClassName","item","style","transform","getAttributeNode","catch","HttpErrorResponse","respStatusMessage","respStatusCode","defineProperty","controls","touched","valid","onClickTermsConditions","Accept-Language","currentLang","parameterCode","open","context","content","NbDialogService","ActivatedRoute","LogoutComponent","AuthComponent","location","back","alive","Location","RegisterPageComponent","toastr","patternFullname","Pattern","FULLNAME","patternUsername","USERNAME","patternEmail","EMAIL","patternPassword","PASSWORD_MEDIUM","minlengthUsername","minlengthEmail","fullname","email","confirmPassword","terms","recaptcha","buttonRegister","isCheckUsername","isCheckEmail","register","showI18n","ResponseCode","OK_REGISTERED","reset","ERR_SCR0005","setErrors","ERR_SCR0011","equal","errors","errorMsgFullname","errorMsgUsername","paramMsgUsername","dirty","setAsyncValidators","userValidator","updateValueAndValidity","errorMsgEmail","paramMsgEmail","errorMsgPassword","errorMsgConfirmPassword","setValidators","control","onCheckedChange","setValue","onClose","onKeyDownUsername","event","match","indexOf","toUpperCase","ctrlKey","metaKey","altKey","onKeyDownEmail","DoToastrService","valueChanges","debounceTime","distinctUntilChanged","dataValidator","validatorSubject$","user","OK_SCR012","status","not-available","timeout","first","of","RequestForgotPageComponent","buttonForgotPassword","forgotPassword","urlForgotPassword","OK_REQUEST_FORGOT_PASSWORD","ForgotPageComponent","newPassword","params","verificationId","verificationCode","OK_FORGOT_PASSWORD","errorMsgNewPassword","OAuth2CallbackComponent","extractToken","accessToken","routes","path","component","children","DoAuthRoutingModule","NgModule","imports","RouterModule","forChild","exports","AuthBlockComponent","DoLayoutAuthModule","declarations","NbLayoutModule","NbCardModule","NbIconModule","CommonModule","HttpClientModule","DoThemeModule","AuthSignatureService","authStorage","signHeaders","req","combineLatest","signature","getPath","take","httpHeaders_1","keys","timestamp","public_key","Math","floor","Date","getTime","date","DatePipe","DateFormat","DATE","HttpInterceptorTokenService","authToken","intercept","mark","reqAuth","handle","HttpInterceptorSignatureService","authSignature","AuthLanguageService","locale","getLocale","from","localeCode","RegExp","LOCALE","LOCALE_ID","HttpInterceptorLangService","authLanguage","HttpErrorHandler","isRefreshingToken","refreshTokenSubject","BehaviorSubject","errorHandler","err","statusText","ArrayBuffer","decodedString","fromCharCode","Uint8Array","parse","EMPTY","error400","error401","throwError","errorDefault","msgKey","valReq","catchError","filter","HttpInterceptorErrorService","AuthUserService","loaderUserSubject$","profile","name","picture","getImage","updatePhotoUser","file","checksum","picture_1","imageBlob_1","Blob","image","reader","FileReader","readAsDataURL","onloadend","updateNameUser","getUser","imageBlob","AUTH_PROVIDERS","provide","HTTP_INTERCEPTORS","useClass","multi","AUTH_INDEXED_DB","PROFILE_INDEXED_DB","SETTINGS_INDEXED_DB","AUTH_COMPONENTS","AUTH_ENTRY_COMPONENTS","DoAuthModule","forRoot","ngModule","providers","FormsModule","TranslateModule","ReactiveFormsModule","RecaptchaModule","RecaptchaFormsModule","NbCheckboxModule","NbAlertModule","NbInputModule","NbButtonModule","NbSpinnerModule","NbDialogModule","DoToastrModule","entryComponents","PageNotFoundComponent","goToHome","MiscellaneousRoutingModule","MiscellaneousModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { StoreKey } from 'idb';\nimport { oauthInfo, oauthInfoModels, IndexedDBEncFactoryService, TypeDataOauth } from '@dongkap/do-core';\nimport { IndexedDBService } from '@dongkap/do-storage';\nimport { AuthIDB } from '../models/auth.schema';\n\n@Injectable({providedIn : 'root'})\nexport class AuthIndexedDBService extends IndexedDBService<AuthIDB> implements IndexedDBEncFactoryService {\n\n  constructor(injector: Injector) {\n      super(injector, 'do-core', 1, '#do-auth');\n  }\n\n  public async getEnc(key, storeName?: any): Promise<AuthIDB['#do-auth']['value']> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return ((await this.$dbPromise).get(storeName ? storeName : '#do-auth', keyEncrypted)).then((value: any) => {\n      return this.enc.decryptAES(this.oauthResource['aes_key'], value);\n    });\n  }\n  public async putEnc(key, val, storeName?: any): Promise<StoreKey<AuthIDB, any>> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], val);\n    return (await this.$dbPromise).put(storeName ? storeName : '#do-auth', valueEncrypted, keyEncrypted);\n  }\n  public async removeEnc(key, storeName?: any): Promise<void> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return (await this.$dbPromise).delete(storeName ? storeName : '#do-auth', keyEncrypted);\n  }\n\n  public getOfEnc(key, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public putOfEnc(key, val, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.putEnc(key, val, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public removeOfEnc(key, storeName?: any): Observable<void> {\n    const result$: Subject<any> = new Subject<any>();\n    this.removeEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          if (data.enc) {\n            this.putEnc(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          } else {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n      }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.enc) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          this.removeEnc(data.key).then();\n        }\n      }\n    });\n  }\n\n  public async isLogin(): Promise<boolean> {\n      if (await this.getEnc(oauthInfo.access_token))\n          return true;\n      oauthInfoModels.forEach(data => {\n        this.removeEnc(data.key).then();\n      });\n      return false;\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { oauthInfoModels, IndexedDBFactoryService, TypeDataOauth } from '@dongkap/do-core';\nimport { IndexedDBService } from '@dongkap/do-storage';\nimport { ProfileIDB } from '../models/profile.schema';\n\n@Injectable({providedIn : 'root'})\nexport class ProfileIndexedDBService extends IndexedDBService<ProfileIDB> implements IndexedDBFactoryService {\n\n  constructor(injector: Injector) {\n    super(injector, 'do-core', 1, '#do-profile');\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n        if (response[data.key]) {\n          if (data.type === TypeDataOauth.PROFILE) {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.type === TypeDataOauth.PROFILE) {\n        this.remove(data.key);\n      }\n    });\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { oauthInfoModels, IndexedDBFactoryService, TypeDataOauth } from '@dongkap/do-core';\nimport { IndexedDBService } from '@dongkap/do-storage';\nimport { SettingsIDB } from '../models/settings.schema';\n\n@Injectable({providedIn : 'root'})\nexport class SettingsIndexedDBService extends IndexedDBService<SettingsIDB> implements IndexedDBFactoryService {\n\n  private translate: TranslateService;\n\n  constructor(injector: Injector) {\n    super(injector, 'do-core', 1, '#do-settings');\n    this.translate = injector.get(TranslateService);\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.SETTINGS) {\n          this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          if (data.key === 'locale') {\n            this.translate.getTranslation(response[data.key]).subscribe((lang: any) => {\n              this.translate.use(response[data.key]);\n              this.translate.setTranslation(response[data.key], lang, true);\n            });\n          }\n        }\n      }\n    });\n  }\n\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport {\n    HTTP_SERVICE, APIModel, signatureHeader,\n    HttpFactoryService, API,\n    SecurityResourceModel, OAUTH_INFO, oauthInfo } from '@dongkap/do-core';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthTokenService implements OnDestroy {\n\n    private timer: any;\n    protected destroy$: Subject<any> = new Subject<any>();\n\n    constructor(@Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n        @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n        @Inject(API)private apiPath: APIModel,\n        private router: Router,\n        private authIndexedDB: AuthIndexedDBService,\n        private profileIndexedDB: ProfileIndexedDBService,\n        private settingsIndexedDB: SettingsIndexedDBService,\n        private idle: Idle) {\n        idle.setIdle(oauthResource['session_idle']);\n        idle.setTimeout(oauthResource['session_timeout']);\n        idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n        idle.onTimeout.subscribe(() => {\n            /* console.log('[DONGKAP] Session Timeout'); */\n            this.logout();\n        });\n        idle.onIdleEnd.subscribe(() => {\n            /* console.log('[DONGKAP] Session Idle End'); */\n        });\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.timer);\n        this.destroy$.next(true);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public login(username: string, password: string): Promise<any> {\n        this.authIndexedDB.logout();\n        return this.httpBaseService.\n        HTTP_BASE(this.apiPath['auth']['token'],\n            this.getAuthBody(username, password).toString(),\n            this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .toPromise()\n                .then((response: HttpResponse<any>) => {\n                    this.idle.setIdle(+response['expires_in']);\n                    this.idle.watch();\n                    /* console.log('[DONGKAP] Session Idle Start'); */\n                    /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                    this.authIndexedDB.loginStorage(response);\n                    this.profileIndexedDB.loginStorage(response);\n                    this.settingsIndexedDB.loginStorage(response);\n                });\n    }\n\n    public refresh(): Observable<any> {\n        return this.getBodyRefresh().pipe(switchMap((body: any) => {\n            return this.httpBaseService.\n            HTTP_BASE(this.apiPath['auth']['token'],\n                body,\n                this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .pipe(map((response: any) => {\n                    this.idle.setIdle(response['expires_in']);\n                    this.authIndexedDB.logout();\n                    this.authIndexedDB.loginStorage(response);\n                }));\n        }));\n    }\n\n    public logout() {\n        this.timer = setInterval(() => {\n            this.doLogout();\n        }, 5000);\n        this.httpBaseService.HTTP_AUTH(this.apiPath['security']['revoke'])\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.doLogout();\n            });\n    }\n\n    private doLogout() {\n        this.authIndexedDB.logout();\n        this.profileIndexedDB.logout();\n        clearInterval(this.timer);\n        this.idle.stop();\n        this.router.navigate(['/auth']);\n    }\n\n    public async isLogin(): Promise<boolean> {\n        return await this.authIndexedDB.isLogin();\n    }\n\n    public oauthHeaders(request: HttpRequest<any>): Observable<HttpRequest<any>> {\n        const result$: Subject<HttpRequest<any>> = new Subject<HttpRequest<any>>();\n        let httpHeaders: HttpHeaders = request.headers ? request.headers : new HttpHeaders();\n        httpHeaders = httpHeaders.has(signatureHeader.authorization) ?\n                        httpHeaders.delete(signatureHeader.authorization) : httpHeaders;\n        Promise.all([\n            this.authIndexedDB.getEnc(oauthInfo.token_type),\n            this.authIndexedDB.getEnc(oauthInfo.access_token)])\n        .then((value: string[]) => {\n            httpHeaders = httpHeaders.set(signatureHeader.authorization, value[0] + ' ' + value[1]);\n            result$.next(request.clone({ headers: httpHeaders }));\n        });\n        return result$.asObservable();\n    }\n\n    private getAuthHeader(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' +\n                btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n            'Accept': 'application/json',\n        });\n    }\n\n    private getAuthBody(username: string, password: string): URLSearchParams {\n        const body = new URLSearchParams();\n        body.append('client_id', this.oauthResource['client_id']);\n        body.append('grant_type', this.oauthResource['grant_type']);\n        body.append('username', username);\n        body.append('password', password);\n        return body;\n    }\n\n    private getBodyRefresh(): Observable<string> {\n        const result$: Subject<string> = new Subject<string>();\n        this.authIndexedDB.getEnc(oauthInfo.refresh_token).then((value: string) => {\n            const body: URLSearchParams = new URLSearchParams();\n            body.append('client_id', this.oauthResource['client_id']);\n            body.append('grant_type', 'refresh_token');\n            body.append('refresh_token', value);\n            result$.next(body.toString());\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { USER_INFO, UserInfo } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService,\n        @Inject(USER_INFO) private authService: UserInfo) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (!value) {\n                this.router.navigate(['/auth']);\n            } else {\n                if (state.url !== '/auth/logout') this.authService.loadPhotoUser();\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class UnauthorizeGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(!value);\n            if (value) {\n                this.router.navigate(['/app']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivateChild } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { EncryptionService } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthGuardChildService implements CanActivateChild {\n    constructor(\n        private router: Router,\n        private authTokenService: AuthTokenService,\n        private enc: EncryptionService,\n        private storage: AuthIndexedDBService) {}\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (route.data) {\n                Promise.all([\n                    this.storage.getEnc('menus'),\n                    this.storage.getEnc('extras'),\n                ]).then((strg: string[]) => {\n                    if (!(strg[0].includes(route.data['code']) || strg[1].includes(route.data['code']))) {\n                        this.router.navigate(['/app/home']);\n                    }\n                    return result$.asObservable();\n                });\n            }\n            if (!value) {\n                this.router.navigate(['/auth']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'do-terms-conditions',\n  templateUrl: 'terms-conditions.component.html',\n  styleUrls: ['terms-conditions.component.scss'],\n})\nexport class TermsConditionsComponent {\n\n  @Input() content: string;\n  @Input() action: 'Agree' | 'Close' = 'Agree';\n\n  constructor(protected ref: NbDialogRef<TermsConditionsComponent>) {\n  }\n\n  submit() {\n    this.ref.close(true);\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NbAuthSocialLink } from '@nebular/auth';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  API,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { AuthTokenService } from '../../services/auth-token.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@Component({\n    selector: 'do-login-page',\n    styleUrls: ['login-page.component.scss'],\n    templateUrl: 'login-page.component.html',\n})\nexport class LoginPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonLogin: boolean = false;\n  private progressBar: number = 25;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  public form: FormGroup = new FormGroup({\n    username: new FormControl(),\n    password: new FormControl(),\n  });\n\n  private urlAuthorizeGoogle: string = this.httpBaseService.API(this.apiPath['auth']['authorize']) +\n    '/google?redirect_uri=' +\n    `${document.getElementsByTagName('base')[0].href}auth/callback`;\n\n  public socialLinks: NbAuthSocialLink[] = [\n    {\n      url: this.urlAuthorizeGoogle,\n      target: '_self',\n      icon: 'google',\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private dialogService: NbDialogService,\n    private translate: TranslateService,\n    private authTokenService: AuthTokenService,\n    @Inject(API) private apiPath: APIModel,\n    @Inject(HTTP_SERVICE) private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    route: ActivatedRoute) {\n    if (route.snapshot.queryParams['error']) {\n      console.log(route.snapshot.queryParams['error']);\n      this.responseError = 'error.' + route.snapshot.queryParams['error'];\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public login() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n      this.buttonLogin = true;\n      this.authTokenService.login(\n        this.form.get('username').value,\n        this.form.get('password').value)\n        .then(() => {\n          this.responseError = null;\n          this.progressBar = 90;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          this.progressBar = 0;\n          this.router.navigate(['/app/home']);\n        })\n        .catch((error: any) => {\n          if (!(error instanceof HttpErrorResponse)) {\n            const response: ApiBaseResponse = (<ApiBaseResponse> error);\n            this.responseError = response.respStatusMessage[response.respStatusCode];\n          }\n          this.buttonLogin = false;\n          this.progressBar = 85;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          document.querySelectorAll('.pace-running').forEach(pace => {\n            pace.className = pace.className.replace('pace-running', 'pace-done');\n          });\n          document.querySelectorAll('.pace-active').forEach(pace => {\n            pace.className = pace.className.replace('pace-active', 'pace-inactive');\n          });\n          this.progressBar = 0;\n        });\n      if (this.progressBar >= 35 && this.progressBar < 65) {\n        this.progressBar = 65;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n    }\n  }\n\n  get hasErrorUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].invalid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].valid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasErrorPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  public onClickTermsConditions() {\n    const data: any = {\n      'parameterCode': 'TERMS_CONDITIONS.DONGKAP'\n    };\n    const httpHeaders: HttpHeaders = new HttpHeaders({\n      'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n      'Content-Type': 'application/json',\n      'Accept-Language': this.translate.currentLang,\n    });\n    this.httpBaseService.HTTP_BASE(this.apiPath['openapi']['parameter'], data, httpHeaders)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.dialogService.open(TermsConditionsComponent, {\n        context: {\n          content: response['parameterValue'],\n          action: 'Close',\n        },\n        });\n    });\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { AuthTokenService } from '../../services/auth-token.service';\n\n@Component({\n    selector: 'do-logout',\n    styleUrls: ['logout.component.scss'],\n    templateUrl: 'logout.component.html',\n})\nexport class LogoutComponent {\n\n    constructor(private authTokenService: AuthTokenService) {\n        this.authTokenService.logout();\n    }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'do-auth',\n  styleUrls: ['auth.component.scss'],\n  templateUrl: 'auth.component.html',\n})\nexport class AuthComponent implements OnDestroy {\n\n    alive: boolean;\n    subscription: any;\n    authenticated: boolean;\n    token: string;\n\n    constructor(private location: Location) {}\n\n    public back(): boolean {\n        this.location.back();\n        return false;\n    }\n\n    ngOnDestroy(): void {\n        this.alive = false;\n    }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  ValidatorFn,\n  AbstractControl,\n  AsyncValidatorFn,\n} from '@angular/forms';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { of, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, first, switchMap, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-common';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@Component({\n    selector: 'do-register-page',\n    styleUrls: ['register-page.component.scss'],\n    templateUrl: 'register-page.component.html',\n})\nexport class RegisterPageComponent implements OnDestroy {\n\n  public patternFullname: string = Pattern.FULLNAME;\n  public patternUsername: string = Pattern.USERNAME;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgFullname: string;\n  public errorMsgUsername: string;\n  public errorMsgEmail: string;\n  public errorMsgPassword: string;\n  public errorMsgConfirmPassword: string;\n  public paramMsgUsername: any;\n  public paramMsgEmail: any;\n  public minlengthUsername: number = 4;\n  public minlengthEmail: number = 5;\n\n  public form: FormGroup = new FormGroup({\n    fullname: new FormControl(),\n    username: new FormControl(),\n    email: new FormControl(),\n    password: new FormControl(),\n    confirmPassword: new FormControl(),\n    terms: new FormControl(),\n    recaptcha: new FormControl(),\n  });\n\n  public responseError: any;\n  public buttonRegister: boolean = false;\n  private progressBar: number = 25;\n  private isCheckUsername: boolean = true;\n  private isCheckEmail: boolean = true;\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(private router: Router,\n    private enc: EncryptionService,\n    private toastr: DoToastrService,\n    private dialogService: NbDialogService,\n    private translate: TranslateService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public register() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n\n      this.responseError = null;\n      const data: any = this.form.value;\n      data['password'] = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['password'].value);\n      data['confirmPassword'] = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonRegister = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['signup'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.progressBar = 90;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_REGISTERED) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonRegister = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonRegister = false;\n          }\n        },\n        (error: any) => {\n          this.buttonRegister = false;\n          this.progressBar = 85;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          document.querySelectorAll('.pace-running').forEach(pace => {\n            pace.className = pace.className.replace('pace-running', 'pace-done');\n          });\n          document.querySelectorAll('.pace-active').forEach(pace => {\n            pace.className = pace.className.replace('pace-active', 'pace-inactive');\n          });\n          this.progressBar = 0;\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              switch (error['respStatusCode']) {\n                case ResponseCode.ERR_SCR0005.toString():\n                  this.form.controls['password'].setErrors({\n                    'invalid': true,\n                  });\n                  break;\n                case ResponseCode.ERR_SCR0011.toString():\n                  this.form.controls['confirmPassword'].setErrors({\n                    'equal': true,\n                  });\n                  break;\n                default:\n                  break;\n              }\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          } else {\n          }\n        });\n    }\n  }\n\n  get hasErrorFullname(): boolean {\n    if (this.form.controls['fullname'].errors && this.form.controls['fullname'].invalid && this.form.controls['fullname'].touched) {\n      if (this.form.controls['fullname'].errors['required'])\n        this.errorMsgFullname = 'error.fullname.required';\n      else\n        this.errorMsgFullname = 'error.fullname.invalid';\n    } else {\n      this.errorMsgFullname = null;\n    }\n    return (\n      this.form.controls['fullname'] &&\n      this.form.controls['fullname'].invalid &&\n      this.form.controls['fullname'].touched\n    );\n  }\n\n  get hasSuccessFullname(): boolean {\n    return (\n      this.form.controls['fullname'] &&\n      this.form.controls['fullname'].valid &&\n      this.form.controls['fullname'].touched\n    );\n  }\n\n  get hasErrorUsername(): boolean {\n    if (this.form.controls['username'].errors && this.form.controls['username'].invalid && this.form.controls['username'].touched) {\n      if (this.form.controls['username'].errors['required'])\n        this.errorMsgUsername = 'error.username.required';\n      else if (this.form.controls['username'].errors['not-available']) {\n        this.errorMsgUsername = 'error.username.not-available';\n        this.paramMsgUsername = {\n          value: this.form.controls['username'].value,\n        };\n      } else if (this.form.controls['username'].errors['timeout'])\n        this.errorMsgUsername = 'error.0';\n      else if (this.form.controls['username'].errors['error'])\n        this.errorMsgUsername = 'error.500';\n      else\n        this.errorMsgUsername = 'error.username.invalid';\n    } else {\n      if ((this.form.controls['username'].touched || this.form.controls['username'].dirty) && this.isCheckUsername) {\n        this.isCheckUsername = false;\n        this.form.controls['username'].setAsyncValidators([userValidator(this.oauthResource, this.httpBaseService, this.apiPath)]);\n        this.form.controls['username'].updateValueAndValidity();\n      }\n      this.errorMsgUsername = null;\n    }\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].invalid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].valid &&\n      this.form.controls['username'].touched\n      );\n  }\n\n  get hasErrorEmail(): boolean {\n    if (this.form.controls['email'].errors && this.form.controls['email'].invalid && this.form.controls['email'].touched) {\n      if (this.form.controls['email'].errors['required'])\n        this.errorMsgEmail = 'error.email.required';\n      else if (this.form.controls['email'].errors['not-available']) {\n        this.errorMsgEmail = 'error.email.not-available';\n        this.paramMsgEmail = {\n          value: this.form.controls['email'].value,\n        };\n      } else if (this.form.controls['email'].errors['timeout'])\n        this.errorMsgEmail = 'error.0';\n      else if (this.form.controls['email'].errors['error'])\n        this.errorMsgEmail = 'error.500';\n      else\n        this.errorMsgEmail = 'error.email.invalid';\n    } else {\n      if ((this.form.controls['email'].touched || this.form.controls['email'].dirty) && this.isCheckEmail) {\n        this.isCheckEmail = false;\n        this.form.controls['email'].setAsyncValidators([userValidator(this.oauthResource, this.httpBaseService, this.apiPath)]);\n        this.form.controls['email'].updateValueAndValidity();\n      }\n      this.errorMsgEmail = null;\n    }\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].invalid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  get hasSuccessEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].valid &&\n      this.form.controls['email'].touched\n      );\n  }\n\n  get hasErrorPassword(): boolean {\n    if (this.form.controls['password'].errors && this.form.controls['password'].invalid && this.form.controls['password'].touched) {\n      this.errorMsgPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgPassword = null;\n    }\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword-register';\n    } else {\n      if (this.form.controls['password'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword-register';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  onCheckedChange(){\n    if (!this.form.controls['terms'].value) {\n      this.form.controls['terms'].setValue(null);\n    }\n  }\n\n  onClickTermsConditions(){\n    const data: any = {\n      'parameterCode': 'TERMS_CONDITIONS.DONGKAP'\n    };\n    const httpHeaders: HttpHeaders = new HttpHeaders({\n      'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n      'Content-Type': 'application/json',\n      'Accept-Language': this.translate.currentLang,\n    });\n    this.httpBaseService.HTTP_BASE(this.apiPath['openapi']['parameter'], data, httpHeaders)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.dialogService.open(TermsConditionsComponent, {\n        context: {\n          content: response['parameterValue'],\n        },\n        })\n        .onClose.subscribe((terms: string) => {\n        if (terms) {\n          this.form.controls['terms'].setValue(true);\n        }\n      });\n    });\n  }\n\n  onKeyDownUsername(event: KeyboardEvent){\n    if (event.key) {\n      if (!event.key.match(/[!@#$%^&*()?\":{}|<>\\[\\];\\\\=~`]/g)) {\n        if (([\n          'TAB',\n          'ESCAPE',\n          'ENTER',\n          'HOME',\n          'END',\n          'ARROWLEFT',\n          'ARROWRIGHT',\n          'ARROWUP',\n          'ARROWDOWN',\n          'PAGEUP',\n          'PAGEDOWN'].indexOf(event.key.toUpperCase()) === -1) &&\n        !event.ctrlKey && !event.metaKey && !event.altKey)\n            this.isCheckUsername = true;\n      }\n    }\n  }\n\n  onKeyDownEmail(event: KeyboardEvent){\n    if (event.key) {\n      if (!event.key.match(/[!#$%^&*()?\":{}|<>\\[\\];\\\\=~`]/g)) {\n        if (([\n          'TAB',\n          'ESCAPE',\n          'ENTER',\n          'HOME',\n          'END',\n          'ARROWLEFT',\n          'ARROWRIGHT',\n          'ARROWUP',\n          'ARROWDOWN',\n          'PAGEUP',\n          'PAGEDOWN'].indexOf(event.key.toUpperCase()) === -1) &&\n        !event.ctrlKey && !event.metaKey && !event.altKey)\n          this.isCheckEmail = true;\n      }\n    }\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['password'].value !== form.controls['confirmPassword'].value)\n          return { equal: true };\n    }\n    return null;\n  };\n}\n\nexport function userValidator(\n  oauthResource: SecurityResourceModel,\n  httpBaseService: HttpFactoryService,\n  apiPath: APIModel): AsyncValidatorFn {\n  return (control: AbstractControl) => {\n    if (!control.valueChanges) {\n      return of(null);\n    } else {\n      return control.valueChanges.pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        switchMap(() => {\n          const validatorSubject$: Subject<any> = new Subject<ApiBaseResponse>();\n          const httpHeaders: HttpHeaders = new HttpHeaders({\n            'Authorization': 'Basic ' + btoa(oauthResource['client_id'] + ':' + oauthResource['client_secret']),\n            'Content-Type': 'application/json',\n          });\n          const data: any = {\n            'user': control.value,\n          };\n          let dataValidator: any;\n          if (control.value){\n            httpBaseService.HTTP_BASE(apiPath['auth']['check-user'], data, httpHeaders).subscribe(\n              (response: any) => {\n                if (response['respStatusCode'] === ResponseCode.OK_SCR012.toString()) {\n                  validatorSubject$.next(null);\n                } else {\n                  dataValidator = {\n                    error: true,\n                  };\n                  validatorSubject$.next(dataValidator);\n                }\n              },\n              (error: any) => {\n                if (!(error instanceof HttpErrorResponse)) {\n                  dataValidator = {\n                    error: true,\n                  };\n                } else {\n                  if (error.status === 302) {\n                    dataValidator = {\n                      'not-available': true,\n                    };\n                  } else {\n                    dataValidator = {\n                      timeout: true,\n                    };\n                  }\n                }\n                validatorSubject$.next(dataValidator);\n              });\n          }\n          return validatorSubject$.asObservable();\n        })).pipe(first());\n    }\n  };\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-common';\n\n@Component({\n    selector: 'do-request-forgot-page',\n    styleUrls: ['request-forgot-page.component.scss'],\n    templateUrl: 'request-forgot-page.component.html',\n})\nexport class RequestForgotPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n\n  public patternEmail: string = Pattern.EMAIL;\n\n  public form: FormGroup = new FormGroup({\n    email: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(private router: Router,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forgotPassword() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n\n      this.responseError = null;\n\n      const urlForgotPassword: string = `${document.getElementsByTagName('base')[0].href}auth/forgot-password`;\n      const data: any = {\n        'email': this.form.controls['email'].value,\n        'urlForgotPassword': urlForgotPassword,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['request-forgot-password'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.progressBar = 90;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_REQUEST_FORGOT_PASSWORD) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 85;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          document.querySelectorAll('.pace-running').forEach(pace => {\n            pace.className = pace.className.replace('pace-running', 'pace-done');\n          });\n          document.querySelectorAll('.pace-active').forEach(pace => {\n            pace.className = pace.className.replace('pace-active', 'pace-inactive');\n          });\n          this.progressBar = 0;\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          } else {\n          }\n        });\n    }\n  }\n\n  get hasErrorEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].invalid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  get hasSuccessEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].valid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-common';\n\n@Component({\n    selector: 'do-forgot-page',\n    styleUrls: ['forgot-page.component.scss'],\n    templateUrl: 'forgot-page.component.html',\n})\nexport class ForgotPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgNewPassword: string;\n  public errorMsgConfirmPassword: string;\n\n  private verificationId: string;\n  private verificationCode: string;\n\n  public form: FormGroup = new FormGroup({\n    newPassword: new FormControl(),\n    confirmPassword: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    private enc: EncryptionService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n    if (this.route.snapshot.params['id'] !== null && this.route.snapshot.params['code'] !== null) {\n      this.verificationId = this.route.snapshot.params['id'];\n      this.verificationCode = this.route.snapshot.params['code'];\n    } else {\n      this.router.navigate(['/auth/login']);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forgotPassword() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n\n      this.responseError = null;\n\n      const newPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['newPassword'].value);\n      const confirmPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const data: any = {\n        'verificationId': this.verificationId,\n        'verificationCode': this.verificationCode,\n        'newPassword': newPassword,\n        'confirmPassword': confirmPassword,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['forgot-password'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.progressBar = 90;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_FORGOT_PASSWORD) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 85;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          document.querySelectorAll('.pace-running').forEach(pace => {\n            pace.className = pace.className.replace('pace-running', 'pace-done');\n          });\n          document.querySelectorAll('.pace-active').forEach(pace => {\n            pace.className = pace.className.replace('pace-active', 'pace-inactive');\n          });\n          this.progressBar = 0;\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          }\n        });\n    }\n  }\n\n  get hasErrorNewPassword(): boolean {\n    if (this.form.controls['newPassword'].errors &&\n      this.form.controls['newPassword'].invalid &&\n      this.form.controls['newPassword'].touched) {\n      this.errorMsgNewPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgNewPassword = null;\n    }\n    return (\n      this.form.controls['newPassword'] &&\n      this.form.controls['newPassword'].invalid &&\n      this.form.controls['newPassword'].touched\n    );\n  }\n\n  get hasSuccessNewPassword(): boolean {\n    return (\n      this.form.controls['newPassword'] &&\n      this.form.controls['newPassword'].valid &&\n      this.form.controls['newPassword'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n    } else {\n      if (this.form.controls['newPassword'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['newPassword'].value !== form.controls['confirmPassword'].value)\n          return { equal: true };\n    }\n    return null;\n  };\n}\n","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators';;\nimport { Idle } from '@ng-idle/core';\nimport { API, APIModel, HttpFactoryService, HTTP_SERVICE, OAUTH_INFO, SecurityResourceModel } from '@dongkap/do-core';\nimport { AuthIndexedDBService } from '../../storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../../storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../../storage/settings-indexeddb.service';\n\n@Component({\n  selector: 'do-oauth2-callback',\n  styleUrls: ['oauth2-callback.component.scss'],\n  templateUrl: 'oauth2-callback.component.html',\n})\nexport class OAuth2CallbackComponent implements OnDestroy {\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    route: ActivatedRoute,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel,\n    private authIndexedDB: AuthIndexedDBService,\n    private profileIndexedDB: ProfileIndexedDBService,\n    private settingsIndexedDB: SettingsIndexedDBService,\n    private idle: Idle) {\n    if (route.snapshot.queryParams['access_token']) {\n      this.extractToken(route.snapshot.queryParams['access_token']);\n    } else if (route.snapshot.queryParams['error']) {\n      this.router.navigate(['/auth'], { queryParams: { error: route.snapshot.queryParams['error'] }});\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private extractToken(accessToken: string) {\n    return this.httpBaseService.\n    HTTP_BASE(this.apiPath['auth']['extract-token'],\n        this.getAuthBody(accessToken).toString(),\n        this.getAuthHeader())\n            .pipe(takeUntil(this.destroy$))\n            .toPromise()\n            .then((response: HttpResponse<any>) => {\n                this.idle.setIdle(+response['expires_in']);\n                this.idle.watch();\n                /* console.log('[DONGKAP] Session Idle Start'); */\n                /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                this.authIndexedDB.loginStorage(response);\n                this.profileIndexedDB.loginStorage(response);\n                this.settingsIndexedDB.loginStorage(response);\n                this.router.navigate(['/app/home']);\n            })\n            .catch((error: any) => {\n              this.router.navigate(['/auth']);\n            });\n  }\n\n  private getAuthBody(accessToken: string): URLSearchParams {\n    const body = new URLSearchParams();\n    body.append('access_token', accessToken);\n    return body;\n  }\n\n  private getAuthHeader(): HttpHeaders {\n    return new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' +\n            btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Accept': 'application/json',\n    });\n}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthComponent } from './layout/auth.component';\nimport { LoginPageComponent } from './auth/login/login-page.component';\nimport { UnauthorizeGuardService } from './services/unauth-guard.service';\nimport { LogoutComponent } from './auth/logout/logout.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { RegisterPageComponent } from './auth/register/register-page.component';\nimport { RequestForgotPageComponent } from './auth/forgot/request-forgot-page.component';\nimport { ForgotPageComponent } from './auth/forgot/forgot-page.component';\nimport { OAuth2CallbackComponent } from './auth/oauth2/oauth2-callback.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [\n    {\n      path: '',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'login',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'register',\n      component: RegisterPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'forgot-password',\n      component: RequestForgotPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'forgot-password/:id/:code',\n      component: ForgotPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'callback',\n      component: OAuth2CallbackComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'logout',\n      component: LogoutComponent,\n      canActivate: [AuthGuardService],\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoAuthRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'do-auth-block',\n  styleUrls: ['auth-block.component.scss'],\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class AuthBlockComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport {\n  NbCardModule,\n  NbLayoutModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { AuthComponent } from './auth.component';\nimport { AuthBlockComponent } from './auth-block/auth-block.component';\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    AuthBlockComponent,\n  ],\n  imports: [\n    NbLayoutModule,\n    NbCardModule,\n    NbIconModule,\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    DoThemeModule,\n  ],\n  exports: [\n    AuthComponent,\n    AuthBlockComponent,\n  ],\n})\nexport class DoLayoutAuthModule {}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatePipe } from '@angular/common';\nimport { Observable, of, combineLatest } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { signatureHeader, SecurityResourceModel, OAUTH_INFO, oauthInfo } from '@dongkap/do-core';\nimport { DateFormat, EncryptionService } from '@dongkap/do-core';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthSignatureService {\n\n    constructor(\n        private translate: TranslateService,\n        private enc: EncryptionService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel,\n        private authStorage: AuthIndexedDBService) {}\n\n    public signHeaders(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return combineLatest([\n            this.key(),\n            this.signature(this.getPath(req.url)),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            if (signatureHeader.signature) {\n                let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n                httpHeaders.keys().forEach((key: string) => {\n                    if (key === signatureHeader.key)\n                        httpHeaders = httpHeaders.delete(signatureHeader.key);\n                    if (key === signatureHeader.timestamp)\n                        httpHeaders = httpHeaders.delete(signatureHeader.timestamp);\n                    if (key === signatureHeader.signature)\n                        httpHeaders = httpHeaders.delete(signatureHeader.signature);\n                });\n                httpHeaders = httpHeaders.set(signatureHeader.key, value[0]);\n                httpHeaders = httpHeaders.set(signatureHeader.timestamp, this.timestamp());\n                httpHeaders = httpHeaders.set(signatureHeader.signature, value[1]);\n                return of(req.clone({ headers: httpHeaders }));\n            }\n            return of(req);\n        }));\n    }\n\n    public key(): Observable<string> {\n        return this.authStorage.getOfEnc(oauthInfo.public_key);\n    }\n\n    public timestamp(): string {\n        return Math.floor(new Date().getTime() / 1000).toString();\n    }\n\n    public date(): string {\n        return new DatePipe(this.translate.currentLang).transform(new Date(), DateFormat.DATE);\n    }\n\n    public signature(url: string): Observable<string> {\n        return combineLatest([\n            this.key(),\n            this.authStorage.getOfEnc(oauthInfo.access_token),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            const key = value[0] + ':' +\n                        this.timestamp() + ':' +\n                        // this.date() + ':' +\n                        url + ':' +\n                        value[1];\n            return of(this.enc.getHmacSha256(this.oauthResource['private_key'], key));\n        }));\n    }\n\n    private getPath(url: string): string {\n        return '/' + url\n        .replace(/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*(:[0-9]{1,5})?(\\/).*?/g, '');\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class HttpInterceptorTokenService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authToken: AuthTokenService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authToken.oauthHeaders(req).pipe(switchMap((reqAuth: any) => {\n                    return next.handle(reqAuth);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader, SecurityResourceModel, OAUTH_INFO } from '@dongkap/do-core';\nimport { AuthSignatureService } from './auth-signature.service';\n\n@Injectable()\nexport class HttpInterceptorSignatureService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authSignature: AuthSignatureService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark) && this.oauthResource.signature) {\n                return this.authSignature.signHeaders(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Observable, of, from } from 'rxjs';\nimport { take, switchMap } from 'rxjs/operators';\nimport { Pattern } from '@dongkap/do-core';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthLanguageService {\n\n    constructor(@Inject(LOCALE_ID) private locale: string,\n        private settingsIndexedDB: SettingsIndexedDBService) {}\n\n    getLocale(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return from(this.settingsIndexedDB.get('locale')).pipe(\n            take(1),\n            switchMap((value: any) => {\n            let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n            const localeCode: string = value ?\n            (\n                value.match(new RegExp(Pattern.LOCALE, 'g')) ?\n                value :\n                this.locale\n            ) : this.locale;\n            httpHeaders = httpHeaders.append('Accept-Language', localeCode);\n            return of(req.clone({ headers: httpHeaders }));\n        }));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader } from '@dongkap/do-core';\nimport { AuthLanguageService } from './auth-lang.service';\n\n@Injectable()\nexport class HttpInterceptorLangService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authLanguage: AuthLanguageService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authLanguage.getLocale(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpErrorResponse, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, EMPTY, Observable, throwError } from 'rxjs';\nimport { filter, take, switchMap, catchError } from 'rxjs/operators';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\nexport class HttpErrorHandler {\n\n    protected isRefreshingToken: boolean = false;\n    protected refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n    constructor(\n        protected translate: TranslateService,\n        protected authToken: AuthTokenService,\n        protected authStorage: AuthIndexedDBService,\n        protected authSignature: AuthSignatureService) {}\n\n    protected errorHandler(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n        let err: HttpErrorResponse = new HttpErrorResponse({\n            error: error.error,\n            headers: error.headers,\n            status: error.status,\n            statusText: error.statusText,\n            url: error.url,\n        });\n\n        if (error.error instanceof ArrayBuffer) {\n            const decodedString = String.fromCharCode.apply(null, new Uint8Array(error.error));\n            err = new HttpErrorResponse({\n                error: JSON.parse(decodedString),\n                headers: error.headers,\n                status: error.status,\n                statusText: error.statusText,\n                url: error.url,\n            });\n        }\n        switch (err.status) {\n            case 200:\n            case 201:\n            case 304:\n                return EMPTY;\n            case 400:\n                return this.error400(err);\n            case 401:\n                return this.error401(err, req, next);\n            case 404:\n            case 403:\n            case 500:\n            case 504:\n            case 0:\n                return throwError(this.errorDefault(err));\n            default:\n                break;\n        }\n        return throwError(err);\n    }\n\n    protected errorDefault(error: any | HttpErrorResponse): ApiBaseResponse {\n        let err: ApiBaseResponse = {\n            respStatusCode: error.status,\n            respStatusMessage: {},\n        };\n        err.respStatusMessage[err.respStatusCode] = error.statusText;\n        let msgKey: string = 'error.' + err.respStatusCode;\n        if (error.error) {\n            if (error.error['respStatusCode']) {\n                err = error.error;\n                msgKey = err.respStatusMessage[err.respStatusCode];\n            }\n        }\n        this.translate.get(msgKey).subscribe((result: string) => {\n            err.respStatusMessage[err.respStatusCode] = result;\n        });\n        return err;\n    }\n\n    protected error400(error: HttpErrorResponse): Observable<HttpEvent<any>> {\n        if (error.error['respStatusCode']) {\n            if (error.error['respStatusCode'] === 'invalid_grant') {\n                switch (error.error['respStatusMessage']['invalid_grant']) {\n                    case 'Bad credentials':\n                    case 'User account is locked':\n                    case 'User is disabled':\n                    case 'User account has expired':\n                    case 'User credentials have expired':\n                        return throwError(this.errorDefault(error));\n                    default:\n                        this.authToken.logout();\n                        return throwError(this.errorDefault(error));\n                }\n            } else {\n                return throwError(this.errorDefault(error));\n            }\n        }\n        return throwError(error);\n    }\n\n    protected error401 (error: HttpErrorResponse, request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        if (error.error) {\n            if (error.error['respStatusCode'] === 'invalid_token') {\n                if (!this.isRefreshingToken) {\n                    this.isRefreshingToken = true;\n                    this.refreshTokenSubject.next(null);\n                    return this.authToken.refresh().pipe(\n                        switchMap((response: any) => {\n                            this.isRefreshingToken = false;\n                            this.refreshTokenSubject.next(response);\n                            return this.authToken.oauthHeaders(request).pipe(\n                                switchMap((req: any) => {\n                                    request = req;\n                                    return this.authSignature.signHeaders(request).pipe(\n                                        switchMap((valReq: any) => {\n                                            return next.handle(valReq);\n                                        }),\n                                    );\n                                }));\n                        }),\n                        catchError((err: HttpErrorResponse) => {\n                            return this.errorHandler(err, request, next);\n                        }));\n                } else {\n                    const msg: string = error.error['respStatusMessage']['invalid_token'];\n                    if (msg.includes('expired')) {\n                        this.authToken.logout();\n                    } else {\n                        return this.refreshTokenSubject.pipe(\n                            filter(response => response != null),\n                            take(1),\n                            switchMap(() => {\n                                return this.authToken.oauthHeaders(request).pipe(\n                                    switchMap((req: any) => {\n                                        request = req;\n                                        return this.authSignature.signHeaders(request).pipe(\n                                            switchMap((valReq: any) => {\n                                                return next.handle(valReq);\n                                            }),\n                                        );\n                                    }));\n                            }));\n                    }\n                }\n            }\n        }\n        return throwError(error);\n    }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { catchError, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpErrorHandler } from './http-error.handler';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class HttpInterceptorErrorService extends HttpErrorHandler implements HttpInterceptor, OnDestroy {\n\n    constructor(\n        public translate: TranslateService,\n        public authToken: AuthTokenService,\n        public authStorage: AuthIndexedDBService,\n        public authSignature: AuthSignatureService) {\n        super(translate, authToken, authStorage, authSignature);\n    }\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error instanceof HttpErrorResponse) {\n                    return this.errorHandler(error, req, next);\n                } else {\n                    return throwError(error);\n                }\n        })).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { API, APIModel, HTTP_SERVICE, HttpFactoryService, oauthInfo } from '@dongkap/do-core';\nimport { User, UserInfo } from '@dongkap/do-core';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthUserService extends UserInfo {\n\n    constructor(\n        private profileIndexedDB: ProfileIndexedDBService,\n        private authIndexedDB: AuthIndexedDBService,\n        @Inject(API)private apiPath: APIModel,\n        @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService) {\n            super();\n    }\n    private loaderUserSubject$ = new Subject<User>();\n\n    public loadPhotoUser(): void {\n        Promise.all([\n            this.profileIndexedDB.get('image-b64'),\n            this.profileIndexedDB.get('image'),\n            this.profileIndexedDB.get('name'),\n            this.authIndexedDB.getEnc('provider'),\n        ]).then((value: any[]) => {\n            if (!value[0]) {\n                if (value[3] === 'local') {\n                    if (value[1] && value[2]) {\n                        this.getImage(value[1], value[2]);\n                    } else {\n                        this.httpBaseService.HTTP_AUTH(\n                        this.apiPath['profile']['get-profile'])\n                        .subscribe((response: any) => {\n                            Promise.all([\n                                this.profileIndexedDB.put('name', response['name']),\n                                this.profileIndexedDB.put('email', response['email']),\n                                this.profileIndexedDB.put('image', response['image']),\n                            ]).then(() => {\n                                this.getImage(response['image'], response['name']);\n                            });\n                        });\n                    }\n                } else {\n                    const user: User = {\n                        name: value[2],\n                        picture: value[1],\n                    };\n                    this.loaderUserSubject$.next(user);\n                }\n            } else {\n                Promise.all([\n                    this.profileIndexedDB.get('name'),\n                    this.profileIndexedDB.get('image-b64'),\n                ]).then((profile: any[]) => {\n                    const user: User = {\n                        name: profile[0],\n                        picture: profile[1],\n                    };\n                    this.loaderUserSubject$.next(user);\n                });\n            }\n        });\n    }\n\n    public updatePhotoUser(file: File, checksum: string): Observable<User> {\n        if (file && checksum) {\n            let picture: string;\n            const imageBlob = new Blob([file], {\n                type: 'image/png',\n            });\n            this.profileIndexedDB.put(oauthInfo.image, checksum).then();\n            this.profileIndexedDB.put('image-blob', imageBlob).then();\n            this.profileIndexedDB.get('name').then((name: any) => {\n                const reader: FileReader = new FileReader();\n                reader.readAsDataURL(imageBlob);\n                reader.onloadend = () => {\n                    picture = reader.result.toString();\n                    const user: User = {\n                        'name': name,\n                        'picture': picture,\n                    };\n                    this.profileIndexedDB.put('image-b64', picture).then();\n                    this.loaderUserSubject$.next(user);\n                };\n            });\n        } else {\n            this.loaderUserSubject$.next(null);\n        }\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public updateNameUser(name: string): Observable<User> {\n        this.profileIndexedDB.put('name', name).then();\n        Promise.all([\n            this.profileIndexedDB.get('image-b64'),\n            this.profileIndexedDB.get('image'),\n        ]).then((value: any[]) => {\n            let picture: string;\n            if (value[0])\n                picture = value[0];\n            else\n                picture = value[1];\n            const user: User = {\n                'name': name,\n                'picture': picture,\n            };\n            this.loaderUserSubject$.next(user);\n        });\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public getUser(): Observable<any> {\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    private getImage(checksum: any, name: string) {\n        if (checksum != null) {\n            this.httpBaseService.HTTP_AUTH(\n            this.apiPath['file']['vw-photo-profile'], null, null, null,\n            [checksum], 'arraybuffer')\n            .pipe(map((response: any) => {\n                let picture: string;\n                const imageBlob = new Blob([response], {\n                    type: 'image/png',\n                });\n                this.profileIndexedDB.put('image-blob', imageBlob).then();\n                const reader: FileReader = new FileReader();\n                reader.readAsDataURL(imageBlob);\n                reader.onloadend = () => {\n                    picture = reader.result.toString();\n                    const user: User = {\n                        'name': name,\n                        'picture': picture,\n                    };\n                    this.profileIndexedDB.put('image-b64', picture).then();\n                    this.loaderUserSubject$.next(user);\n                };\n            })).subscribe();\n        }\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  NbCheckboxModule,\n  NbAlertModule,\n  NbInputModule,\n  NbButtonModule,\n  NbIconModule,\n  NbDialogModule,\n  NbCardModule,\n  NbSpinnerModule,\n} from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RecaptchaFormsModule, RecaptchaModule } from 'ng-recaptcha';\nimport { AUTH_INDEXED_DB, PROFILE_INDEXED_DB, SETTINGS_INDEXED_DB, USER_INFO } from '@dongkap/do-core';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoToastrModule } from '@dongkap/do-common';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { UnauthorizeGuardService } from './services/unauth-guard.service';\nimport { AuthTokenService } from './services/auth-token.service';\nimport { AuthGuardChildService } from './services/auth-guard-child.service';\nimport { LoginPageComponent } from './auth/login/login-page.component';\nimport { LogoutComponent } from './auth/logout/logout.component';\nimport { DoAuthRoutingModule } from './do-auth-routing.module';\nimport { DoLayoutAuthModule } from './layout/do-layout-auth.module';\nimport { AuthSignatureService } from './services/auth-signature.service';\nimport { HttpInterceptorTokenService } from './services/http-interceptor-token.service';\nimport { HttpInterceptorSignatureService } from './services/http-interceptor-signature.service';\nimport { HttpInterceptorLangService } from './services/http-interceptor-lang.service';\nimport { HttpInterceptorErrorService } from './services/http-interceptor-error.service';\nimport { AuthUserService } from './services/auth-user.service';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from './storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from './storage/settings-indexeddb.service';\nimport { AuthLanguageService } from './services/auth-lang.service';\nimport { RegisterPageComponent } from './auth/register/register-page.component';\nimport { RequestForgotPageComponent } from './auth/forgot/request-forgot-page.component';\nimport { ForgotPageComponent } from './auth/forgot/forgot-page.component';\nimport { TermsConditionsComponent } from './auth/terms-conditions/terms-conditions.component';\nimport { OAuth2CallbackComponent } from './auth/oauth2/oauth2-callback.component';\n\nconst AUTH_PROVIDERS = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorTokenService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorSignatureService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorLangService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorErrorService, multi: true},\n  { provide: USER_INFO, useClass: AuthUserService },\n  { provide: AUTH_INDEXED_DB, useClass: AuthIndexedDBService },\n  { provide: PROFILE_INDEXED_DB, useClass: ProfileIndexedDBService },\n  { provide: SETTINGS_INDEXED_DB, useClass: SettingsIndexedDBService },\n  AuthGuardService,\n  UnauthorizeGuardService,\n  AuthTokenService,\n  AuthGuardChildService,\n  AuthSignatureService,\n  AuthLanguageService,\n];\n\nconst AUTH_COMPONENTS = [\n  LoginPageComponent,\n  LogoutComponent,\n  RegisterPageComponent,\n  RequestForgotPageComponent,\n  ForgotPageComponent,\n  TermsConditionsComponent,\n  OAuth2CallbackComponent,\n];\n\nconst AUTH_ENTRY_COMPONENTS = [\n  TermsConditionsComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...AUTH_COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    NbCheckboxModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    NbIconModule,\n    NbCardModule,\n    NbSpinnerModule,\n    NbDialogModule.forChild(),\n    DoThemeModule,\n    DoToastrModule.forRoot(),\n    DoLayoutAuthModule,\n    DoAuthRoutingModule,\n  ],\n  exports: [\n    ...AUTH_COMPONENTS,\n  ],\n  entryComponents: [\n    ...AUTH_ENTRY_COMPONENTS,\n  ],\n})\nexport class DoAuthModule {\n  static forRoot(): ModuleWithProviders<DoAuthModule> {\n    return {\n      ngModule: DoAuthModule,\n      providers: [\n        ...AUTH_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'do-404',\n  styleUrls: ['./404.component.scss'],\n  templateUrl: './404.component.html',\n})\nexport class PageNotFoundComponent {\n\n  constructor(private location: Location) {\n  }\n\n  goToHome() {\n    this.location.back();\n    return;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageNotFoundComponent } from './miscellaneous/404/404.component';\nimport { AuthComponent } from './layout/auth.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '404',\n        component: PageNotFoundComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\n\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoLayoutAuthModule } from './layout/do-layout-auth.module';\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\nimport { PageNotFoundComponent } from './miscellaneous/404/404.component';\n\n@NgModule({\n  imports: [\n    NbButtonModule,\n    NbIconModule,\n    CommonModule,\n    DoThemeModule,\n    DoLayoutAuthModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    PageNotFoundComponent,\n  ],\n})\nexport class MiscellaneousModule { }\n"]}