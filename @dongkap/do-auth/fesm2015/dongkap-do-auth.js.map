{"version":3,"file":"dongkap-do-auth.js","sources":["ng://@dongkap/do-auth/lib/storage/auth-indexeddb.service.ts","ng://@dongkap/do-auth/lib/storage/profile-indexeddb.service.ts","ng://@dongkap/do-auth/lib/storage/settings-indexeddb.service.ts","ng://@dongkap/do-auth/lib/services/auth-token.service.ts","ng://@dongkap/do-auth/lib/services/auth-guard.service.ts","ng://@dongkap/do-auth/lib/services/unauth-guard.service.ts","ng://@dongkap/do-auth/lib/services/auth-guard-child.service.ts","ng://@dongkap/do-auth/lib/auth/terms-conditions/terms-conditions.component.ts","ng://@dongkap/do-auth/lib/auth/login/login-page.component.ts","ng://@dongkap/do-auth/lib/auth/logout/logout.component.ts","ng://@dongkap/do-auth/lib/layout/auth.component.ts","ng://@dongkap/do-auth/lib/auth/register/register-page.component.ts","ng://@dongkap/do-auth/lib/auth/forgot/request-forgot-page.component.ts","ng://@dongkap/do-auth/lib/auth/forgot/forgot-page.component.ts","ng://@dongkap/do-auth/lib/auth/oauth2/oauth2-callback.component.ts","ng://@dongkap/do-auth/lib/do-auth-routing.module.ts","ng://@dongkap/do-auth/lib/layout/auth-block/auth-block.component.ts","ng://@dongkap/do-auth/lib/layout/do-layout-auth.module.ts","ng://@dongkap/do-auth/lib/services/auth-signature.service.ts","ng://@dongkap/do-auth/lib/services/http-interceptor-token.service.ts","ng://@dongkap/do-auth/lib/services/http-interceptor-signature.service.ts","ng://@dongkap/do-auth/lib/services/auth-lang.service.ts","ng://@dongkap/do-auth/lib/services/http-interceptor-lang.service.ts","ng://@dongkap/do-auth/lib/services/http-error.handler.ts","ng://@dongkap/do-auth/lib/services/http-interceptor-error.service.ts","ng://@dongkap/do-auth/lib/services/auth-user.service.ts","ng://@dongkap/do-auth/lib/do-auth.module.ts","ng://@dongkap/do-auth/lib/miscellaneous/404/404.component.ts","ng://@dongkap/do-auth/lib/miscellaneous-routing.module.ts","ng://@dongkap/do-auth/lib/miscellaneous.module.ts","ng://@dongkap/do-auth/index.ts","ng://@dongkap/do-auth/dongkap-do-auth.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { StoreKey } from 'idb';\nimport { oauthInfo, oauthInfoModels, IndexedDBEncFactoryService, TypeDataOauth } from '@dongkap/do-core';\nimport { IndexedDBService } from '@dongkap/do-storage';\nimport { AuthIDB } from '../models/auth.schema';\n\n@Injectable({providedIn : 'root'})\nexport class AuthIndexedDBService extends IndexedDBService<AuthIDB> implements IndexedDBEncFactoryService {\n\n  constructor(injector: Injector) {\n      super(injector, 'do-core', 1, '#do-auth');\n  }\n\n  public async getEnc(key, storeName?: any): Promise<AuthIDB['#do-auth']['value']> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return ((await this.$dbPromise).get(storeName ? storeName : '#do-auth', keyEncrypted)).then((value: any) => {\n      return this.enc.decryptAES(this.oauthResource['aes_key'], value);\n    });\n  }\n  public async putEnc(key, val, storeName?: any): Promise<StoreKey<AuthIDB, any>> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    const valueEncrypted = this.enc.encryptAES(this.oauthResource['aes_key'], val);\n    return (await this.$dbPromise).put(storeName ? storeName : '#do-auth', valueEncrypted, keyEncrypted);\n  }\n  public async removeEnc(key, storeName?: any): Promise<void> {\n    const keyEncrypted = this.enc.getHmacSha256(this.oauthResource['private_key'], key, true);\n    return (await this.$dbPromise).delete(storeName ? storeName : '#do-auth', keyEncrypted);\n  }\n\n  public getOfEnc(key, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.getEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public putOfEnc(key, val, storeName?: any): Observable<any> {\n    const result$: Subject<any> = new Subject<any>();\n    this.putEnc(key, val, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n  public removeOfEnc(key, storeName?: any): Observable<void> {\n    const result$: Subject<any> = new Subject<any>();\n    this.removeEnc(key, storeName).then((value: any) => {\n      result$.next(value);\n    });\n    return result$.asObservable();\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          if (data.enc) {\n            this.putEnc(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          } else {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n      }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.enc) {\n        if (data.type === TypeDataOauth.OAUTH) {\n          this.removeEnc(data.key).then();\n        }\n      }\n    });\n  }\n\n  public async isLogin(): Promise<boolean> {\n      if (await this.getEnc(oauthInfo.access_token))\n          return true;\n      oauthInfoModels.forEach(data => {\n        this.removeEnc(data.key).then();\n      });\n      return false;\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { oauthInfoModels, IndexedDBFactoryService, TypeDataOauth } from '@dongkap/do-core';\nimport { IndexedDBService } from '@dongkap/do-storage';\nimport { ProfileIDB } from '../models/profile.schema';\n\n@Injectable({providedIn : 'root'})\nexport class ProfileIndexedDBService extends IndexedDBService<ProfileIDB> implements IndexedDBFactoryService {\n\n  constructor(injector: Injector) {\n    super(injector, 'do-core', 1, '#do-profile');\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n        if (response[data.key]) {\n          if (data.type === TypeDataOauth.PROFILE) {\n            this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          }\n        }\n    });\n  }\n\n  public logout(): void {\n    oauthInfoModels.forEach(data => {\n      if (data.type === TypeDataOauth.PROFILE) {\n        this.remove(data.key);\n      }\n    });\n  }\n\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { oauthInfoModels, IndexedDBFactoryService, TypeDataOauth } from '@dongkap/do-core';\nimport { IndexedDBService } from '@dongkap/do-storage';\nimport { SettingsIDB } from '../models/settings.schema';\n\n@Injectable({providedIn : 'root'})\nexport class SettingsIndexedDBService extends IndexedDBService<SettingsIDB> implements IndexedDBFactoryService {\n\n  private translate: TranslateService;\n\n  constructor(injector: Injector) {\n    super(injector, 'do-core', 1, '#do-settings');\n    this.translate = injector.get(TranslateService);\n  }\n\n  public loginStorage(response: any): void {\n    oauthInfoModels.forEach(data => {\n      if (response[data.key]) {\n        if (data.type === TypeDataOauth.SETTINGS) {\n          this.put(data.key, data.string ? response[data.key] : JSON.stringify(response[data.key])).then();\n          if (data.key === 'locale') {\n            this.translate.getTranslation(response[data.key]).subscribe((lang: any) => {\n              this.translate.use(response[data.key]);\n              this.translate.setTranslation(response[data.key], lang, true);\n            });\n          }\n        }\n      }\n    });\n  }\n\n}\n","import { Injectable, Inject, OnDestroy } from '@angular/core';\nimport { HttpHeaders, HttpResponse, HttpRequest } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { Idle, DEFAULT_INTERRUPTSOURCES } from '@ng-idle/core';\nimport {\n    HTTP_SERVICE, APIModel, signatureHeader,\n    HttpFactoryService, API,\n    SecurityResourceModel, OAUTH_INFO, oauthInfo } from '@dongkap/do-core';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthTokenService implements OnDestroy {\n\n    private timer: any;\n    protected destroy$: Subject<any> = new Subject<any>();\n\n    constructor(@Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n        @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n        @Inject(API)private apiPath: APIModel,\n        private router: Router,\n        private authIndexedDB: AuthIndexedDBService,\n        private profileIndexedDB: ProfileIndexedDBService,\n        private settingsIndexedDB: SettingsIndexedDBService,\n        private idle: Idle) {\n        idle.setIdle(oauthResource['session_idle']);\n        idle.setTimeout(oauthResource['session_timeout']);\n        idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n        idle.onTimeout.subscribe(() => {\n            /* console.log('[DONGKAP] Session Timeout'); */\n            this.logout();\n        });\n        idle.onIdleEnd.subscribe(() => {\n            /* console.log('[DONGKAP] Session Idle End'); */\n        });\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.timer);\n        this.destroy$.next(true);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    public login(username: string, password: string): Promise<any> {\n        this.authIndexedDB.logout();\n        return this.httpBaseService.\n        HTTP_BASE(this.apiPath['auth']['token'],\n            this.getAuthBody(username, password).toString(),\n            this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .toPromise()\n                .then((response: HttpResponse<any>) => {\n                    this.idle.setIdle(+response['expires_in']);\n                    this.idle.watch();\n                    /* console.log('[DONGKAP] Session Idle Start'); */\n                    /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                    this.authIndexedDB.loginStorage(response);\n                    this.profileIndexedDB.loginStorage(response);\n                    this.settingsIndexedDB.loginStorage(response);\n                });\n    }\n\n    public refresh(): Observable<any> {\n        return this.getBodyRefresh().pipe(switchMap((body: any) => {\n            return this.httpBaseService.\n            HTTP_BASE(this.apiPath['auth']['token'],\n                body,\n                this.getAuthHeader())\n                .pipe(takeUntil(this.destroy$))\n                .pipe(map((response: any) => {\n                    this.idle.setIdle(response['expires_in']);\n                    this.authIndexedDB.logout();\n                    this.authIndexedDB.loginStorage(response);\n                }));\n        }));\n    }\n\n    public logout() {\n        this.timer = setInterval(() => {\n            this.doLogout();\n        }, 5000);\n        this.httpBaseService.HTTP_AUTH(this.apiPath['security']['revoke'])\n            .pipe(takeUntil(this.destroy$))\n            .subscribe(() => {\n                this.doLogout();\n            });\n    }\n\n    private doLogout() {\n        this.authIndexedDB.logout();\n        this.profileIndexedDB.logout();\n        clearInterval(this.timer);\n        this.idle.stop();\n        this.router.navigate(['/auth']);\n    }\n\n    public async isLogin(): Promise<boolean> {\n        return await this.authIndexedDB.isLogin();\n    }\n\n    public oauthHeaders(request: HttpRequest<any>): Observable<HttpRequest<any>> {\n        const result$: Subject<HttpRequest<any>> = new Subject<HttpRequest<any>>();\n        let httpHeaders: HttpHeaders = request.headers ? request.headers : new HttpHeaders();\n        httpHeaders = httpHeaders.has(signatureHeader.authorization) ?\n                        httpHeaders.delete(signatureHeader.authorization) : httpHeaders;\n        Promise.all([\n            this.authIndexedDB.getEnc(oauthInfo.token_type),\n            this.authIndexedDB.getEnc(oauthInfo.access_token)])\n        .then((value: string[]) => {\n            httpHeaders = httpHeaders.set(signatureHeader.authorization, value[0] + ' ' + value[1]);\n            result$.next(request.clone({ headers: httpHeaders }));\n        });\n        return result$.asObservable();\n    }\n\n    private getAuthHeader(): HttpHeaders {\n        return new HttpHeaders({\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' +\n                btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n            'Accept': 'application/json',\n        });\n    }\n\n    private getAuthBody(username: string, password: string): URLSearchParams {\n        const body = new URLSearchParams();\n        body.append('client_id', this.oauthResource['client_id']);\n        body.append('grant_type', this.oauthResource['grant_type']);\n        body.append('username', username);\n        body.append('password', password);\n        return body;\n    }\n\n    private getBodyRefresh(): Observable<string> {\n        const result$: Subject<string> = new Subject<string>();\n        this.authIndexedDB.getEnc(oauthInfo.refresh_token).then((value: string) => {\n            const body: URLSearchParams = new URLSearchParams();\n            body.append('client_id', this.oauthResource['client_id']);\n            body.append('grant_type', 'refresh_token');\n            body.append('refresh_token', value);\n            result$.next(body.toString());\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable, Inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { USER_INFO, UserInfo } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService,\n        @Inject(USER_INFO) private authService: UserInfo) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (!value) {\n                this.router.navigate(['/auth']);\n            } else {\n                if (state.url !== '/auth/logout') this.authService.loadPhotoUser();\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivate } from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class UnauthorizeGuardService implements CanActivate {\n    constructor(private router: Router, private authTokenService: AuthTokenService) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(!value);\n            if (value) {\n                this.router.navigate(['/app']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { Router } from '@angular/router';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { CanActivateChild } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { EncryptionService } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthGuardChildService implements CanActivateChild {\n    constructor(\n        private router: Router,\n        private authTokenService: AuthTokenService,\n        private enc: EncryptionService,\n        private storage: AuthIndexedDBService) {}\n\n    canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\n        const result$: Subject<boolean> = new Subject<boolean>();\n        this.authTokenService.isLogin().then((value: boolean) => {\n            result$.next(value);\n            if (route.data) {\n                Promise.all([\n                    this.storage.getEnc('menus'),\n                    this.storage.getEnc('extras'),\n                ]).then((strg: string[]) => {\n                    if (!(strg[0].includes(route.data['code']) || strg[1].includes(route.data['code']))) {\n                        this.router.navigate(['/app/home']);\n                    }\n                    return result$.asObservable();\n                });\n            }\n            if (!value) {\n                this.router.navigate(['/auth']);\n            }\n        });\n        return result$.asObservable();\n    }\n\n}\n","import { Component, Input } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'do-terms-conditions',\n  templateUrl: 'terms-conditions.component.html',\n  styleUrls: ['terms-conditions.component.scss'],\n})\nexport class TermsConditionsComponent {\n\n  @Input() content: string;\n  @Input() action: 'Agree' | 'Close' = 'Agree';\n\n  constructor(protected ref: NbDialogRef<TermsConditionsComponent>) {\n  }\n\n  submit() {\n    this.ref.close(true);\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NbAuthSocialLink } from '@nebular/auth';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  API,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { AuthTokenService } from '../../services/auth-token.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@Component({\n    selector: 'do-login-page',\n    styleUrls: ['login-page.component.scss'],\n    templateUrl: 'login-page.component.html',\n})\nexport class LoginPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonLogin: boolean = false;\n  private progressBar: number = 25;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  public form: FormGroup = new FormGroup({\n    username: new FormControl(),\n    password: new FormControl(),\n  });\n\n  private urlAuthorizeGoogle: string = this.httpBaseService.API(this.apiPath['auth']['authorize']) +\n    '/google?redirect_uri=' +\n    `${document.getElementsByTagName('base')[0].href}auth/callback`;\n\n  public socialLinks: NbAuthSocialLink[] = [\n    {\n      url: this.urlAuthorizeGoogle,\n      target: '_self',\n      icon: 'google',\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private dialogService: NbDialogService,\n    private translate: TranslateService,\n    private authTokenService: AuthTokenService,\n    @Inject(API) private apiPath: APIModel,\n    @Inject(HTTP_SERVICE) private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    route: ActivatedRoute) {\n    if (route.snapshot.queryParams['error']) {\n      console.log(route.snapshot.queryParams['error']);\n      this.responseError = 'error.' + route.snapshot.queryParams['error'];\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public login() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n      this.buttonLogin = true;\n      this.authTokenService.login(\n        this.form.get('username').value,\n        this.form.get('password').value)\n        .then(() => {\n          this.responseError = null;\n          this.progressBar = 90;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          this.progressBar = 0;\n          this.router.navigate(['/app/home']);\n        })\n        .catch((error: any) => {\n          if (!(error instanceof HttpErrorResponse)) {\n            const response: ApiBaseResponse = (<ApiBaseResponse> error);\n            this.responseError = response.respStatusMessage[response.respStatusCode];\n          }\n          this.buttonLogin = false;\n          this.progressBar = 85;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          document.querySelectorAll('.pace-running').forEach(pace => {\n            pace.className = pace.className.replace('pace-running', 'pace-done');\n          });\n          document.querySelectorAll('.pace-active').forEach(pace => {\n            pace.className = pace.className.replace('pace-active', 'pace-inactive');\n          });\n          this.progressBar = 0;\n        });\n      if (this.progressBar >= 35 && this.progressBar < 65) {\n        this.progressBar = 65;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n    }\n  }\n\n  get hasErrorUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].invalid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].valid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasErrorPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  public onClickTermsConditions() {\n    const data: any = {\n      'parameterCode': 'TERMS_CONDITIONS.DONGKAP'\n    };\n    const httpHeaders: HttpHeaders = new HttpHeaders({\n      'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n      'Content-Type': 'application/json',\n      'Accept-Language': this.translate.currentLang,\n    });\n    this.httpBaseService.HTTP_BASE(this.apiPath['openapi']['parameter'], data, httpHeaders)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.dialogService.open(TermsConditionsComponent, {\n        context: {\n          content: response['parameterValue'],\n          action: 'Close',\n        },\n        });\n    });\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { AuthTokenService } from '../../services/auth-token.service';\n\n@Component({\n    selector: 'do-logout',\n    styleUrls: ['logout.component.scss'],\n    templateUrl: 'logout.component.html',\n})\nexport class LogoutComponent {\n\n    constructor(private authTokenService: AuthTokenService) {\n        this.authTokenService.logout();\n    }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'do-auth',\n  styleUrls: ['auth.component.scss'],\n  templateUrl: 'auth.component.html',\n})\nexport class AuthComponent implements OnDestroy {\n\n    alive: boolean;\n    subscription: any;\n    authenticated: boolean;\n    token: string;\n\n    constructor(private location: Location) {}\n\n    public back(): boolean {\n        this.location.back();\n        return false;\n    }\n\n    ngOnDestroy(): void {\n        this.alive = false;\n    }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  ValidatorFn,\n  AbstractControl,\n  AsyncValidatorFn,\n} from '@angular/forms';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { of, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, first, switchMap, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-common';\nimport { TermsConditionsComponent } from '../terms-conditions/terms-conditions.component';\n\n@Component({\n    selector: 'do-register-page',\n    styleUrls: ['register-page.component.scss'],\n    templateUrl: 'register-page.component.html',\n})\nexport class RegisterPageComponent implements OnDestroy {\n\n  public patternFullname: string = Pattern.FULLNAME;\n  public patternUsername: string = Pattern.USERNAME;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgFullname: string;\n  public errorMsgUsername: string;\n  public errorMsgEmail: string;\n  public errorMsgPassword: string;\n  public errorMsgConfirmPassword: string;\n  public paramMsgUsername: any;\n  public paramMsgEmail: any;\n  public minlengthUsername: number = 4;\n  public minlengthEmail: number = 5;\n\n  public form: FormGroup = new FormGroup({\n    fullname: new FormControl(),\n    username: new FormControl(),\n    email: new FormControl(),\n    password: new FormControl(),\n    confirmPassword: new FormControl(),\n    terms: new FormControl(),\n    recaptcha: new FormControl(),\n  });\n\n  public responseError: any;\n  public buttonRegister: boolean = false;\n  private progressBar: number = 25;\n  private isCheckUsername: boolean = true;\n  private isCheckEmail: boolean = true;\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(private router: Router,\n    private enc: EncryptionService,\n    private toastr: DoToastrService,\n    private dialogService: NbDialogService,\n    private translate: TranslateService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public register() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n\n      this.responseError = null;\n      const data: any = this.form.value;\n      data['password'] = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['password'].value);\n      data['confirmPassword'] = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonRegister = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['signup'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.progressBar = 90;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_REGISTERED) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonRegister = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonRegister = false;\n          }\n        },\n        (error: any) => {\n          this.buttonRegister = false;\n          this.progressBar = 85;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          document.querySelectorAll('.pace-running').forEach(pace => {\n            pace.className = pace.className.replace('pace-running', 'pace-done');\n          });\n          document.querySelectorAll('.pace-active').forEach(pace => {\n            pace.className = pace.className.replace('pace-active', 'pace-inactive');\n          });\n          this.progressBar = 0;\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              switch (error['respStatusCode']) {\n                case ResponseCode.ERR_SCR0005.toString():\n                  this.form.controls['password'].setErrors({\n                    'invalid': true,\n                  });\n                  break;\n                case ResponseCode.ERR_SCR0011.toString():\n                  this.form.controls['confirmPassword'].setErrors({\n                    'equal': true,\n                  });\n                  break;\n                default:\n                  break;\n              }\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          } else {\n          }\n        });\n    }\n  }\n\n  get hasErrorFullname(): boolean {\n    if (this.form.controls['fullname'].errors && this.form.controls['fullname'].invalid && this.form.controls['fullname'].touched) {\n      if (this.form.controls['fullname'].errors['required'])\n        this.errorMsgFullname = 'error.fullname.required';\n      else\n        this.errorMsgFullname = 'error.fullname.invalid';\n    } else {\n      this.errorMsgFullname = null;\n    }\n    return (\n      this.form.controls['fullname'] &&\n      this.form.controls['fullname'].invalid &&\n      this.form.controls['fullname'].touched\n    );\n  }\n\n  get hasSuccessFullname(): boolean {\n    return (\n      this.form.controls['fullname'] &&\n      this.form.controls['fullname'].valid &&\n      this.form.controls['fullname'].touched\n    );\n  }\n\n  get hasErrorUsername(): boolean {\n    if (this.form.controls['username'].errors && this.form.controls['username'].invalid && this.form.controls['username'].touched) {\n      if (this.form.controls['username'].errors['required'])\n        this.errorMsgUsername = 'error.username.required';\n      else if (this.form.controls['username'].errors['not-available']) {\n        this.errorMsgUsername = 'error.username.not-available';\n        this.paramMsgUsername = {\n          value: this.form.controls['username'].value,\n        };\n      } else if (this.form.controls['username'].errors['timeout'])\n        this.errorMsgUsername = 'error.0';\n      else if (this.form.controls['username'].errors['error'])\n        this.errorMsgUsername = 'error.500';\n      else\n        this.errorMsgUsername = 'error.username.invalid';\n    } else {\n      if ((this.form.controls['username'].touched || this.form.controls['username'].dirty) && this.isCheckUsername) {\n        this.isCheckUsername = false;\n        this.form.controls['username'].setAsyncValidators([userValidator(this.oauthResource, this.httpBaseService, this.apiPath)]);\n        this.form.controls['username'].updateValueAndValidity();\n      }\n      this.errorMsgUsername = null;\n    }\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].invalid &&\n      this.form.controls['username'].touched\n    );\n  }\n\n  get hasSuccessUsername(): boolean {\n    return (\n      this.form.controls['username'] &&\n      this.form.controls['username'].valid &&\n      this.form.controls['username'].touched\n      );\n  }\n\n  get hasErrorEmail(): boolean {\n    if (this.form.controls['email'].errors && this.form.controls['email'].invalid && this.form.controls['email'].touched) {\n      if (this.form.controls['email'].errors['required'])\n        this.errorMsgEmail = 'error.email.required';\n      else if (this.form.controls['email'].errors['not-available']) {\n        this.errorMsgEmail = 'error.email.not-available';\n        this.paramMsgEmail = {\n          value: this.form.controls['email'].value,\n        };\n      } else if (this.form.controls['email'].errors['timeout'])\n        this.errorMsgEmail = 'error.0';\n      else if (this.form.controls['email'].errors['error'])\n        this.errorMsgEmail = 'error.500';\n      else\n        this.errorMsgEmail = 'error.email.invalid';\n    } else {\n      if ((this.form.controls['email'].touched || this.form.controls['email'].dirty) && this.isCheckEmail) {\n        this.isCheckEmail = false;\n        this.form.controls['email'].setAsyncValidators([userValidator(this.oauthResource, this.httpBaseService, this.apiPath)]);\n        this.form.controls['email'].updateValueAndValidity();\n      }\n      this.errorMsgEmail = null;\n    }\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].invalid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  get hasSuccessEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].valid &&\n      this.form.controls['email'].touched\n      );\n  }\n\n  get hasErrorPassword(): boolean {\n    if (this.form.controls['password'].errors && this.form.controls['password'].invalid && this.form.controls['password'].touched) {\n      this.errorMsgPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgPassword = null;\n    }\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].invalid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasSuccessPassword(): boolean {\n    return (\n      this.form.controls['password'] &&\n      this.form.controls['password'].valid &&\n      this.form.controls['password'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword-register';\n    } else {\n      if (this.form.controls['password'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword-register';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  onCheckedChange(){\n    if (!this.form.controls['terms'].value) {\n      this.form.controls['terms'].setValue(null);\n    }\n  }\n\n  onClickTermsConditions(){\n    const data: any = {\n      'parameterCode': 'TERMS_CONDITIONS.DONGKAP'\n    };\n    const httpHeaders: HttpHeaders = new HttpHeaders({\n      'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n      'Content-Type': 'application/json',\n      'Accept-Language': this.translate.currentLang,\n    });\n    this.httpBaseService.HTTP_BASE(this.apiPath['openapi']['parameter'], data, httpHeaders)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.dialogService.open(TermsConditionsComponent, {\n        context: {\n          content: response['parameterValue'],\n        },\n        })\n        .onClose.subscribe((terms: string) => {\n        if (terms) {\n          this.form.controls['terms'].setValue(true);\n        }\n      });\n    });\n  }\n\n  onKeyDownUsername(event: KeyboardEvent){\n    if (event.key) {\n      if (!event.key.match(/[!@#$%^&*()?\":{}|<>\\[\\];\\\\=~`]/g)) {\n        if (([\n          'TAB',\n          'ESCAPE',\n          'ENTER',\n          'HOME',\n          'END',\n          'ARROWLEFT',\n          'ARROWRIGHT',\n          'ARROWUP',\n          'ARROWDOWN',\n          'PAGEUP',\n          'PAGEDOWN'].indexOf(event.key.toUpperCase()) === -1) &&\n        !event.ctrlKey && !event.metaKey && !event.altKey)\n            this.isCheckUsername = true;\n      }\n    }\n  }\n\n  onKeyDownEmail(event: KeyboardEvent){\n    if (event.key) {\n      if (!event.key.match(/[!#$%^&*()?\":{}|<>\\[\\];\\\\=~`]/g)) {\n        if (([\n          'TAB',\n          'ESCAPE',\n          'ENTER',\n          'HOME',\n          'END',\n          'ARROWLEFT',\n          'ARROWRIGHT',\n          'ARROWUP',\n          'ARROWDOWN',\n          'PAGEUP',\n          'PAGEDOWN'].indexOf(event.key.toUpperCase()) === -1) &&\n        !event.ctrlKey && !event.metaKey && !event.altKey)\n          this.isCheckEmail = true;\n      }\n    }\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['password'].value !== form.controls['confirmPassword'].value)\n          return { equal: true };\n    }\n    return null;\n  };\n}\n\nexport function userValidator(\n  oauthResource: SecurityResourceModel,\n  httpBaseService: HttpFactoryService,\n  apiPath: APIModel): AsyncValidatorFn {\n  return (control: AbstractControl) => {\n    if (!control.valueChanges) {\n      return of(null);\n    } else {\n      return control.valueChanges.pipe(\n        debounceTime(500),\n        distinctUntilChanged(),\n        switchMap(() => {\n          const validatorSubject$: Subject<any> = new Subject<ApiBaseResponse>();\n          const httpHeaders: HttpHeaders = new HttpHeaders({\n            'Authorization': 'Basic ' + btoa(oauthResource['client_id'] + ':' + oauthResource['client_secret']),\n            'Content-Type': 'application/json',\n          });\n          const data: any = {\n            'user': control.value,\n          };\n          let dataValidator: any;\n          if (control.value){\n            httpBaseService.HTTP_BASE(apiPath['auth']['check-user'], data, httpHeaders).subscribe(\n              (response: any) => {\n                if (response['respStatusCode'] === ResponseCode.OK_SCR012.toString()) {\n                  validatorSubject$.next(null);\n                } else {\n                  dataValidator = {\n                    error: true,\n                  };\n                  validatorSubject$.next(dataValidator);\n                }\n              },\n              (error: any) => {\n                if (!(error instanceof HttpErrorResponse)) {\n                  dataValidator = {\n                    error: true,\n                  };\n                } else {\n                  if (error.status === 302) {\n                    dataValidator = {\n                      'not-available': true,\n                    };\n                  } else {\n                    dataValidator = {\n                      timeout: true,\n                    };\n                  }\n                }\n                validatorSubject$.next(dataValidator);\n              });\n          }\n          return validatorSubject$.asObservable();\n        })).pipe(first());\n    }\n  };\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-common';\n\n@Component({\n    selector: 'do-request-forgot-page',\n    styleUrls: ['request-forgot-page.component.scss'],\n    templateUrl: 'request-forgot-page.component.html',\n})\nexport class RequestForgotPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n\n  public patternEmail: string = Pattern.EMAIL;\n\n  public form: FormGroup = new FormGroup({\n    email: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(private router: Router,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {}\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forgotPassword() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n\n      this.responseError = null;\n\n      const urlForgotPassword: string = `${document.getElementsByTagName('base')[0].href}auth/forgot-password`;\n      const data: any = {\n        'email': this.form.controls['email'].value,\n        'urlForgotPassword': urlForgotPassword,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['request-forgot-password'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.progressBar = 90;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_REQUEST_FORGOT_PASSWORD) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 85;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          document.querySelectorAll('.pace-running').forEach(pace => {\n            pace.className = pace.className.replace('pace-running', 'pace-done');\n          });\n          document.querySelectorAll('.pace-active').forEach(pace => {\n            pace.className = pace.className.replace('pace-active', 'pace-inactive');\n          });\n          this.progressBar = 0;\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          } else {\n          }\n        });\n    }\n  }\n\n  get hasErrorEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].invalid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n  get hasSuccessEmail(): boolean {\n    return (\n      this.form.controls['email'] &&\n      this.form.controls['email'].valid &&\n      this.form.controls['email'].touched\n    );\n  }\n\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { FormGroup, FormControl, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  API,\n  EncryptionService,\n  HTTP_SERVICE,\n  OAUTH_INFO,\n  Pattern,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { APIModel } from '@dongkap/do-core';\nimport { HttpFactoryService } from '@dongkap/do-core';\nimport { SecurityResourceModel } from '@dongkap/do-core';\nimport { DoToastrService } from '@dongkap/do-common';\n\n@Component({\n    selector: 'do-forgot-page',\n    styleUrls: ['forgot-page.component.scss'],\n    templateUrl: 'forgot-page.component.html',\n})\nexport class ForgotPageComponent implements OnDestroy {\n\n  public responseError: any;\n  public buttonForgotPassword: boolean = false;\n  private progressBar: number = 25;\n\n  public patternPassword: string = Pattern.PASSWORD_MEDIUM;\n  public errorMsgNewPassword: string;\n  public errorMsgConfirmPassword: string;\n\n  private verificationId: string;\n  private verificationCode: string;\n\n  public form: FormGroup = new FormGroup({\n    newPassword: new FormControl(),\n    confirmPassword: new FormControl(),\n  });\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(private router: Router,\n    private route: ActivatedRoute,\n    private toastr: DoToastrService,\n    private translate: TranslateService,\n    private enc: EncryptionService,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel) {\n    if (this.route.snapshot.params['id'] !== null && this.route.snapshot.params['code'] !== null) {\n      this.verificationId = this.route.snapshot.params['id'];\n      this.verificationCode = this.route.snapshot.params['code'];\n    } else {\n      this.router.navigate(['/auth/login']);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n  public forgotPassword() {\n    if (!this.form.invalid) {\n      document.querySelectorAll('.pace-done').forEach(pace => {\n        pace.className = pace.className.replace('pace-done pace-done', 'pace-running');\n        pace.className = pace.className.replace('pace-done', 'pace-running');\n      });\n      document.querySelectorAll('.pace-inactive').forEach(pace => {\n        pace.className = pace.className.replace('pace-inactive pace-inactive', 'pace-active');\n        pace.className = pace.className.replace('pace-inactive', 'pace-active');\n      });\n      const progressDOM = document.getElementsByClassName('pace-progress').item(0) as HTMLElement;\n      if (this.progressBar < 35) {\n        this.progressBar = 35;\n        progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n        progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n        progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n      }\n\n      this.responseError = null;\n\n      const newPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['newPassword'].value);\n      const confirmPassword: string = this.enc.encryptAES(this.oauthResource['aes_key'], this.form.controls['confirmPassword'].value);\n      const data: any = {\n        'verificationId': this.verificationId,\n        'verificationCode': this.verificationCode,\n        'newPassword': newPassword,\n        'confirmPassword': confirmPassword,\n      };\n      const httpHeaders: HttpHeaders = new HttpHeaders({\n        'Authorization': 'Basic ' + btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Content-Type': 'application/json',\n        'Accept-Language': this.translate.currentLang,\n      });\n      this.buttonForgotPassword = true;\n      this.httpBaseService.HTTP_BASE(this.apiPath['auth']['forgot-password'], data, httpHeaders)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (response: ApiBaseResponse) => {\n          if (response) {\n            this.toastr.showI18n(response.respStatusMessage[response.respStatusCode]);\n            this.progressBar = 90;\n            progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n            progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n            progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n            this.progressBar = 0;\n            if (response.respStatusCode === ResponseCode.OK_FORGOT_PASSWORD) {\n              this.router.navigate(['/auth/login']);\n            } else {\n              this.form.reset();\n              this.buttonForgotPassword = false;\n            }\n          } else {\n            this.form.reset();\n            this.buttonForgotPassword = false;\n          }\n        },\n        (error: any) => {\n          this.buttonForgotPassword = false;\n          this.progressBar = 85;\n          progressDOM.style.transform = 'translate3d(' + this.progressBar + '%, 0px, 0px)';\n          progressDOM.getAttributeNode('data-progress-text').value = this.progressBar + '%';\n          progressDOM.getAttributeNode('data-progress').value = this.progressBar.toString();\n          document.querySelectorAll('.pace-running').forEach(pace => {\n            pace.className = pace.className.replace('pace-running', 'pace-done');\n          });\n          document.querySelectorAll('.pace-active').forEach(pace => {\n            pace.className = pace.className.replace('pace-active', 'pace-inactive');\n          });\n          this.progressBar = 0;\n\n          if (!(error instanceof HttpErrorResponse)) {\n            if (error['respStatusCode']) {\n              this.responseError = error['respStatusMessage'][error['respStatusCode']];\n            }\n          }\n        });\n    }\n  }\n\n  get hasErrorNewPassword(): boolean {\n    if (this.form.controls['newPassword'].errors &&\n      this.form.controls['newPassword'].invalid &&\n      this.form.controls['newPassword'].touched) {\n      this.errorMsgNewPassword = 'error.pattern.Password';\n    } else {\n      this.errorMsgNewPassword = null;\n    }\n    return (\n      this.form.controls['newPassword'] &&\n      this.form.controls['newPassword'].invalid &&\n      this.form.controls['newPassword'].touched\n    );\n  }\n\n  get hasSuccessNewPassword(): boolean {\n    return (\n      this.form.controls['newPassword'] &&\n      this.form.controls['newPassword'].valid &&\n      this.form.controls['newPassword'].touched\n    );\n  }\n\n  get hasErrorConfirmPassword(): boolean {\n    if (\n      this.form.controls['confirmPassword'].errors &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched) {\n      this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n    } else {\n      if (this.form.controls['newPassword'].value !== this.form.controls['confirmPassword'].value) {\n        this.errorMsgConfirmPassword = 'error.equal.confirmPassword';\n        this.form.controls['confirmPassword'].setValidators([confirmPasswordValidator(this.form)]);\n        this.form.controls['confirmPassword'].updateValueAndValidity();\n      } else {\n        this.errorMsgConfirmPassword = null;\n      }\n    }\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].invalid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n  get hasSuccessConfirmPassword(): boolean {\n    return (\n      this.form.controls['confirmPassword'] &&\n      this.form.controls['confirmPassword'].valid &&\n      this.form.controls['confirmPassword'].touched\n    );\n  }\n\n}\n\nexport function confirmPasswordValidator(form: FormGroup): ValidatorFn {\n  return (control: AbstractControl): { [key: string]: any } | null => {\n    if (form.controls) {\n      if (form.controls['newPassword'].value !== form.controls['confirmPassword'].value)\n          return { equal: true };\n    }\n    return null;\n  };\n}\n","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject } from 'rxjs'\nimport { takeUntil } from 'rxjs/operators';;\nimport { Idle } from '@ng-idle/core';\nimport { API, APIModel, HttpFactoryService, HTTP_SERVICE, OAUTH_INFO, SecurityResourceModel } from '@dongkap/do-core';\nimport { AuthIndexedDBService } from '../../storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from '../../storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from '../../storage/settings-indexeddb.service';\n\n@Component({\n  selector: 'do-oauth2-callback',\n  styleUrls: ['oauth2-callback.component.scss'],\n  templateUrl: 'oauth2-callback.component.html',\n})\nexport class OAuth2CallbackComponent implements OnDestroy {\n\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(\n    private router: Router,\n    route: ActivatedRoute,\n    @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService,\n    @Inject(OAUTH_INFO)private oauthResource: SecurityResourceModel,\n    @Inject(API)private apiPath: APIModel,\n    private authIndexedDB: AuthIndexedDBService,\n    private profileIndexedDB: ProfileIndexedDBService,\n    private settingsIndexedDB: SettingsIndexedDBService,\n    private idle: Idle) {\n    if (route.snapshot.queryParams['access_token']) {\n      this.extractToken(route.snapshot.queryParams['access_token']);\n    } else if (route.snapshot.queryParams['error']) {\n      this.router.navigate(['/auth'], { queryParams: { error: route.snapshot.queryParams['error'] }});\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private extractToken(accessToken: string) {\n    return this.httpBaseService.\n    HTTP_BASE(this.apiPath['auth']['extract-token'],\n        this.getAuthBody(accessToken).toString(),\n        this.getAuthHeader())\n            .pipe(takeUntil(this.destroy$))\n            .toPromise()\n            .then((response: HttpResponse<any>) => {\n                this.idle.setIdle(+response['expires_in']);\n                this.idle.watch();\n                /* console.log('[DONGKAP] Session Idle Start'); */\n                /* console.log('[DONGKAP] Session Timeout in ' + response['expires_in'] + ' seconds'); */\n                this.authIndexedDB.loginStorage(response);\n                this.profileIndexedDB.loginStorage(response);\n                this.settingsIndexedDB.loginStorage(response);\n                this.router.navigate(['/app/home']);\n            })\n            .catch((error: any) => {\n              this.router.navigate(['/auth']);\n            });\n  }\n\n  private getAuthBody(accessToken: string): URLSearchParams {\n    const body = new URLSearchParams();\n    body.append('access_token', accessToken);\n    return body;\n  }\n\n  private getAuthHeader(): HttpHeaders {\n    return new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded',\n        'Authorization': 'Basic ' +\n            btoa(this.oauthResource['client_id'] + ':' + this.oauthResource['client_secret']),\n        'Accept': 'application/json',\n    });\n}\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AuthComponent } from './layout/auth.component';\nimport { LoginPageComponent } from './auth/login/login-page.component';\nimport { UnauthorizeGuardService } from './services/unauth-guard.service';\nimport { LogoutComponent } from './auth/logout/logout.component';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { RegisterPageComponent } from './auth/register/register-page.component';\nimport { RequestForgotPageComponent } from './auth/forgot/request-forgot-page.component';\nimport { ForgotPageComponent } from './auth/forgot/forgot-page.component';\nimport { OAuth2CallbackComponent } from './auth/oauth2/oauth2-callback.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: AuthComponent,\n  children: [\n    {\n      path: '',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'login',\n      component: LoginPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'register',\n      component: RegisterPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'forgot-password',\n      component: RequestForgotPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'forgot-password/:id/:code',\n      component: ForgotPageComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'callback',\n      component: OAuth2CallbackComponent,\n      canActivate: [UnauthorizeGuardService],\n    },\n    {\n      path: 'logout',\n      component: LogoutComponent,\n      canActivate: [AuthGuardService],\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoAuthRoutingModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'do-auth-block',\n  styleUrls: ['auth-block.component.scss'],\n  template: `\n    <ng-content></ng-content>\n  `,\n})\nexport class AuthBlockComponent {\n\n}\n","import { NgModule } from '@angular/core';\nimport {\n  NbCardModule,\n  NbLayoutModule,\n  NbIconModule,\n} from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RouterModule } from '@angular/router';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { AuthComponent } from './auth.component';\nimport { AuthBlockComponent } from './auth-block/auth-block.component';\n\n@NgModule({\n  declarations: [\n    AuthComponent,\n    AuthBlockComponent,\n  ],\n  imports: [\n    NbLayoutModule,\n    NbCardModule,\n    NbIconModule,\n    CommonModule,\n    HttpClientModule,\n    RouterModule,\n    DoThemeModule,\n  ],\n  exports: [\n    AuthComponent,\n    AuthBlockComponent,\n  ],\n})\nexport class DoLayoutAuthModule {}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { DatePipe } from '@angular/common';\nimport { Observable, of, combineLatest } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { signatureHeader, SecurityResourceModel, OAUTH_INFO, oauthInfo } from '@dongkap/do-core';\nimport { DateFormat, EncryptionService } from '@dongkap/do-core';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthSignatureService {\n\n    constructor(\n        private translate: TranslateService,\n        private enc: EncryptionService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel,\n        private authStorage: AuthIndexedDBService) {}\n\n    public signHeaders(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return combineLatest([\n            this.key(),\n            this.signature(this.getPath(req.url)),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            if (signatureHeader.signature) {\n                let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n                httpHeaders.keys().forEach((key: string) => {\n                    if (key === signatureHeader.key)\n                        httpHeaders = httpHeaders.delete(signatureHeader.key);\n                    if (key === signatureHeader.timestamp)\n                        httpHeaders = httpHeaders.delete(signatureHeader.timestamp);\n                    if (key === signatureHeader.signature)\n                        httpHeaders = httpHeaders.delete(signatureHeader.signature);\n                });\n                httpHeaders = httpHeaders.set(signatureHeader.key, value[0]);\n                httpHeaders = httpHeaders.set(signatureHeader.timestamp, this.timestamp());\n                httpHeaders = httpHeaders.set(signatureHeader.signature, value[1]);\n                return of(req.clone({ headers: httpHeaders }));\n            }\n            return of(req);\n        }));\n    }\n\n    public key(): Observable<string> {\n        return this.authStorage.getOfEnc(oauthInfo.public_key);\n    }\n\n    public timestamp(): string {\n        return Math.floor(new Date().getTime() / 1000).toString();\n    }\n\n    public date(): string {\n        return new DatePipe(this.translate.currentLang).transform(new Date(), DateFormat.DATE);\n    }\n\n    public signature(url: string): Observable<string> {\n        return combineLatest([\n            this.key(),\n            this.authStorage.getOfEnc(oauthInfo.access_token),\n        ]).pipe(\n            take(1),\n            switchMap((value: string[]) => {\n            const key = value[0] + ':' +\n                        this.timestamp() + ':' +\n                        // this.date() + ':' +\n                        url + ':' +\n                        value[1];\n            return of(this.enc.getHmacSha256(this.oauthResource['private_key'], key));\n        }));\n    }\n\n    private getPath(url: string): string {\n        return '/' + url\n        .replace(/^(http:\\/\\/www\\.|https:\\/\\/www\\.|http:\\/\\/|https:\\/\\/)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*(:[0-9]{1,5})?(\\/).*?/g, '');\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\n\n@Injectable()\nexport class HttpInterceptorTokenService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authToken: AuthTokenService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authToken.oauthHeaders(req).pipe(switchMap((reqAuth: any) => {\n                    return next.handle(reqAuth);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnDestroy, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader, SecurityResourceModel, OAUTH_INFO } from '@dongkap/do-core';\nimport { AuthSignatureService } from './auth-signature.service';\n\n@Injectable()\nexport class HttpInterceptorSignatureService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authSignature: AuthSignatureService,\n        @Inject(OAUTH_INFO) private oauthResource: SecurityResourceModel) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark) && this.oauthResource.signature) {\n                return this.authSignature.signHeaders(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { Injectable, Inject, LOCALE_ID } from '@angular/core';\nimport { HttpHeaders, HttpRequest } from '@angular/common/http';\nimport { Observable, of, from } from 'rxjs';\nimport { take, switchMap } from 'rxjs/operators';\nimport { Pattern } from '@dongkap/do-core';\nimport { SettingsIndexedDBService } from '../storage/settings-indexeddb.service';\n\n@Injectable()\nexport class AuthLanguageService {\n\n    constructor(@Inject(LOCALE_ID) private locale: string,\n        private settingsIndexedDB: SettingsIndexedDBService) {}\n\n    getLocale(req: HttpRequest<any>): Observable<HttpRequest<any>> {\n        return from(this.settingsIndexedDB.get('locale')).pipe(\n            take(1),\n            switchMap((value: any) => {\n            let httpHeaders: HttpHeaders = req.headers ? req.headers : new HttpHeaders();\n            const localeCode: string = value ?\n            (\n                value.match(new RegExp(Pattern.LOCALE, 'g')) ?\n                value :\n                this.locale\n            ) : this.locale;\n            httpHeaders = httpHeaders.append('Accept-Language', localeCode);\n            return of(req.clone({ headers: httpHeaders }));\n        }));\n    }\n\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { signatureHeader } from '@dongkap/do-core';\nimport { AuthLanguageService } from './auth-lang.service';\n\n@Injectable()\nexport class HttpInterceptorLangService implements HttpInterceptor, OnDestroy {\n\n    constructor(private authLanguage: AuthLanguageService) {}\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    public intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        if (req.headers) {\n            if (req.headers.has(signatureHeader.mark)) {\n                return this.authLanguage.getLocale(req).pipe(switchMap((value: HttpRequest<any>) => {\n                    return next.handle(value);\n                }));\n            }\n        }\n        return next.handle(req).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { HttpErrorResponse, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, EMPTY, Observable, throwError } from 'rxjs';\nimport { filter, take, switchMap, catchError } from 'rxjs/operators';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\nexport class HttpErrorHandler {\n\n    protected isRefreshingToken: boolean = false;\n    protected refreshTokenSubject: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\n    constructor(\n        protected translate: TranslateService,\n        protected authToken: AuthTokenService,\n        protected authStorage: AuthIndexedDBService,\n        protected authSignature: AuthSignatureService) {}\n\n    protected errorHandler(error: HttpErrorResponse, req: HttpRequest<any>, next: HttpHandler): Observable<any> {\n        let err: HttpErrorResponse = new HttpErrorResponse({\n            error: error.error,\n            headers: error.headers,\n            status: error.status,\n            statusText: error.statusText,\n            url: error.url,\n        });\n\n        if (error.error instanceof ArrayBuffer) {\n            const decodedString = String.fromCharCode.apply(null, new Uint8Array(error.error));\n            err = new HttpErrorResponse({\n                error: JSON.parse(decodedString),\n                headers: error.headers,\n                status: error.status,\n                statusText: error.statusText,\n                url: error.url,\n            });\n        }\n        switch (err.status) {\n            case 200:\n            case 201:\n            case 304:\n                return EMPTY;\n            case 400:\n                return this.error400(err);\n            case 401:\n                return this.error401(err, req, next);\n            case 404:\n            case 403:\n            case 500:\n            case 504:\n            case 0:\n                return throwError(this.errorDefault(err));\n            default:\n                break;\n        }\n        return throwError(err);\n    }\n\n    protected errorDefault(error: any | HttpErrorResponse): ApiBaseResponse {\n        let err: ApiBaseResponse = {\n            respStatusCode: error.status,\n            respStatusMessage: {},\n        };\n        err.respStatusMessage[err.respStatusCode] = error.statusText;\n        let msgKey: string = 'error.' + err.respStatusCode;\n        if (error.error) {\n            if (error.error['respStatusCode']) {\n                err = error.error;\n                msgKey = err.respStatusMessage[err.respStatusCode];\n            }\n        }\n        this.translate.get(msgKey).subscribe((result: string) => {\n            err.respStatusMessage[err.respStatusCode] = result;\n        });\n        return err;\n    }\n\n    protected error400(error: HttpErrorResponse): Observable<HttpEvent<any>> {\n        if (error.error['respStatusCode']) {\n            if (error.error['respStatusCode'] === 'invalid_grant') {\n                switch (error.error['respStatusMessage']['invalid_grant']) {\n                    case 'Bad credentials':\n                    case 'User account is locked':\n                    case 'User is disabled':\n                    case 'User account has expired':\n                    case 'User credentials have expired':\n                        return throwError(this.errorDefault(error));\n                    default:\n                        this.authToken.logout();\n                        return throwError(this.errorDefault(error));\n                }\n            } else {\n                return throwError(this.errorDefault(error));\n            }\n        }\n        return throwError(error);\n    }\n\n    protected error401 (error: HttpErrorResponse, request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        if (error.error) {\n            if (error.error['respStatusCode'] === 'invalid_token') {\n                if (!this.isRefreshingToken) {\n                    this.isRefreshingToken = true;\n                    this.refreshTokenSubject.next(null);\n                    return this.authToken.refresh().pipe(\n                        switchMap((response: any) => {\n                            this.isRefreshingToken = false;\n                            this.refreshTokenSubject.next(response);\n                            return this.authToken.oauthHeaders(request).pipe(\n                                switchMap((req: any) => {\n                                    request = req;\n                                    return this.authSignature.signHeaders(request).pipe(\n                                        switchMap((valReq: any) => {\n                                            return next.handle(valReq);\n                                        }),\n                                    );\n                                }));\n                        }),\n                        catchError((err: HttpErrorResponse) => {\n                            return this.errorHandler(err, request, next);\n                        }));\n                } else {\n                    const msg: string = error.error['respStatusMessage']['invalid_token'];\n                    if (msg.includes('expired')) {\n                        this.authToken.logout();\n                    } else {\n                        return this.refreshTokenSubject.pipe(\n                            filter(response => response != null),\n                            take(1),\n                            switchMap(() => {\n                                return this.authToken.oauthHeaders(request).pipe(\n                                    switchMap((req: any) => {\n                                        request = req;\n                                        return this.authSignature.signHeaders(request).pipe(\n                                            switchMap((valReq: any) => {\n                                                return next.handle(valReq);\n                                            }),\n                                        );\n                                    }));\n                            }));\n                    }\n                }\n            }\n        }\n        return throwError(error);\n    }\n}\n","import { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { catchError, takeUntil } from 'rxjs/operators';\nimport { TranslateService } from '@ngx-translate/core';\nimport { HttpErrorHandler } from './http-error.handler';\nimport { AuthTokenService } from './auth-token.service';\nimport { AuthSignatureService } from './auth-signature.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class HttpInterceptorErrorService extends HttpErrorHandler implements HttpInterceptor, OnDestroy {\n\n    constructor(\n        public translate: TranslateService,\n        public authToken: AuthTokenService,\n        public authStorage: AuthIndexedDBService,\n        public authSignature: AuthSignatureService) {\n        super(translate, authToken, authStorage, authSignature);\n    }\n\n    private destroy$: Subject<any> = new Subject<any>();\n\n    ngOnDestroy(): void {\n      this.destroy$.next(true);\n      this.destroy$.complete();\n      this.destroy$.unsubscribe();\n    }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe(\n            catchError(error => {\n                if (error instanceof HttpErrorResponse) {\n                    return this.errorHandler(error, req, next);\n                } else {\n                    return throwError(error);\n                }\n        })).pipe(takeUntil(this.destroy$));\n    }\n\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { API, APIModel, HTTP_SERVICE, HttpFactoryService, oauthInfo } from '@dongkap/do-core';\nimport { User, UserInfo } from '@dongkap/do-core';\nimport { ProfileIndexedDBService } from '../storage/profile-indexeddb.service';\nimport { AuthIndexedDBService } from '../storage/auth-indexeddb.service';\n\n@Injectable()\nexport class AuthUserService extends UserInfo {\n\n    constructor(\n        private profileIndexedDB: ProfileIndexedDBService,\n        private authIndexedDB: AuthIndexedDBService,\n        @Inject(API)private apiPath: APIModel,\n        @Inject(HTTP_SERVICE)private httpBaseService: HttpFactoryService) {\n            super();\n    }\n    private loaderUserSubject$ = new Subject<User>();\n\n    public loadPhotoUser(): void {\n        Promise.all([\n            this.profileIndexedDB.get('image-b64'),\n            this.profileIndexedDB.get('image'),\n            this.profileIndexedDB.get('name'),\n            this.authIndexedDB.getEnc('provider'),\n        ]).then((value: any[]) => {\n            if (!value[0]) {\n                if (value[3] === 'local') {\n                    if (value[1] && value[2]) {\n                        this.getImage(value[1], value[2]);\n                    } else {\n                        this.httpBaseService.HTTP_AUTH(\n                        this.apiPath['profile']['get-profile'])\n                        .subscribe((response: any) => {\n                            Promise.all([\n                                this.profileIndexedDB.put('name', response['name']),\n                                this.profileIndexedDB.put('email', response['email']),\n                                this.profileIndexedDB.put('image', response['image']),\n                            ]).then(() => {\n                                this.getImage(response['image'], response['name']);\n                            });\n                        });\n                    }\n                } else {\n                    const user: User = {\n                        name: value[2],\n                        picture: value[1],\n                    };\n                    this.loaderUserSubject$.next(user);\n                }\n            } else {\n                Promise.all([\n                    this.profileIndexedDB.get('name'),\n                    this.profileIndexedDB.get('image-b64'),\n                ]).then((profile: any[]) => {\n                    const user: User = {\n                        name: profile[0],\n                        picture: profile[1],\n                    };\n                    this.loaderUserSubject$.next(user);\n                });\n            }\n        });\n    }\n\n    public updatePhotoUser(file: File, checksum: string): Observable<User> {\n        if (file && checksum) {\n            let picture: string;\n            const imageBlob = new Blob([file], {\n                type: 'image/png',\n            });\n            this.profileIndexedDB.put(oauthInfo.image, checksum).then();\n            this.profileIndexedDB.put('image-blob', imageBlob).then();\n            this.profileIndexedDB.get('name').then((name: any) => {\n                const reader: FileReader = new FileReader();\n                reader.readAsDataURL(imageBlob);\n                reader.onloadend = () => {\n                    picture = reader.result.toString();\n                    const user: User = {\n                        'name': name,\n                        'picture': picture,\n                    };\n                    this.profileIndexedDB.put('image-b64', picture).then();\n                    this.loaderUserSubject$.next(user);\n                };\n            });\n        } else {\n            this.loaderUserSubject$.next(null);\n        }\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public updateNameUser(name: string): Observable<User> {\n        this.profileIndexedDB.put('name', name).then();\n        Promise.all([\n            this.profileIndexedDB.get('image-b64'),\n            this.profileIndexedDB.get('image'),\n        ]).then((value: any[]) => {\n            let picture: string;\n            if (value[0])\n                picture = value[0];\n            else\n                picture = value[1];\n            const user: User = {\n                'name': name,\n                'picture': picture,\n            };\n            this.loaderUserSubject$.next(user);\n        });\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    public getUser(): Observable<any> {\n        return this.loaderUserSubject$.asObservable();\n    }\n\n    private getImage(checksum: any, name: string) {\n        if (checksum != null) {\n            this.httpBaseService.HTTP_AUTH(\n            this.apiPath['file']['vw-photo-profile'], null, null, null,\n            [checksum], 'arraybuffer')\n            .pipe(map((response: any) => {\n                let picture: string;\n                const imageBlob = new Blob([response], {\n                    type: 'image/png',\n                });\n                this.profileIndexedDB.put('image-blob', imageBlob).then();\n                const reader: FileReader = new FileReader();\n                reader.readAsDataURL(imageBlob);\n                reader.onloadend = () => {\n                    picture = reader.result.toString();\n                    const user: User = {\n                        'name': name,\n                        'picture': picture,\n                    };\n                    this.profileIndexedDB.put('image-b64', picture).then();\n                    this.loaderUserSubject$.next(user);\n                };\n            })).subscribe();\n        }\n    }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport {\n  NbCheckboxModule,\n  NbAlertModule,\n  NbInputModule,\n  NbButtonModule,\n  NbIconModule,\n  NbDialogModule,\n  NbCardModule,\n  NbSpinnerModule,\n} from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RecaptchaFormsModule, RecaptchaModule } from 'ng-recaptcha';\nimport { AUTH_INDEXED_DB, PROFILE_INDEXED_DB, SETTINGS_INDEXED_DB, USER_INFO } from '@dongkap/do-core';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoToastrModule } from '@dongkap/do-common';\nimport { AuthGuardService } from './services/auth-guard.service';\nimport { UnauthorizeGuardService } from './services/unauth-guard.service';\nimport { AuthTokenService } from './services/auth-token.service';\nimport { AuthGuardChildService } from './services/auth-guard-child.service';\nimport { LoginPageComponent } from './auth/login/login-page.component';\nimport { LogoutComponent } from './auth/logout/logout.component';\nimport { DoAuthRoutingModule } from './do-auth-routing.module';\nimport { DoLayoutAuthModule } from './layout/do-layout-auth.module';\nimport { AuthSignatureService } from './services/auth-signature.service';\nimport { HttpInterceptorTokenService } from './services/http-interceptor-token.service';\nimport { HttpInterceptorSignatureService } from './services/http-interceptor-signature.service';\nimport { HttpInterceptorLangService } from './services/http-interceptor-lang.service';\nimport { HttpInterceptorErrorService } from './services/http-interceptor-error.service';\nimport { AuthUserService } from './services/auth-user.service';\nimport { AuthIndexedDBService } from './storage/auth-indexeddb.service';\nimport { ProfileIndexedDBService } from './storage/profile-indexeddb.service';\nimport { SettingsIndexedDBService } from './storage/settings-indexeddb.service';\nimport { AuthLanguageService } from './services/auth-lang.service';\nimport { RegisterPageComponent } from './auth/register/register-page.component';\nimport { RequestForgotPageComponent } from './auth/forgot/request-forgot-page.component';\nimport { ForgotPageComponent } from './auth/forgot/forgot-page.component';\nimport { TermsConditionsComponent } from './auth/terms-conditions/terms-conditions.component';\nimport { OAuth2CallbackComponent } from './auth/oauth2/oauth2-callback.component';\n\nconst AUTH_PROVIDERS = [\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorTokenService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorSignatureService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorLangService, multi: true},\n  { provide: HTTP_INTERCEPTORS, useClass: HttpInterceptorErrorService, multi: true},\n  { provide: USER_INFO, useClass: AuthUserService },\n  { provide: AUTH_INDEXED_DB, useClass: AuthIndexedDBService },\n  { provide: PROFILE_INDEXED_DB, useClass: ProfileIndexedDBService },\n  { provide: SETTINGS_INDEXED_DB, useClass: SettingsIndexedDBService },\n  AuthGuardService,\n  UnauthorizeGuardService,\n  AuthTokenService,\n  AuthGuardChildService,\n  AuthSignatureService,\n  AuthLanguageService,\n];\n\nconst AUTH_COMPONENTS = [\n  LoginPageComponent,\n  LogoutComponent,\n  RegisterPageComponent,\n  RequestForgotPageComponent,\n  ForgotPageComponent,\n  TermsConditionsComponent,\n  OAuth2CallbackComponent,\n];\n\nconst AUTH_ENTRY_COMPONENTS = [\n  TermsConditionsComponent,\n];\n\n@NgModule({\n  declarations: [\n    ...AUTH_COMPONENTS,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RecaptchaModule,\n    RecaptchaFormsModule,\n    NbCheckboxModule,\n    NbAlertModule,\n    NbInputModule,\n    NbButtonModule,\n    NbIconModule,\n    NbCardModule,\n    NbSpinnerModule,\n    NbDialogModule.forChild(),\n    DoThemeModule,\n    DoToastrModule.forRoot(),\n    DoLayoutAuthModule,\n    DoAuthRoutingModule,\n  ],\n  exports: [\n    ...AUTH_COMPONENTS,\n  ],\n  entryComponents: [\n    ...AUTH_ENTRY_COMPONENTS,\n  ],\n})\nexport class DoAuthModule {\n  static forRoot(): ModuleWithProviders<DoAuthModule> {\n    return {\n      ngModule: DoAuthModule,\n      providers: [\n        ...AUTH_PROVIDERS,\n      ],\n    };\n  }\n}\n","import { Component } from '@angular/core';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'do-404',\n  styleUrls: ['./404.component.scss'],\n  templateUrl: './404.component.html',\n})\nexport class PageNotFoundComponent {\n\n  constructor(private location: Location) {\n  }\n\n  goToHome() {\n    this.location.back();\n    return;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageNotFoundComponent } from './miscellaneous/404/404.component';\nimport { AuthComponent } from './layout/auth.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path: '404',\n        component: PageNotFoundComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class MiscellaneousRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { NbButtonModule, NbIconModule } from '@nebular/theme';\nimport { CommonModule } from '@angular/common';\n\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoLayoutAuthModule } from './layout/do-layout-auth.module';\nimport { MiscellaneousRoutingModule } from './miscellaneous-routing.module';\nimport { PageNotFoundComponent } from './miscellaneous/404/404.component';\n\n@NgModule({\n  imports: [\n    NbButtonModule,\n    NbIconModule,\n    CommonModule,\n    DoThemeModule,\n    DoLayoutAuthModule,\n    MiscellaneousRoutingModule,\n  ],\n  declarations: [\n    PageNotFoundComponent,\n  ],\n})\nexport class MiscellaneousModule { }\n","/*\n * Public API Surface of do-auth\n */\nexport { DoAuthModule } from './lib/do-auth.module';\nexport { AuthGuardChildService } from './lib/services/auth-guard-child.service';\nexport { AuthGuardService } from './lib/services/auth-guard.service';\nexport { AuthIndexedDBService } from './lib/storage/auth-indexeddb.service';\nexport { ProfileIndexedDBService } from './lib/storage/profile-indexeddb.service';\nexport { SettingsIndexedDBService } from './lib/storage/settings-indexeddb.service';\nexport { AuthTokenService } from './lib/services/auth-token.service';\nexport { UnauthorizeGuardService } from './lib/services/unauth-guard.service';\nexport { AuthSignatureService } from './lib/services/auth-signature.service';\nexport { AuthUserService } from './lib/services/auth-user.service';\n\nexport { MiscellaneousModule } from './lib/miscellaneous.module';\nexport { PageNotFoundComponent } from './lib/miscellaneous/404/404.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {ForgotPageComponent as Éµe} from './lib/auth/forgot/forgot-page.component';\nexport {RequestForgotPageComponent as Éµd} from './lib/auth/forgot/request-forgot-page.component';\nexport {LoginPageComponent as Éµa} from './lib/auth/login/login-page.component';\nexport {LogoutComponent as Éµb} from './lib/auth/logout/logout.component';\nexport {OAuth2CallbackComponent as Éµg} from './lib/auth/oauth2/oauth2-callback.component';\nexport {RegisterPageComponent as Éµc} from './lib/auth/register/register-page.component';\nexport {TermsConditionsComponent as Éµf} from './lib/auth/terms-conditions/terms-conditions.component';\nexport {DoAuthRoutingModule as Éµk} from './lib/do-auth-routing.module';\nexport {AuthBlockComponent as Éµj} from './lib/layout/auth-block/auth-block.component';\nexport {AuthComponent as Éµi} from './lib/layout/auth.component';\nexport {DoLayoutAuthModule as Éµh} from './lib/layout/do-layout-auth.module';\nexport {MiscellaneousRoutingModule as Éµr} from './lib/miscellaneous-routing.module';\nexport {AuthLanguageService as Éµo} from './lib/services/auth-lang.service';\nexport {HttpErrorHandler as Éµq} from './lib/services/http-error.handler';\nexport {HttpInterceptorErrorService as Éµp} from './lib/services/http-interceptor-error.service';\nexport {HttpInterceptorLangService as Éµn} from './lib/services/http-interceptor-lang.service';\nexport {HttpInterceptorSignatureService as Éµm} from './lib/services/http-interceptor-signature.service';\nexport {HttpInterceptorTokenService as Éµl} from './lib/services/http-interceptor-token.service';"],"names":["confirmPasswordValidator","routes"],"mappings":"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"}