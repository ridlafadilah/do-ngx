{"version":3,"file":"dongkap-do-core.js","sources":["ng://@dongkap/do-core/lib/module-import-guard.ts","ng://@dongkap/do-core/lib/services/utils/layout.service.ts","ng://@dongkap/do-core/lib/services/utils/analytics.service.ts","ng://@dongkap/do-core/lib/services/utils/state.service.ts","ng://@dongkap/do-core/lib/services/utils/seo.service.ts","ng://@dongkap/do-core/lib/services/utils/translation.service.ts","ng://@dongkap/do-core/lib/providers/http.provider.ts","ng://@dongkap/do-core/lib/services/utils/http-abstract.service.ts","ng://@dongkap/do-core/lib/models/utils/response-code.model.ts","ng://@dongkap/do-core/lib/models/utils/environment.model.ts","ng://@dongkap/do-core/lib/models/utils/http-base.model.ts","ng://@dongkap/do-core/lib/models/utils/locale.model.ts","ng://@dongkap/do-core/lib/models/utils/role.model.ts","ng://@dongkap/do-core/lib/models/utils/users.ts","ng://@dongkap/do-core/lib/models/security/resource-server.model.ts","ng://@dongkap/do-core/lib/models/patterns/date-pattern.model.ts","ng://@dongkap/do-core/lib/models/patterns/pattern.model.ts","ng://@dongkap/do-core/lib/services/utils/http-common.service.ts","ng://@dongkap/do-core/lib/services/error-handler.service.ts","ng://@dongkap/do-core/lib/services/security/encryption.service.ts","ng://@dongkap/do-core/lib/services/preloading-strategy.service.ts","ng://@dongkap/do-core/lib/do-core.module.ts","ng://@dongkap/do-core/lib/providers/shared/oauth.provider.ts","ng://@dongkap/do-core/lib/providers/shared/api.provider.ts","ng://@dongkap/do-core/lib/providers/shared/environment.provider.ts","ng://@dongkap/do-core/lib/providers/shared/storage.provider.ts","ng://@dongkap/do-core/index.ts","ng://@dongkap/do-core/dongkap-do-core.ts"],"sourcesContent":["export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\n  if (parentModule) {\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { delay, shareReplay, debounceTime } from 'rxjs/operators';\n\n@Injectable()\nexport class LayoutService {\n\n  protected layoutSize$ = new Subject();\n  protected layoutSizeChange$ = this.layoutSize$.pipe(\n    shareReplay({ refCount: true }),\n  );\n\n  changeLayoutSize() {\n    this.layoutSize$.next();\n  }\n\n  onChangeLayoutSize(): Observable<any> {\n    return this.layoutSizeChange$.pipe(delay(1));\n  }\n\n  onSafeChangeLayoutSize(): Observable<any> {\n    return this.layoutSizeChange$.pipe(\n      debounceTime(350),\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { filter } from 'rxjs/operators';\n\ndeclare const ga: any;\n\n@Injectable()\nexport class AnalyticsService {\n  private enabled: boolean;\n\n  constructor(private location: Location, private router: Router) {\n    this.enabled = false;\n  }\n\n  trackPageViews() {\n    if (this.enabled) {\n      this.router.events.pipe(\n        filter((event) => event instanceof NavigationEnd),\n      )\n        .subscribe(() => {\n          ga('send', {hitType: 'pageview', page: this.location.path()});\n        });\n    }\n  }\n\n  trackEvent(eventName: string) {\n    if (this.enabled) {\n      ga('send', 'event', eventName);\n    }\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { of as observableOf,  Observable,  BehaviorSubject } from 'rxjs';\nimport { takeWhile } from 'rxjs/operators';\n\nimport { NbLayoutDirectionService, NbLayoutDirection } from '@nebular/theme';\n\n@Injectable()\nexport class StateService implements OnDestroy {\n\n  protected layouts: any = [\n    {\n      name: 'One Column',\n      icon: 'nb-layout-default',\n      id: 'one-column',\n      selected: true,\n    },\n    {\n      name: 'Two Column',\n      icon: 'nb-layout-two-column',\n      id: 'two-column',\n    },\n    {\n      name: 'Center Column',\n      icon: 'nb-layout-centre',\n      id: 'center-column',\n    },\n  ];\n\n  protected sidebars: any = [\n    {\n      name: 'Sidebar at layout start',\n      icon: 'nb-layout-sidebar-left',\n      id: 'start',\n      selected: true,\n    },\n    {\n      name: 'Sidebar at layout end',\n      icon: 'nb-layout-sidebar-right',\n      id: 'end',\n    },\n  ];\n\n  protected layoutState$ = new BehaviorSubject(this.layouts[0]);\n  protected sidebarState$ = new BehaviorSubject(this.sidebars[0]);\n\n  alive = true;\n\n  constructor(directionService: NbLayoutDirectionService) {\n    directionService.onDirectionChange()\n      .pipe(takeWhile(() => this.alive))\n      .subscribe(direction => this.updateSidebarIcons(direction));\n\n    this.updateSidebarIcons(directionService.getDirection());\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  private updateSidebarIcons(direction: NbLayoutDirection) {\n    const [ startSidebar, endSidebar ] = this.sidebars;\n    const isLtr = direction === NbLayoutDirection.LTR;\n    const startIconClass = isLtr ? 'nb-layout-sidebar-left' : 'nb-layout-sidebar-right';\n    const endIconClass = isLtr ? 'nb-layout-sidebar-right' : 'nb-layout-sidebar-left';\n    startSidebar.icon = startIconClass;\n    endSidebar.icon = endIconClass;\n  }\n\n  setLayoutState(state: any): any {\n    this.layoutState$.next(state);\n  }\n\n  getLayoutStates(): Observable<any[]> {\n    return observableOf(this.layouts);\n  }\n\n  onLayoutState(): Observable<any> {\n    return this.layoutState$.asObservable();\n  }\n\n  setSidebarState(state: any): any {\n    this.sidebarState$.next(state);\n  }\n\n  getSidebarStates(): Observable<any[]> {\n    return observableOf(this.sidebars);\n  }\n\n  onSidebarState(): Observable<any> {\n    return this.sidebarState$.asObservable();\n  }\n}\n","import { Injectable, Inject, PLATFORM_ID, OnDestroy } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { NB_DOCUMENT } from '@nebular/theme';\nimport { filter, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SeoService implements OnDestroy {\n\n  private readonly destroy$ = new Subject<void>();\n  private readonly dom: Document;\n  private readonly isBrowser: boolean;\n  private linkCanonical: HTMLLinkElement;\n\n  constructor(\n    private router: Router,\n    @Inject(NB_DOCUMENT) document,\n    @Inject(PLATFORM_ID) platformId,\n  ) {\n    this.isBrowser = isPlatformBrowser(platformId);\n    this.dom = document;\n\n    if (this.isBrowser) {\n      this.createCanonicalTag();\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  createCanonicalTag() {\n    this.linkCanonical = this.dom.createElement('link');\n    this.linkCanonical.setAttribute('rel', 'canonical');\n    this.dom.head.appendChild(this.linkCanonical);\n    this.linkCanonical.setAttribute('href', this.getCanonicalUrl());\n  }\n\n  trackCanonicalChanges() {\n    if (!this.isBrowser) {\n      return;\n    }\n\n    this.router.events.pipe(\n      filter((event) => event instanceof NavigationEnd),\n      takeUntil(this.destroy$),\n    )\n      .subscribe(() => {\n        this.linkCanonical.setAttribute('href', this.getCanonicalUrl());\n      });\n  }\n\n  private getCanonicalUrl(): string {\n    return this.dom.location.origin + this.dom.location.pathname;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\n\nexport class TranslationService extends TranslateHttpLoader {\n\n  constructor(http: HttpClient, prefix?: string, suffix?: string) {\n    super(http, prefix, suffix);\n  }\n\n  getTranslation(lang: string): Observable<any> {\n    return super.getTranslation(lang);\n  }\n\n}\n","import { InjectionToken } from '@angular/core';\nimport { HttpFactoryService } from '../services/utils/http-factory.service';\n\nexport const HTTP_SERVICE: InjectionToken<HttpFactoryService> =\nnew InjectionToken<HttpFactoryService>('Http Service');\n","import { Observable } from 'rxjs';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { HttpFactoryService } from './http-factory.service';\nimport { HttpBaseModel } from '../../models';\n\nexport abstract class HttpAbstractService implements HttpFactoryService {\n\n  public abstract HTTP_AUTH(\n    api: HttpBaseModel,\n    body?: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    pathVariable?: string[],\n    responseType?: any): Observable<any>;\n  public abstract HTTP_BASE(\n    api: HttpBaseModel,\n    body?: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    pathVariable?: string[],\n    responseType?: any): Observable<any>;\n  public abstract GET(\n    url: string,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    responseType?: any): Observable<any>;\n  public abstract POST(\n    url: string,\n    body: any,\n    headers?: HttpHeaders,\n    params?: HttpParams,\n    responseType?: any): Observable<any>;\n  public abstract PUT(url: string, body: any, headers?: HttpHeaders, params?: HttpParams): Observable<any>;\n  public abstract DELETE(url: string, headers?: HttpHeaders, params?: HttpParams): Observable<any>;\n\n  public API(api: HttpBaseModel, pathVariable?: string[]): string {\n    let url: string = api.server.protocol +\n                    '://' +\n                    api.server.host +\n                    ((api.server.port) ? ':' + api.server.port : '') +\n                    api.path;\n    if (pathVariable)\n      pathVariable.forEach(path => {\n        url = url + '/' + path;\n      });\n    return url;\n  }\n\n}\n","export enum ResponseCode {\n    ERR_XXAKEY = 'ERR_XXAKEY',\n    ERR_XXATIMESTAMP = 'ERR_XXATIMESTAMP',\n    ERR_XXASIGNATURE = 'ERR_XXASIGNATURE',\n    ERR_UNAUTHORIZED = 'ERR_UNAUTHORIZED',\n\n    ERR_SYS0001 = 'ERR_SYS0001',\n    ERR_SYS0002 = 'ERR_SYS0002',\n    ERR_SYS0500 = 'ERR_SYS0500',\n    ERR_SYS0404 = 'ERR_SYS0404',\n    ERR_SYS0501 = 'ERR_SYS0501',\n    ERR_SYS0502 = 'ERR_SYS0502',\n    ERR_SYS0302 = 'ERR_SYS0302',\n    ERR_SCR0001 = 'ERR_SCR0001',\n    ERR_SCR0002 = 'ERR_SCR0002',\n    ERR_SCR0003 = 'ERR_SCR0003',\n    ERR_SCR0004 = 'ERR_SCR0004',\n    ERR_SCR0005 = 'ERR_SCR0005',\n    ERR_SCR0006 = 'ERR_SCR0006',\n    ERR_SCR0007A = 'ERR_SCR0007A',\n    ERR_SCR0007B = 'ERR_SCR0007B',\n    ERR_SCR0008 = 'ERR_SCR0008',\n    ERR_SCR0009 = 'ERR_SCR0009',\n    ERR_SCR0010 = 'ERR_SCR0010',\n    ERR_SCR0011 = 'ERR_SCR0011',\n    ERR_SCR0012 = 'ERR_SCR0012',\n\n    OK_DEFAULT = 'OK_DEFAULT',\n    OK_INSERTED = 'OK_INSERTED',\n    OK_UPDATED = 'OK_UPDATED',\n    OK_DELETED = 'OK_DELETED',\n    OK_LOGOUT = 'OK_LOGOUT',\n    OK_REGISTERED = 'OK_REGISTERED',\n    OK_REQUEST_FORGOT_PASSWORD = 'OK_REQUEST_FORGOT_PASSWORD',\n    OK_FORGOT_PASSWORD = 'OK_FORGOT_PASSWORD',\n    OK_SCR001 = 'OK_SCR001',\n    OK_SCR002 = 'OK_SCR002',\n    OK_SCR003 = 'OK_SCR003',\n    OK_SCR004 = 'OK_SCR004',\n    OK_SCR005 = 'OK_SCR005',\n    OK_SCR006 = 'OK_SCR006',\n    OK_SCR007 = 'OK_SCR007',\n    OK_SCR008 = 'OK_SCR008',\n    OK_SCR009 = 'OK_SCR009',\n    OK_SCR010 = 'OK_SCR010',\n    OK_SCR011 = 'OK_SCR011',\n    OK_SCR012 = 'OK_SCR012',\n}\n","export class Environment {\n    production: boolean = true;\n    locale: string = 'en-US';\n    basePath: string = '/';\n    host: {\n        [name: string]: Server,\n    };\n}\n\nexport class Server {\n    protocol?: string = 'http';\n    host: string;\n    port?: string;\n}\n","export interface APIModel {\n    [name: string]: {\n        [name: string]: HttpBaseModel,\n    };\n}\n\nexport interface HttpBaseModel {\n    server: HostModel;\n    path?: string;\n    method?: HttpMethod;\n    file?: FileModel;\n}\n\nexport interface FileModel {\n    filename: string;\n    extension: string;\n}\n\nexport enum HttpMethod {\n    POST = 'POST',\n    GET = 'GET',\n    PUT = 'PUT',\n    DELETE = 'DELETE',\n}\n\nexport class HostModel {\n    protocol?: string = 'https';\n    host: string;\n    port?: number | null;\n}\n\nexport interface ApiBaseResponse {\n    respStatusCode: string;\n    respStatusMessage: {\n        [name: string]: string,\n    };\n}\n","export class LocaleModel {\n    localeCode: string;\n    identifier: string;\n    icon: string;\n    localeDefault: boolean;\n    localeEnabled: boolean;\n}\n","export class RoleModel {\n    authority: string;\n    description: string;\n}\n","import { Observable } from 'rxjs';\n\nexport interface User {\n  name: string;\n  picture: string;\n}\n\nexport interface Contacts {\n  user: User;\n  type: string;\n}\n\nexport interface RecentUsers extends Contacts {\n  time: number;\n}\n\nexport abstract class UserData {\n  abstract getUsers(): Observable<User[]>;\n  abstract getContacts(): Observable<Contacts[]>;\n  abstract getRecentUsers(): Observable<RecentUsers[]>;\n}\n\nexport abstract class UserInfo {\n  abstract loadPhotoUser(): void;\n  abstract updatePhotoUser(file: File, checksum: string): Observable<User>;\n  abstract updateNameUser(name: string): Observable<User>;\n  abstract getUser(): Observable<User>;\n}\n","export interface SecurityResourceModel {\n    client_id: string;\n    client_secret: string;\n    grant_type: string;\n    private_key?: string;\n    aes_key?: string;\n    session_idle?: number;\n    session_timeout?: number;\n    signature?: boolean;\n    vapid?: string;\n    recaptcha?: string;\n}\n\nexport const oauthInfo = {\n    access_token: 'access_token',\n    refresh_token: 'refresh_token',\n    token_type: 'token_type',\n    public_key: 'xrkey',\n    expires_in: 'expires_in',\n    authority: 'authority',\n    provider: 'provider',\n    image: 'image',\n    email: 'email',\n    menus: 'menus',\n    extras: 'extras',\n    server_date: 'server_date',\n    locale: 'locale',\n    theme: 'theme',\n    name: 'name',\n};\n\nexport enum TypeDataOauth {\n    OAUTH = 'oauth',\n    PROFILE = 'profile',\n    SETTINGS = 'settings',\n    LOCALSTORAGE = 'localstorage',\n}\n\nexport const oauthInfoModels: OauthInfoModel[] = [\n    { key: oauthInfo.access_token, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.refresh_token, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.token_type, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.public_key, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.expires_in, enc: true, type: TypeDataOauth.OAUTH, string: false },\n    { key: oauthInfo.authority, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.provider, enc: true, type: TypeDataOauth.OAUTH, string: true },\n    { key: oauthInfo.menus, enc: true, type: TypeDataOauth.OAUTH, string: false },\n    { key: oauthInfo.extras, enc: true, type: TypeDataOauth.OAUTH, string: false },\n    { key: oauthInfo.name, enc: false, type: TypeDataOauth.PROFILE, string: true },\n    { key: oauthInfo.email, enc: false, type: TypeDataOauth.PROFILE, string: true },\n    { key: oauthInfo.image, enc: false, type: TypeDataOauth.PROFILE, string: true },\n    { key: oauthInfo.locale, enc: false, type: TypeDataOauth.SETTINGS, string: true },\n    { key: oauthInfo.theme, enc: false, type: TypeDataOauth.SETTINGS, string: true },\n    { key: oauthInfo.server_date, enc: false, type: TypeDataOauth.SETTINGS, string: true },\n];\n\nexport interface OauthInfoModel {\n    key: string;\n    enc: boolean;\n    type: TypeDataOauth;\n    string: boolean;\n}\n\nexport const signatureHeader = {\n    authorization: 'Authorization',\n    signature: 'X-DONGKAP-Signature',\n    timestamp: 'X-DONGKAP-Timestamp',\n    key: 'X-DONGKAP-Key',\n    mark: 'X-DONGKAP-Mark',\n};\n","export enum DatePattern {\n    SLASH = '^(?:(?:31(\\\\/)(?:0?[13578]|1[02]))' +\n            '\\\\1|(?:(?:29|30)(\\\\/)(?:0?[13-9]|1[0-2])' +\n            '\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\/)0?2' +\n            '\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|' +\n            '(?:(?:16|[2468][048]|[3579][26])00))))$|' +\n            '^(?:0?[1-9]|1\\\\d|2[0-8])(\\\\/)(?:(?:0?[1-9])|(?:1[0-2]))' +\n            '\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$',\n    DASH = '^(?:(?:31(-)(?:0?[13578]|1[02]))' +\n            '\\\\1|(?:(?:29|30)(-)(?:0?[13-9]|1[0-2])' +\n            '\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(-)0?2' +\n            '\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|' +\n            '(?:(?:16|[2468][048]|[3579][26])00))))$|' +\n            '^(?:0?[1-9]|1\\\\d|2[0-8])(-)(?:(?:0?[1-9])|(?:1[0-2]))' +\n            '\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$',\n    DOT = '^(?:(?:31(\\\\.)(?:0?[13578]|1[02]))' +\n            '\\\\1|(?:(?:29|30)(\\\\.)(?:0?[13-9]|1[0-2])' +\n            '\\\\2))(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$|^(?:29(\\\\.)0?2' +\n            '\\\\3(?:(?:(?:1[6-9]|[2-9]\\\\d)?(?:0[48]|[2468][048]|[13579][26])|' +\n            '(?:(?:16|[2468][048]|[3579][26])00))))$|' +\n            '^(?:0?[1-9]|1\\\\d|2[0-8])(\\\\.)(?:(?:0?[1-9])|(?:1[0-2]))' +\n            '\\\\4(?:(?:1[6-9]|[2-9]\\\\d)?\\\\d{2})$',\n}\n\nexport enum DateFormat {\n        DATE = 'dd/MM/yyyy',\n        DATETIME = 'dd/MM/yyyy HH:mm:ss.S',\n}\n","export enum Pattern {\n    FULLNAME = '(^[a-zA-Z]{1}([.])(?: [a-zA-Z]+)*)?([a-zA-Z ][a-zA-Z]+)*$',\n    EMAIL = '.+@.+\\..+',\n    USERNAME = '[a-z0-9.]*$',\n    PHONE_NUMBER = '^(([+]([0-9]{1,2}))|([0-9]{1}))([0-9]{2}-?)([0-9]{4}-?)([0-9]{1,6}-?)$',\n    PASSWORD_MEDIUM = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])([@$!%*?&]*)[A-Za-z0-9@$!%*?&]{8,}$',\n    PASSWORD_STRONG = '^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[@$!%*?&])[A-Za-z0-9@$!%*?&]{8,}$',\n    LOCALE = '^en-US$|^id-ID$',\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { HttpAbstractService } from './http-abstract.service';\nimport { HttpBaseModel, signatureHeader, HttpMethod } from '../../models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HttpCommonService extends HttpAbstractService {\n\n  constructor(protected http: HttpClient) {\n    super();\n  }\n\n  public HTTP_AUTH(api: HttpBaseModel,\n                    body?: any,\n                    headers?: HttpHeaders,\n                    params?: HttpParams,\n                    pathVariable?: string[],\n                    responseType?: 'json' | 'arraybuffer'): Observable<any> {\n    if (headers) {\n      headers = headers.append(signatureHeader.mark, 'true');\n    } else headers = new HttpHeaders().append(signatureHeader.mark, 'true');\n    responseType = responseType ? responseType : 'json';\n    return this.HTTP_BASE(api, body, headers, params, pathVariable, responseType);\n  }\n\n  public HTTP_BASE(api: HttpBaseModel,\n                    body?: any,\n                    headers?: HttpHeaders,\n                    params?: HttpParams,\n                    pathVariable?: string[],\n                    responseType?: 'json' | 'arraybuffer'): Observable<any> {\n    let response: Observable<any> = null;\n    responseType = responseType ? responseType : 'json';\n    switch (api.method) {\n      case HttpMethod.POST:\n        response = this.POST(this.API(api, pathVariable), body, headers, params, responseType);\n        break;\n      case HttpMethod.PUT:\n        response = this.PUT(this.API(api, pathVariable), body, headers, params);\n        break;\n      case HttpMethod.DELETE:\n        response = this.DELETE(this.API(api, pathVariable), headers, params);\n        break;\n      default:\n        response = this.GET(this.API(api, pathVariable), headers, params, responseType);\n        break;\n    }\n    return response;\n  }\n\n  public GET(url: string, headers?: HttpHeaders, params?: HttpParams, responseType?: any): Observable<any> {\n    return this.http.get(url, {headers: headers, params: params, responseType: responseType});\n  }\n\n  public POST(url: string, body: any, headers?: HttpHeaders, params?: HttpParams, responseType?: any):\n    Observable<any> {\n    return this.http.post(url, body, {headers: headers, params: params, responseType: responseType});\n  }\n\n  public PUT(url: string, body: any, headers?: HttpHeaders, params?: HttpParams): Observable<any> {\n    return this.http.put(url, body, {headers: headers, params: params});\n  }\n\n  public DELETE(url: string, headers?: HttpHeaders, params?: HttpParams): Observable<any> {\n    return this.http.delete(url, {headers: headers, params: params});\n  }\n\n}\n","import { ErrorHandler, Injectable} from '@angular/core';\nimport { EMPTY } from 'rxjs';\n\n@Injectable()\nexport class ErrorHandlerService implements ErrorHandler {\n\n  handleError(error: Error) {\n    if (error.message) {\n      if (error.message.includes('No loader found for file')) {\n        // this.notification.show('DICOM', 'File Not Support', NbComponentStatus.DANGER);\n        return EMPTY;\n      } else if ( error.message.includes('mousedown')     || error.message.includes('mousemove') ||\n                  error.message.includes('mouseup')       || error.message.includes('mouseout') ||\n                  error.message.includes('mousewheel')    || error.message.includes('DOMMouseScroll') ||\n                  error.message.includes('dblclick')      || error.message.includes('touchstart') ||\n                  error.message.includes('touchmove')     || error.message.includes('touchend')) {\n        return EMPTY;\n      }\n    }\n    throw error;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as CryptoJS from 'crypto-js';\n\n@Injectable()\nexport class EncryptionService {\n\n    private ivSize: number = 128;\n\n    public getHmacSha256(secret: string, message: string, hex?: boolean): string {\n        const hash = CryptoJS.HmacSHA256(message, secret);\n        if (hex)\n            return CryptoJS.enc.Hex.stringify(hash).toUpperCase();\n        return CryptoJS.enc.Base64.stringify(hash);\n    }\n\n    public encryptAES(secretKey: string, message: string): string {\n        const iv = CryptoJS.lib.WordArray.random(this.ivSize / 8);\n        const key = CryptoJS.enc.Utf8.parse(secretKey);\n        const encrypted = CryptoJS.AES.encrypt(message, key, {\n            iv: iv,\n            padding: CryptoJS.pad.Pkcs7,\n            mode: CryptoJS.mode.CBC,\n        });\n        const encryptMessage = iv.toString() + encrypted.toString();\n        return encryptMessage;\n    }\n\n    public decryptAES(secretKey: string, encryptMessage: string): string {\n        if (encryptMessage) {\n            const iv = CryptoJS.enc.Hex.parse(encryptMessage.substr(0, 32));\n            const key = CryptoJS.enc.Utf8.parse(secretKey);\n            const encrypted = encryptMessage.substring(32);\n            const decrypted = CryptoJS.AES.decrypt(encrypted, key, {\n              iv: iv,\n              padding: CryptoJS.pad.Pkcs7,\n              mode: CryptoJS.mode.CBC,\n            });\n            try {\n                return decrypted.toString(CryptoJS.enc.Utf8);\n            } catch (error) {\n                return null;\n            }\n        }\n        return null;\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { EMPTY } from 'rxjs';\n\n@Injectable()\nexport class CustomPreloadingStrategy implements PreloadingStrategy {\n  preloadedModules: string[] = [];\n\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\n    if (route.data && route.data['preload']) {\n      this.preloadedModules.push(route.path);\n      return load();\n    } else {\n      return EMPTY;\n    }\n  }\n}\n","import { ErrorHandler, ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\n\nimport { throwIfAlreadyLoaded } from './module-import-guard';\nimport { LayoutService } from './services/utils/layout.service';\nimport { AnalyticsService } from './services/utils/analytics.service';\nimport { StateService } from './services/utils/state.service';\nimport { SeoService } from './services/utils/seo.service';\nimport { TranslationService } from './services/utils/translation.service';\nimport { HTTP_SERVICE } from './providers/http.provider';\nimport { HttpCommonService } from './services/utils/http-common.service';\nimport { ErrorHandlerService } from './services/error-handler.service';\nimport { EncryptionService } from './services/security/encryption.service';\nimport { CustomPreloadingStrategy } from './services/preloading-strategy.service';\n\nexport const CORE_PROVIDERS = [\n  AnalyticsService,\n  LayoutService,\n  SeoService,\n  StateService,\n  CustomPreloadingStrategy,\n  EncryptionService,\n  { provide: HTTP_SERVICE, useClass: HttpCommonService},\n  { provide: ErrorHandler, useClass: ErrorHandlerService},\n];\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslationService(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [],\n  declarations: [],\n})\nexport class DoCoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: DoCoreModule) {\n    throwIfAlreadyLoaded(parentModule, 'DoCoreModule');\n  }\n\n  static forRoot(): ModuleWithProviders<DoCoreModule> {\n    return {\n      ngModule: DoCoreModule,\n      providers: [\n        ...CORE_PROVIDERS,\n        ...TranslateModule.forRoot({\n              loader: {\n                  provide: TranslateLoader,\n                  useFactory: (createTranslateLoader),\n                  deps: [HttpClient],\n              },\n            }).providers,\n      ],\n    };\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { UserInfo, SecurityResourceModel } from '../../models';\n\nexport const OAUTH_INFO: InjectionToken<SecurityResourceModel> =\nnew InjectionToken<SecurityResourceModel>('OAUTH INFO Resource');\n\nexport const USER_INFO: InjectionToken<UserInfo> =\nnew InjectionToken<UserInfo>('USER INFO Resource');\n","import { InjectionToken } from '@angular/core';\nimport { APIModel } from '../../models';\n\nexport const API: InjectionToken<APIModel> =\nnew InjectionToken<APIModel>('API');\n","import { InjectionToken } from '@angular/core';\nimport { Environment } from '../../models';\n\nexport const ENVIRONMENT: InjectionToken<Environment> =\nnew InjectionToken<Environment>('Environment Config');\n","import { InjectionToken } from '@angular/core';\nimport { IndexedDBEncFactoryService } from '../../services/utils/indexeddb-enc-factory.service';\nimport { IndexedDBFactoryService } from '../../services/utils/indexeddb-factory.service';\n\nexport const AUTH_INDEXED_DB: InjectionToken<IndexedDBEncFactoryService> =\nnew InjectionToken<IndexedDBEncFactoryService>('Auth IndexedDB Resource');\n\nexport const PROFILE_INDEXED_DB: InjectionToken<IndexedDBFactoryService> =\nnew InjectionToken<IndexedDBFactoryService>('Profile IndexedDB Resource');\n\nexport const SETTINGS_INDEXED_DB: InjectionToken<IndexedDBFactoryService> =\nnew InjectionToken<IndexedDBFactoryService>('Settings IndexedDB Resource');\n\nexport const PANIC_INDEXED_DB: InjectionToken<IndexedDBFactoryService> =\nnew InjectionToken<IndexedDBFactoryService>('Panic IndexedDB Resource');\n","/*\n * Public API Surface of do-core\n */\n\nexport * from './lib/do-core.module';\n\nexport * from './lib/models';\n\nexport { AnalyticsService } from './lib/services/utils/analytics.service';\nexport { LayoutService } from './lib/services/utils/layout.service';\nexport { SeoService } from './lib/services/utils/seo.service';\nexport { StateService } from './lib/services/utils/state.service';\nexport { TranslationService } from './lib/services/utils/translation.service';\nexport { CustomPreloadingStrategy } from './lib/services/preloading-strategy.service';\nexport { ErrorHandlerService } from './lib/services/error-handler.service';\n\nexport { EncryptionService } from './lib/services/security/encryption.service';\n\nexport { HttpCommonService } from './lib/services/utils/http-common.service';\nexport { HttpFactoryService } from './lib/services/utils/http-factory.service';\nexport { IndexedDBFactoryService } from './lib/services/utils/indexeddb-factory.service';\nexport { IndexedDBEncFactoryService } from './lib/services/utils/indexeddb-enc-factory.service';\n\nexport { HTTP_SERVICE } from './lib/providers/http.provider';\nexport { OAUTH_INFO, USER_INFO } from './lib/providers/shared/oauth.provider';\nexport { API } from './lib/providers/shared/api.provider';\nexport { ENVIRONMENT } from './lib/providers/shared/environment.provider';\nexport {\n    AUTH_INDEXED_DB,\n    PROFILE_INDEXED_DB,\n    SETTINGS_INDEXED_DB,\n    PANIC_INDEXED_DB,\n} from './lib/providers/shared/storage.provider';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {HttpAbstractService as Éµa} from './lib/services/utils/http-abstract.service';"],"names":["observableOf","CryptoJS.HmacSHA256","CryptoJS.enc","CryptoJS.lib","CryptoJS.AES","CryptoJS.pad","CryptoJS.mode"],"mappings":";;;;;;;;;;;;SAAgB,oBAAoB,CAAC,YAAiB,EAAE,UAAkB;IACxE,IAAI,YAAY,EAAE;QAChB,MAAM,IAAI,KAAK,CAAI,UAAU,yEAAsE,CAAC,CAAC;KACtG;AACH;;;ICAA;QAGY,gBAAW,GAAG,IAAI,OAAO,EAAE,CAAC;QAC5B,sBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CACjD,WAAW,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAChC,CAAC;KAeH;IAbC,wCAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;KACzB;IAED,0CAAkB,GAAlB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KAC9C;IAED,8CAAsB,GAAtB;QACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAChC,YAAY,CAAC,GAAG,CAAC,CAClB,CAAC;KACH;;gBApBF,UAAU;;IAqBX,oBAAC;CArBD;;;ICOE,0BAAoB,QAAkB,EAAU,MAAc;QAA1C,aAAQ,GAAR,QAAQ,CAAU;QAAU,WAAM,GAAN,MAAM,CAAQ;QAC5D,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;KACtB;IAED,yCAAc,GAAd;QAAA,iBASC;QARC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB,MAAM,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,YAAY,aAAa,GAAA,CAAC,CAClD;iBACE,SAAS,CAAC;gBACT,EAAE,CAAC,MAAM,EAAE,EAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,KAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC;aAC/D,CAAC,CAAC;SACN;KACF;IAED,qCAAU,GAAV,UAAW,SAAiB;QAC1B,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,EAAE,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;SAChC;KACF;;gBAnB6B,QAAQ;gBAAkB,MAAM;;;gBAJ/D,UAAU;;;gBALF,QAAQ;gBADO,MAAM;;IA8B9B,uBAAC;CAxBD;;;ICwCE,sBAAY,gBAA0C;QAAtD,iBAMC;QA5CS,YAAO,GAAQ;YACvB;gBACE,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,mBAAmB;gBACzB,EAAE,EAAE,YAAY;gBAChB,QAAQ,EAAE,IAAI;aACf;YACD;gBACE,IAAI,EAAE,YAAY;gBAClB,IAAI,EAAE,sBAAsB;gBAC5B,EAAE,EAAE,YAAY;aACjB;YACD;gBACE,IAAI,EAAE,eAAe;gBACrB,IAAI,EAAE,kBAAkB;gBACxB,EAAE,EAAE,eAAe;aACpB;SACF,CAAC;QAEQ,aAAQ,GAAQ;YACxB;gBACE,IAAI,EAAE,yBAAyB;gBAC/B,IAAI,EAAE,wBAAwB;gBAC9B,EAAE,EAAE,OAAO;gBACX,QAAQ,EAAE,IAAI;aACf;YACD;gBACE,IAAI,EAAE,uBAAuB;gBAC7B,IAAI,EAAE,yBAAyB;gBAC/B,EAAE,EAAE,KAAK;aACV;SACF,CAAC;QAEQ,iBAAY,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,kBAAa,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;QAEhE,UAAK,GAAG,IAAI,CAAC;QAGX,gBAAgB,CAAC,iBAAiB,EAAE;aACjC,IAAI,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,KAAK,GAAA,CAAC,CAAC;aACjC,SAAS,CAAC,UAAA,SAAS,IAAI,OAAA,KAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAA,CAAC,CAAC;QAE9D,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,CAAC;KAC1D;IAED,kCAAW,GAAX;QACE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;KACpB;IAEO,yCAAkB,GAA1B,UAA2B,SAA4B;QAC/C,IAAA,KAAA,OAA+B,IAAI,CAAC,QAAQ,IAAA,EAA1C,YAAY,QAAA,EAAE,UAAU,QAAkB,CAAC;QACnD,IAAM,KAAK,GAAG,SAAS,KAAK,iBAAiB,CAAC,GAAG,CAAC;QAClD,IAAM,cAAc,GAAG,KAAK,GAAG,wBAAwB,GAAG,yBAAyB,CAAC;QACpF,IAAM,YAAY,GAAG,KAAK,GAAG,yBAAyB,GAAG,wBAAwB,CAAC;QAClF,YAAY,CAAC,IAAI,GAAG,cAAc,CAAC;QACnC,UAAU,CAAC,IAAI,GAAG,YAAY,CAAC;KAChC;IAED,qCAAc,GAAd,UAAe,KAAU;QACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/B;IAED,sCAAe,GAAf;QACE,OAAOA,EAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACnC;IAED,oCAAa,GAAb;QACE,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;KACzC;IAED,sCAAe,GAAf,UAAgB,KAAU;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChC;IAED,uCAAgB,GAAhB;QACE,OAAOA,EAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACpC;IAED,qCAAc,GAAd;QACE,OAAO,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC;KAC1C;;gBA3C6B,wBAAwB;;;gBAzCvD,UAAU;;;gBAFF,wBAAwB;;IAuFjC,mBAAC;CArFD;;;ICSE,oBACU,MAAc,EACD,QAAQ,EACR,UAAU;QAFvB,WAAM,GAAN,MAAM,CAAQ;QANP,aAAQ,GAAG,IAAI,OAAO,EAAQ,CAAC;QAU9C,IAAI,CAAC,SAAS,GAAG,iBAAiB,CAAC,UAAU,CAAC,CAAC;QAC/C,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC;QAEpB,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;IAED,gCAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;KAC1B;IAED,uCAAkB,GAAlB;QACE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACpD,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;QACpD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC9C,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;KACjE;IAED,0CAAqB,GAArB;QAAA,iBAYC;QAXC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;YACnB,OAAO;SACR;QAED,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CACrB,MAAM,CAAC,UAAC,KAAK,IAAK,OAAA,KAAK,YAAY,aAAa,GAAA,CAAC,EACjD,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB;aACE,SAAS,CAAC;YACT,KAAI,CAAC,aAAa,CAAC,YAAY,CAAC,MAAM,EAAE,KAAI,CAAC,eAAe,EAAE,CAAC,CAAC;SACjE,CAAC,CAAC;KACN;IAEO,oCAAe,GAAvB;QACE,OAAO,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;KAC9D;;gBAxCiB,MAAM;gDACrB,MAAM,SAAC,WAAW;gDAClB,MAAM,SAAC,WAAW;;;gBAXtB,UAAU;;;gBALa,MAAM;gDAezB,MAAM,SAAC,WAAW;gDAClB,MAAM,SAAC,WAAW;;IAuCvB,iBAAC;CAlDD;;;ICHwC,sCAAmB;IAEzD,4BAAY,IAAgB,EAAE,MAAe,EAAE,MAAe;eAC5D,kBAAM,IAAI,EAAE,MAAM,EAAE,MAAM,CAAC;KAC5B;IAED,2CAAc,GAAd,UAAe,IAAY;QACzB,OAAO,iBAAM,cAAc,YAAC,IAAI,CAAC,CAAC;KACnC;IAEH,yBAAC;AAAD,CAVA,CAAwC,mBAAmB;;ICD9C,YAAY,GACzB,IAAI,cAAc,CAAqB,cAAc;;;ICErD;KA2CC;IAbQ,iCAAG,GAAV,UAAW,GAAkB,EAAE,YAAuB;QACpD,IAAI,GAAG,GAAW,GAAG,CAAC,MAAM,CAAC,QAAQ;YACrB,KAAK;YACL,GAAG,CAAC,MAAM,CAAC,IAAI;aACd,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,EAAE,CAAC;YAChD,GAAG,CAAC,IAAI,CAAC;QACzB,IAAI,YAAY;YACd,YAAY,CAAC,OAAO,CAAC,UAAA,IAAI;gBACvB,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC;aACxB,CAAC,CAAC;QACL,OAAO,GAAG,CAAC;KACZ;IAEH,0BAAC;AAAD,CAAC;;ICjDW;AAAZ,WAAY,YAAY;IACpB,yCAAyB,CAAA;IACzB,qDAAqC,CAAA;IACrC,qDAAqC,CAAA;IACrC,qDAAqC,CAAA;IAErC,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,6CAA6B,CAAA;IAC7B,6CAA6B,CAAA;IAC7B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAC3B,2CAA2B,CAAA;IAE3B,yCAAyB,CAAA;IACzB,2CAA2B,CAAA;IAC3B,yCAAyB,CAAA;IACzB,yCAAyB,CAAA;IACzB,uCAAuB,CAAA;IACvB,+CAA+B,CAAA;IAC/B,yEAAyD,CAAA;IACzD,yDAAyC,CAAA;IACzC,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;IACvB,uCAAuB,CAAA;AAC3B,CAAC,EA/CW,YAAY,KAAZ,YAAY;;;ICAxB;QACI,eAAU,GAAY,IAAI,CAAC;QAC3B,WAAM,GAAW,OAAO,CAAC;QACzB,aAAQ,GAAW,GAAG,CAAC;KAI1B;IAAD,kBAAC;AAAD,CAAC,IAAA;AAED;IAAA;QACI,aAAQ,GAAY,MAAM,CAAC;KAG9B;IAAD,aAAC;AAAD,CAAC;;ICKW;AAAZ,WAAY,UAAU;IAClB,2BAAa,CAAA;IACb,yBAAW,CAAA;IACX,yBAAW,CAAA;IACX,+BAAiB,CAAA;AACrB,CAAC,EALW,UAAU,KAAV,UAAU,QAKrB;;IAED;QACI,aAAQ,GAAY,OAAO,CAAC;KAG/B;IAAD,gBAAC;AAAD,CAAC;;;IC7BD;KAMC;IAAD,kBAAC;AAAD,CAAC;;;ICND;KAGC;IAAD,gBAAC;AAAD,CAAC;;;ICaD;KAIC;IAAD,eAAC;AAAD,CAAC,IAAA;;IAED;KAKC;IAAD,eAAC;AAAD,CAAC;;ICdY,SAAS,GAAG;IACrB,YAAY,EAAE,cAAc;IAC5B,aAAa,EAAE,eAAe;IAC9B,UAAU,EAAE,YAAY;IACxB,UAAU,EAAE,OAAO;IACnB,UAAU,EAAE,YAAY;IACxB,SAAS,EAAE,WAAW;IACtB,QAAQ,EAAE,UAAU;IACpB,KAAK,EAAE,OAAO;IACd,KAAK,EAAE,OAAO;IACd,KAAK,EAAE,OAAO;IACd,MAAM,EAAE,QAAQ;IAChB,WAAW,EAAE,aAAa;IAC1B,MAAM,EAAE,QAAQ;IAChB,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;EACd;IAEU;AAAZ,WAAY,aAAa;IACrB,gCAAe,CAAA;IACf,oCAAmB,CAAA;IACnB,sCAAqB,CAAA;IACrB,8CAA6B,CAAA;AACjC,CAAC,EALW,aAAa,KAAb,aAAa,QAKxB;IAEY,eAAe,GAAqB;IAC7C,EAAE,GAAG,EAAE,SAAS,CAAC,YAAY,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IACnF,EAAE,GAAG,EAAE,SAAS,CAAC,aAAa,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IACpF,EAAE,GAAG,EAAE,SAAS,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IACjF,EAAE,GAAG,EAAE,SAAS,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IACjF,EAAE,GAAG,EAAE,SAAS,CAAC,UAAU,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;IAClF,EAAE,GAAG,EAAE,SAAS,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IAChF,EAAE,GAAG,EAAE,SAAS,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IAC/E,EAAE,GAAG,EAAE,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;IAC7E,EAAE,GAAG,EAAE,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE;IAC9E,EAAE,GAAG,EAAE,SAAS,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE;IAC9E,EAAE,GAAG,EAAE,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE;IAC/E,EAAE,GAAG,EAAE,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE;IAC/E,EAAE,GAAG,EAAE,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;IACjF,EAAE,GAAG,EAAE,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;IAChF,EAAE,GAAG,EAAE,SAAS,CAAC,WAAW,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,aAAa,CAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE;EACxF;IASW,eAAe,GAAG;IAC3B,aAAa,EAAE,eAAe;IAC9B,SAAS,EAAE,qBAAqB;IAChC,SAAS,EAAE,qBAAqB;IAChC,GAAG,EAAE,eAAe;IACpB,IAAI,EAAE,gBAAgB;;;ICpEd;AAAZ,WAAY,WAAW;IACnB,sVAM4C,CAAA;IAC5C,6UAM4C,CAAA;IAC5C,oVAM4C,CAAA;AAChD,CAAC,EAtBW,WAAW,KAAX,WAAW,QAsBtB;IAEW;AAAZ,WAAY,UAAU;IACd,iCAAmB,CAAA;IACnB,gDAAkC,CAAA;AAC1C,CAAC,EAHW,UAAU,KAAV,UAAU;;ICxBV;AAAZ,WAAY,OAAO;IACf,iFAAsE,CAAA;IACtE,6BAAmB,CAAA;IACnB,mCAAwB,CAAA;IACxB,kGAAuF,CAAA;IACvF,oGAAyF,CAAA;IACzF,uGAA4F,CAAA;IAC5F,qCAA0B,CAAA;AAC9B,CAAC,EARW,OAAO,KAAP,OAAO;;;ICWoB,qCAAmB;IAExD,2BAAsB,IAAgB;QAAtC,YACE,iBAAO,SACR;QAFqB,UAAI,GAAJ,IAAI,CAAY;;KAErC;IAEM,qCAAS,GAAhB,UAAiB,GAAkB,EACjB,IAAU,EACV,OAAqB,EACrB,MAAmB,EACnB,YAAuB,EACvB,YAAqC;QACrD,IAAI,OAAO,EAAE;YACX,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;SACxD;;YAAM,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QACxE,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,MAAM,CAAC;QACpD,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;KAC/E;IAEM,qCAAS,GAAhB,UAAiB,GAAkB,EACjB,IAAU,EACV,OAAqB,EACrB,MAAmB,EACnB,YAAuB,EACvB,YAAqC;QACrD,IAAI,QAAQ,GAAoB,IAAI,CAAC;QACrC,YAAY,GAAG,YAAY,GAAG,YAAY,GAAG,MAAM,CAAC;QACpD,QAAQ,GAAG,CAAC,MAAM;YAChB,KAAK,UAAU,CAAC,IAAI;gBAClB,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;gBACvF,MAAM;YACR,KAAK,UAAU,CAAC,GAAG;gBACjB,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;gBACxE,MAAM;YACR,KAAK,UAAU,CAAC,MAAM;gBACpB,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;gBACrE,MAAM;YACR;gBACE,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,YAAY,CAAC,EAAE,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,CAAC;gBAChF,MAAM;SACT;QACD,OAAO,QAAQ,CAAC;KACjB;IAEM,+BAAG,GAAV,UAAW,GAAW,EAAE,OAAqB,EAAE,MAAmB,EAAE,YAAkB;QACpF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAC,CAAC,CAAC;KAC3F;IAEM,gCAAI,GAAX,UAAY,GAAW,EAAE,IAAS,EAAE,OAAqB,EAAE,MAAmB,EAAE,YAAkB;QAEhG,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,YAAY,EAAC,CAAC,CAAC;KAClG;IAEM,+BAAG,GAAV,UAAW,GAAW,EAAE,IAAS,EAAE,OAAqB,EAAE,MAAmB;QAC3E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;KACrE;IAEM,kCAAM,GAAb,UAAc,GAAW,EAAE,OAAqB,EAAE,MAAmB;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAC,CAAC,CAAC;KAClE;;gBAzD2B,UAAU;;;;gBALvC,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;gBATQ,UAAU;;4BADnB;CAwEC,CA7DsC,mBAAmB;;;ICR1D;KAmBC;IAhBC,yCAAW,GAAX,UAAY,KAAY;QACtB,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,0BAA0B,CAAC,EAAE;;gBAEtD,OAAO,KAAK,CAAC;aACd;iBAAM,IAAK,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAQ,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC;gBAC9E,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAU,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;gBAC7E,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAO,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAC;gBACnF,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAS,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC;gBAC/E,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAQ,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;gBACzF,OAAO,KAAK,CAAC;aACd;SACF;QACD,MAAM,KAAK,CAAC;KACb;;gBAjBF,UAAU;;IAmBX,0BAAC;CAnBD;;;ICAA;QAGY,WAAM,GAAW,GAAG,CAAC;KAwChC;IAtCU,yCAAa,GAApB,UAAqB,MAAc,EAAE,OAAe,EAAE,GAAa;QAC/D,IAAM,IAAI,GAAGC,UAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;QAClD,IAAI,GAAG;YACH,OAAOC,GAAY,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC;QAC1D,OAAOA,GAAY,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC9C;IAEM,sCAAU,GAAjB,UAAkB,SAAiB,EAAE,OAAe;QAChD,IAAM,EAAE,GAAGC,GAAY,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAC1D,IAAM,GAAG,GAAGD,GAAY,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC/C,IAAM,SAAS,GAAGE,GAAY,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE;YACjD,EAAE,EAAE,EAAE;YACN,OAAO,EAAEC,GAAY,CAAC,KAAK;YAC3B,IAAI,EAAEC,IAAa,CAAC,GAAG;SAC1B,CAAC,CAAC;QACH,IAAM,cAAc,GAAG,EAAE,CAAC,QAAQ,EAAE,GAAG,SAAS,CAAC,QAAQ,EAAE,CAAC;QAC5D,OAAO,cAAc,CAAC;KACzB;IAEM,sCAAU,GAAjB,UAAkB,SAAiB,EAAE,cAAsB;QACvD,IAAI,cAAc,EAAE;YAChB,IAAM,EAAE,GAAGJ,GAAY,CAAC,GAAG,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;YAChE,IAAM,GAAG,GAAGA,GAAY,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAC/C,IAAM,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;YAC/C,IAAM,SAAS,GAAGE,GAAY,CAAC,OAAO,CAAC,SAAS,EAAE,GAAG,EAAE;gBACrD,EAAE,EAAE,EAAE;gBACN,OAAO,EAAEC,GAAY,CAAC,KAAK;gBAC3B,IAAI,EAAEC,IAAa,CAAC,GAAG;aACxB,CAAC,CAAC;YACH,IAAI;gBACA,OAAO,SAAS,CAAC,QAAQ,CAACJ,GAAY,CAAC,IAAI,CAAC,CAAC;aAChD;YAAC,OAAO,KAAK,EAAE;gBACZ,OAAO,IAAI,CAAC;aACf;SACJ;QACD,OAAO,IAAI,CAAC;KACf;;gBAzCJ,UAAU;;IA2CX,wBAAC;CA3CD;;;ICEA;QAEE,qBAAgB,GAAa,EAAE,CAAC;KAUjC;IARC,0CAAO,GAAP,UAAQ,KAAY,EAAE,IAA2B;QAC/C,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YACvC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACvC,OAAO,IAAI,EAAE,CAAC;SACf;aAAM;YACL,OAAO,KAAK,CAAC;SACd;KACF;;gBAXF,UAAU;;IAYX,+BAAC;CAZD;;ICYa,cAAc,GAAG;IAC5B,gBAAgB;IAChB,aAAa;IACb,UAAU;IACV,YAAY;IACZ,wBAAwB;IACxB,iBAAiB;IACjB,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,iBAAiB,EAAC;IACrD,EAAE,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,mBAAmB,EAAC;EACvD;SAEc,qBAAqB,CAAC,IAAgB;IACpD,OAAO,IAAI,kBAAkB,CAAC,IAAI,EAAE,gBAAgB,EAAE,OAAO,CAAC,CAAC;AACjE,CAAC;;IAUC,sBAAoC,YAA0B;QAC5D,oBAAoB,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;KACpD;IAEM,oBAAO,GAAd;QACE,OAAO;YACL,QAAQ,EAAE,YAAY;YACtB,SAAS,WACJ,cAAc,EACd,eAAe,CAAC,OAAO,CAAC;gBACrB,MAAM,EAAE;oBACJ,OAAO,EAAE,eAAe;oBACxB,UAAU,GAAG,qBAAqB,CAAC;oBACnC,IAAI,EAAE,CAAC,UAAU,CAAC;iBACrB;aACF,CAAC,CAAC,SAAS,CACjB;SACF,CAAC;KACH;;gBAlBiD,YAAY,uBAAjD,QAAQ,YAAI,QAAQ;;;gBARlC,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;qBACb;oBACD,OAAO,EAAE,EAAE;oBACX,YAAY,EAAE,EAAE;iBACjB;;;gBAEmD,YAAY,uBAAjD,QAAQ,YAAI,QAAQ;;IAmBnC,mBAAC;CA3BD;;IC7Ba,UAAU,GACvB,IAAI,cAAc,CAAwB,qBAAqB,EAAE;IAEpD,SAAS,GACtB,IAAI,cAAc,CAAW,oBAAoB;;ICJpC,GAAG,GAChB,IAAI,cAAc,CAAW,KAAK;;ICDrB,WAAW,GACxB,IAAI,cAAc,CAAc,oBAAoB;;ICAvC,eAAe,GAC5B,IAAI,cAAc,CAA6B,yBAAyB,EAAE;IAE7D,kBAAkB,GAC/B,IAAI,cAAc,CAA0B,4BAA4B,EAAE;IAE7D,mBAAmB,GAChC,IAAI,cAAc,CAA0B,6BAA6B,EAAE;IAE9D,gBAAgB,GAC7B,IAAI,cAAc,CAA0B,0BAA0B;;ACdtE;;;;ACAA;;;;;;"}