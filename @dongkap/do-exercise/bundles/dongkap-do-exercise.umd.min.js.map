{"version":3,"sources":["ng://@dongkap/do-exercise/lib/do-exercise.component.ts","ng://@dongkap/do-exercise/lib/exercise.component.ts","ng://@dongkap/do-exercise/lib/do-exercise-routing.module.ts","ng://@dongkap/do-exercise/lib/do-exercise.module.ts"],"names":["DoExerciseComponent","Component","args","selector","template","ExerciseComponent","formBuilder","_d","_this","this","dataCheckbox","name","selected","dataCheckboxEdited","dataRadio","value","dataStaticSelect","label","disabled","minLength","pattern","DatePattern","SLASH","rows","columns","prop","width","frozenLeft","apiDatatable","server","protocol","host","port","path","method","HttpMethod","GET","apiSelect","options","mode","TreeMode","MultiSelect","checkboxes","alwaysEmitSelected","nodeItems","id","children","item","phrase","expanded","formGroupFilter","group","gender","company","filters","controlName","type","formGroup","image","username","currency","date","checkbox","radio","searchSelect","staticSelect","textarea","Validators","ckeditor","tinyMCE","fetchDatatable","data","prototype","ngOnInit","doFilterAdvanced","keyword","cb","req","XMLHttpRequest","open","onload","JSON","parse","response","send","onSubmit","console","log","uploadImage","file","FormBuilder","DomSanitizer","routes","component","DoExerciseRoutingModule","NgModule","imports","RouterModule","forChild","exports","DoExerciseModule","FormsModule","ReactiveFormsModule","NbCardModule","NbButtonModule","DoThemeModule","DoCommonModule","declarations"],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'do-exercise-outlet',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class DoExerciseComponent {\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { FormGroup } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { TreeMode } from 'tree-ngx';\nimport {\n  RadioModel,\n  CheckboxModel,\n  SelectResponseModel,\n  Keyword,\n  DatatableFilter,\n} from '@dongkap/do-common';\nimport { DatePattern, HttpBaseModel, HttpMethod } from '@dongkap/do-core';\n\n@Component({\n  selector: 'do-exercise',\n  styleUrls: ['./exercise.component.scss'],\n  templateUrl: './exercise.component.html',\n})\nexport class ExerciseComponent implements OnInit {\n\n  formGroup: FormGroup;\n  dataCheckbox: CheckboxModel[] = [\n    {\n      name: 'Check Box 1',\n      selected: false,\n    },\n    {\n      name: 'Check Box 2',\n      selected: false,\n    },\n  ];\n  dataCheckboxEdited: CheckboxModel[] = [\n    {\n      name: 'Check Box 1',\n      selected: true,\n    },\n    {\n      name: 'Check Box 2',\n      selected: false,\n    },\n  ];\n  dataRadio: RadioModel[] = [\n    {\n      name: 'Radio 1',\n      value: 'Radio 1',\n    },\n    {\n      name: 'Radio 2',\n      value: 'Radio 2',\n    },\n  ];\n  dataStaticSelect: SelectResponseModel[] = [\n    {\n      'label': 'Data',\n      'value': '1',\n      'disabled': false,\n    },\n    {\n      'label': 'true',\n      'value': '2',\n      'disabled': false,\n    },\n    {\n      'label': 'number',\n      'value': '3',\n      'disabled': false,\n    },\n  ];\n  minLength: number = 5;\n  pattern: string = DatePattern.SLASH;\n\n  rows: any[] = [];\n  columns: TableColumn[] = [\n    { name: 'Name', prop: 'name', width: 150, frozenLeft: true },\n    { name: 'Gender', prop: 'gender', width: 50, frozenLeft: true },\n    { name: 'Age', prop: 'age', width: 25, frozenLeft: true },\n    { name: 'Company', prop: 'company', width: 200 },\n  ];\n  apiDatatable: HttpBaseModel = {\n    server: {\n      protocol: 'http',\n      host: 'localhost',\n      port: 4242,\n    },\n    path: '/assets/data/datatable.json',\n    method: HttpMethod.GET,\n  };\n  apiSelect: HttpBaseModel = {\n    server: {\n      protocol: 'http',\n      host: 'localhost',\n      port: 4242,\n    },\n    path: '/assets/data/select.json',\n    method: HttpMethod.GET,\n  };\n  formGroupFilter: FormGroup;\n  filters: DatatableFilter[];\n  keyword: Keyword;\n  options: any = {\n    mode: TreeMode.MultiSelect,\n    checkboxes: true,\n    alwaysEmitSelected: false,\n  };\n  nodeItems: any[] = [{\n    id: '0',\n    name: 'Heros',\n    children: [\n      {\n        id: '1',\n        name: 'Batman',\n        item: {\n          phrase: 'I am the batman'\n        }\n      },\n      {\n        id: '2',\n        name: 'Superman',\n        item: {\n          phrase: 'Man of steel'\n        }\n      }\n    ],\n    expanded: false\n  },\n  {\n    id: '3',\n    name: 'Villains',\n    selected: true,\n    children: [\n      {\n        id: '4',\n        name: 'Joker',\n        item: {\n          phrase: 'Why so serius'\n        },\n        selected: false,\n      },\n      {\n        id: '5',\n        name: 'Lex luthor',\n        item: {\n          phrase: 'I am the villain of this story'\n        },\n        selected: true,\n      }\n    ]\n  }];\n\n  ngOnInit(): void {\n  }\n\n  constructor(private formBuilder: FormBuilder,\n    public _d: DomSanitizer) {\n      this.formGroupFilter = this.formBuilder.group({\n        'name': [],\n        'gender': [],\n        'company': [],\n      });\n      this.filters = [\n        { controlName: 'name', type: 'input' },\n        { controlName: 'gender', type: 'input' },\n        { controlName: 'company', type: 'input' }];\n      this.formGroup = this.formBuilder.group({\n        'image': [],\n        'username': [{\n          value: 'username',\n          disabled: true,\n        }],\n        'currency': ['124124.124'],\n        'date': [{\n          value: '31/12/2019',\n          disabled: false,\n        }],\n        'checkbox': [this.dataCheckboxEdited],\n        'radio': [{\n          value: 'Radio 2',\n          disabled: false,\n        }],\n        'searchSelect': [],\n        'staticSelect': [{\n            label: 'number',\n        }],\n        'textarea': [{\n          value: 'Textarea',\n          disabled: false,\n        },\n        [Validators.minLength(this.minLength)]],\n        'ckeditor': [{\n          value: '<p>CKEditor</p>',\n          disabled: false,\n        }],\n        'tinyMCE': [{\n          value: '<p>TinyMCE</p>',\n          disabled: false,\n        }],\n      });\n      this.fetchDatatable((data: any[]) => {\n        this.rows = data;\n      });\n  }\n\n  doFilterAdvanced(keyword: Keyword) {\n    this.keyword = keyword;\n  }\n\n  fetchDatatable(cb) {\n    const req = new XMLHttpRequest();\n    req.open('GET', `assets/data/datatable.json`);\n\n    req.onload = () => {\n      cb(JSON.parse(req.response));\n    };\n\n    req.send();\n  }\n\n  onSubmit() {\n    console.log(this.formGroup.value);\n  }\n\n  uploadImage(file: any) {\n    console.log(file);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DoExerciseComponent } from './do-exercise.component';\nimport { ExerciseComponent } from './exercise.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DoExerciseComponent,\n    children: [\n      {\n        path: 'exercise',\n        component: ExerciseComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoExerciseRoutingModule {\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NbCardModule, NbButtonModule } from '@nebular/theme';\n\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport { DoCommonModule } from '@dongkap/do-common';\nimport { DoExerciseRoutingModule } from './do-exercise-routing.module';\nimport { DoExerciseComponent } from './do-exercise.component';\nimport { ExerciseComponent } from './exercise.component';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    NbCardModule,\n    NbButtonModule,\n    DoThemeModule,\n    DoCommonModule,\n    DoExerciseRoutingModule,\n  ],\n  declarations: [\n    DoExerciseComponent,\n    ExerciseComponent,\n  ],\n})\nexport class DoExerciseModule { }\n"]}