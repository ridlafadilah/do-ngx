{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@dongkap/do-extra/lib/password/change-password-page.component.ts","ng://@dongkap/do-extra/lib/do-extra.component.ts","ng://@dongkap/do-extra/lib/profile/profile-page.component.ts","ng://@dongkap/do-extra/lib/settings/settings-page.component.ts","ng://@dongkap/do-extra/lib/security/prompt/deactivated-prompt.component.ts","ng://@dongkap/do-extra/lib/security/prompt/deactivated-provider-prompt.component.ts","ng://@dongkap/do-extra/lib/security/security-page.component.ts","ng://@dongkap/do-extra/lib/system/system-page.component.ts","ng://@dongkap/do-extra/lib/terms/terms-conditions-page.component.ts","ng://@dongkap/do-extra/lib/privacy-policy/privacy-policy-page.component.ts","ng://@dongkap/do-extra/lib/do-extra-routing.module.ts","ng://@dongkap/do-extra/lib/home/home-page.component.ts","ng://@dongkap/do-extra/lib/do-extra.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","__read","o","n","m","Symbol","iterator","r","e","i","ar","next","done","push","value","error","__spread","arguments","length","concat","ChangePasswordPageComponent","injector","_this","_super","password","newPassword","confirmPassword","passwordPattern","Pattern","PASSWORD_MEDIUM","enc","get","EncryptionService","oauthResource","OAUTH_INFO","onSubmit","data","encryptAES","formGroup","pipe","takeUntil","destroy$","subscribe","response","respStatusCode","ResponseCode","ERR_SCR0002","toString","controls","setErrors","incorrect","ERR_SCR0006","equal","Injector","Component","args","selector","template","BaseFormComponent","ExtraComponent","ProfilePageComponent","userService","profileIndexedDB","authIndexedDB","username","disabled","name","idNumber","placeOfBirth","dateOfBirth","gender","email","phoneNumber","address","Validators","minLength","country","province","city","district","subDistrict","patternEmail","EMAIL","patternPhoneNumber","PHONE_NUMBER","disabledUpload","provider","formGroupImage","formBuilder","group","image","apiSelectGender","api","apiSelectCountry","apiSelectProvince","apiSelectCity","apiSelectDistrict","apiSelectSubDistrict","getEnc","then","disable","ngOnInit","onInit","Promise","all","paramSelectGender","key","paramSelectProvince","paramSelectCity","paramSelectDistrict","paramSelectSubDistrict","serviceName","apiName","loadingForm","exec","success","setValue","label","markAsPristine","err","toastr","showI18n","respStatusMessage","onSelectCountry","select","onClearProvince","onSelectProvince","onSelectCity","onClearCity","onSelectDistrict","onClearDistrict","onClearCountry","patchValue","uploadImage","file","FormData","append","updatePhotoUser","uploadFinished","enable","valueSelect","prop","valueSelectNonLabel","genderCode","countryCode","provinceCode","cityCode","districtCode","subDistrictCode","ERR_SCR0008","ERR_SCR0007A","error.pattern.phoneNumber","OK_SCR004","updateNameUser","UserInfo","decorators","type","Inject","USER_INFO","PROFILE_INDEXED_DB","AuthIndexedDBService","SettingsPageComponent","translate","themeService","settingsIndexedDB","locale","theme","dataTheme","selected","apiSelectLocale","localeCode","localeIdentifier","localeIcon","darkMode","current","OK_SCR002","changeTheme","put","http","HTTP_AUTH","menus","putEnc","JSON","stringify","getTranslation","lang","use","setTranslation","dark","TranslateService","NbThemeService","SETTINGS_INDEXED_DB","AUTH_INDEXED_DB","DeactivatedPromptComponent","ref","submit","close","NbDialogRef","DeactivatedProviderPromptComponent","form","FormGroup","FormControl","SecurityPageComponent","dialogService","authProvider","authToken","AuthTokenService","open","onClose","OK_SCR003","logout","NbDialogService","SystemPageComponent","TermsConditionsPageComponent","Subject","parameterCode","content","ngOnDestroy","complete","unsubscribe","BaseComponent","PrivacyPolicyPageComponent","routes","path","component","canActivateChild","AuthGuardChildService","children","code","DoExtraRoutingModule","NgModule","imports","RouterModule","forChild","exports","HomePageComponent","EXTRA_COMPONENTS","EXTRA_ENTRY_COMPONENTS","modules","FormsModule","ReactiveFormsModule","NbCardModule","NbAlertModule","NbIconModule","NbDialogModule","DoThemeModule","DoInputModule","DoCheckBoxModule","DoButtonModule","DoBaseModule","DoEditorModule","DoSelectModule","DoDatePickerModule","DoImageModule","DoExtraModule","declarations","entryComponents"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  Pattern,\n  EncryptionService,\n  ResponseCode,\n  OAUTH_INFO,\n  SecurityResourceModel,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { BaseFormComponent } from '@dongkap/do-common';\n\n@Component({\n  selector: 'do-change-password-page',\n  styleUrls: ['./change-password-page.component.scss'],\n  templateUrl: './change-password-page.component.html',\n})\nexport class ChangePasswordPageComponent extends BaseFormComponent<any> {\n\n  passwordPattern: string = Pattern.PASSWORD_MEDIUM;\n  private enc: EncryptionService;\n  private oauthResource: SecurityResourceModel;\n\n  constructor(public injector: Injector) {\n    super(injector, {\n      'password': [],\n      'newPassword': [],\n      'confirmPassword': [],\n    });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n  }\n\n  onSubmit(): void {\n    const data: any = {\n      password: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('password').value),\n      newPassword: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('newPassword').value),\n      confirmPassword: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('confirmPassword').value),\n    };\n    (super.onSubmit(data, 'security', 'change-password') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0002.toString():\n                    this.formGroup.controls['password'].setErrors({\n                      'incorrect': true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0006.toString():\n                    this.formGroup.controls['newPassword'].setErrors({\n                      'equal': true,\n                    });\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'do-extra',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class ExtraComponent {\n}\n","import { Component, Injector, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Validators, FormGroup } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  PROFILE_INDEXED_DB,\n  ResponseCode,\n  USER_INFO,\n  UserInfo,\n  Pattern,\n} from '@dongkap/do-core';\nimport { HttpBaseModel } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\nimport { BaseFormComponent, SelectParamModel } from '@dongkap/do-common';\nimport { AuthIndexedDBService } from '@dongkap/do-auth';\n\n@Component({\n  selector: 'do-profile-page',\n  styleUrls: ['./profile-page.component.scss'],\n  templateUrl: './profile-page.component.html',\n})\nexport class ProfilePageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public image: string;\n  public formGroupImage: FormGroup;\n  public uploadFinished: boolean;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPhoneNumber: string = Pattern.PHONE_NUMBER;\n  public minLength: number = 5;\n  public disabledUpload: boolean = false;\n  public provider: string = 'local';\n\n  public apiSelectGender: HttpBaseModel;\n  public paramSelectGender: SelectParamModel[];\n\n  public apiSelectCountry: HttpBaseModel;\n\n  public apiSelectProvince: HttpBaseModel;\n  public paramSelectProvince: SelectParamModel[];\n\n  public apiSelectCity: HttpBaseModel;\n  public paramSelectCity: SelectParamModel[];\n\n  public apiSelectDistrict: HttpBaseModel;\n  public paramSelectDistrict: SelectParamModel[];\n\n  public apiSelectSubDistrict: HttpBaseModel;\n  public paramSelectSubDistrict: SelectParamModel[];\n\n  constructor(\n    public injector: Injector,\n    @Inject(USER_INFO) private userService: UserInfo,\n    @Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector,\n      {\n        'username': [{\n          value: null,\n          disabled: true,\n        }],\n        'name': [],\n        'idNumber': [],\n        'placeOfBirth': [],\n        'dateOfBirth': [],\n        'gender': [],\n        'email': [],\n        'phoneNumber': [],\n        'address': [null, [Validators.minLength(5)]],\n        'country': [],\n        'province': [],\n        'city': [],\n        'district': [],\n        'subDistrict': [],\n      });\n    this.formGroupImage = this.formBuilder.group({\n      'image': [],\n    });\n    this.apiSelectGender = this.api['master']['select-parameter'];\n    this.apiSelectCountry = this.api['master']['select-country'];\n    this.apiSelectProvince = this.api['master']['select-province'];\n    this.apiSelectCity = this.api['master']['select-city'];\n    this.apiSelectDistrict = this.api['master']['select-district'];\n    this.apiSelectSubDistrict = this.api['master']['select-subdistrict'];\n    this.authIndexedDB.getEnc('provider').then((value: string) => {\n      if (value !== 'local') {\n        this.provider = value;\n        this.formGroup.controls['email'].disable();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.onInit('profile', 'get-profile');\n    Promise.all([\n      this.profileIndexedDB.get('image-b64'),\n      this.profileIndexedDB.get('image'),\n    ]).then((value: any[]) => {\n      if (value[0])\n        this.image = value[0];\n      else\n        this.image = value[1];\n    });\n    this.paramSelectGender = [{\n      key: 'parameterGroupCode',\n      value: 'GENDER',\n    }];\n    this.paramSelectProvince = [{\n      key: 'country',\n      value: 'undefined',\n    }];\n    this.paramSelectCity = [{\n      key: 'province',\n      value: 'undefined',\n    }];\n    this.paramSelectDistrict = [{\n      key: 'city',\n      value: 'undefined',\n    }];\n    this.paramSelectSubDistrict = [{\n      key: 'district',\n      value: 'undefined',\n    }];\n  }\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.formGroup.controls['name'].setValue(success['name']);\n          this.formGroup.controls['username'].setValue(success['username']);\n          this.formGroup.controls['idNumber'].setValue(success['idNumber']);\n          if (success['gender']) {\n            this.formGroup.controls['gender'].setValue({\n              label: success['gender'],\n              value: success['genderCode']\n            });\n          }\n          this.formGroup.controls['placeOfBirth'].setValue(success['placeOfBirth']);\n          if (success['dateOfBirth']) this.formGroup.get('dateOfBirth').setValue(success['dateOfBirth']);\n          this.formGroup.controls['email'].setValue(success['email']);\n          if (success['address']) this.formGroup.controls['address'].setValue(success['address']);\n          if (success['country']) {\n            this.formGroup.controls['country'].setValue({\n              label: success['country'],\n              value: success['countryCode']\n            });\n            this.paramSelectProvince = [\n              {\n                key: 'country',\n                value: success['countryCode'],\n              },\n            ];\n          }\n          if (success['province']) {\n            this.formGroup.controls['province'].setValue({\n              label: success['province'],\n              value: success['provinceCode']\n            });\n            this.paramSelectCity = [\n              {\n                key: 'province',\n                value: success['provinceCode'],\n              },\n            ];\n          }\n          if (success['city']) {\n            this.formGroup.controls['city'].setValue({\n              label: success['city'],\n              value: success['cityCode']\n            });\n            this.paramSelectDistrict = [\n              {\n                key: 'city',\n                value: success['cityCode'],\n              },\n            ];\n          }\n          if (success['district']) {\n            this.formGroup.controls['district'].setValue({\n              label: success['district'],\n              value: success['districtCode']\n            });\n            this.paramSelectSubDistrict = [\n              {\n                key: 'district',\n                value: success['districtCode'],\n              },\n            ];\n          }\n          if (success['subDistrict']) {\n            this.formGroup.controls['subDistrict'].setValue({\n              label: success['subDistrict'],\n              value: success['subDistrictCode']\n            });\n          }\n          if (success['phoneNumber']) this.formGroup.controls['phoneNumber'].setValue(success['phoneNumber']);\n          if (success['mobileNumber']) this.formGroup.controls['mobileNumber'].setValue(success['mobileNumber']);\n          this.authIndexedDB.getEnc('provider').then((value: string) => {\n            if (value !== 'local') {\n              this.provider = value;\n              this.formGroup.controls['email'].disable();\n            }\n          });\n          this.formGroup.markAsPristine();\n        },\n        (error: HttpErrorResponse) => {\n          this.loadingForm = true;\n          const err: ApiBaseResponse = error['error'];\n          if (err) {\n            this.toastr.showI18n(err.respStatusMessage[err.respStatusCode], true, null, 'danger');\n          } else {\n            this.toastr.showI18n(err as any, true, null, 'danger');\n          }\n        },\n      );\n  }\n\n  onSelectCountry(select: any): void {\n    this.paramSelectProvince = [\n      {\n        key: 'country',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectProvince(select: any): void {\n    this.paramSelectCity = [\n      {\n        key: 'province',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectCity(select: any): void {\n    this.paramSelectDistrict = [\n      {\n        key: 'city',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearCity();\n  }\n  onSelectDistrict(select: any): void {\n    this.paramSelectSubDistrict = [\n      {\n        key: 'district',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearDistrict();\n  }\n\n  onClearCountry(): void {\n    this.formGroup.patchValue({\n      'province': null,\n      'city': null,\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearProvince(): void {\n    this.formGroup.patchValue({\n      'city': null,\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearCity(): void {\n    this.formGroup.patchValue({\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearDistrict(): void {\n    this.formGroup.patchValue({\n      'subDistrict': null,\n    });\n  }\n\n  uploadImage(file: any) {\n    const data: FormData = new FormData();\n    data.append('photo', file);\n    this.formGroupImage.get('image').disable();\n    this.exec('file', 'photo-profile', data).subscribe(\n        (success: ApiBaseResponse) => {\n          this.userService.updatePhotoUser(file, success.respStatusMessage['checksum']);\n          this.uploadFinished = true;\n          this.formGroupImage.markAsPristine();\n          this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true, null, 'success');\n        },\n        (error: ApiBaseResponse) => {\n          this.formGroupImage.get('image').enable();\n          this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        },\n    );\n  }\n\n  valueSelect(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.label) {\n        return this.formGroup.get(prop).value.label;\n      } else {\n        return this.formGroup.get(prop).value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  valueSelectNonLabel(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.value) {\n        return this.formGroup.get(prop).value.value;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onSubmit() {\n    const data: any = {\n      name: this.formGroup.get('name').value,\n      idNumber: this.formGroup.get('idNumber').value,\n      placeOfBirth: this.formGroup.get('placeOfBirth').value,\n      dateOfBirth: this.formGroup.get('dateOfBirth').value,\n      gender: this.valueSelect('gender'),\n      genderCode: this.valueSelectNonLabel('gender'),\n      phoneNumber: this.formGroup.get('phoneNumber').value,\n      address: this.formGroup.get('address').value,\n      country: this.valueSelect('country'),\n      countryCode: this.valueSelectNonLabel('country'),\n      province: this.valueSelect('province'),\n      provinceCode: this.valueSelectNonLabel('province'),\n      city: this.valueSelect('city'),\n      cityCode: this.valueSelectNonLabel('city'),\n      district: this.valueSelect('district'),\n      districtCode: this.valueSelectNonLabel('district'),\n      subDistrict: this.valueSelect('subDistrict'),\n      subDistrictCode: this.valueSelectNonLabel('subDistrict'),\n    };\n    if (this.provider === 'local') {\n      data['email'] = this.formGroup.get('email').value;\n    }\n    (super.onSubmit(data, 'profile', 'change-profile') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0008.toString():\n                    this.formGroup.controls['email'].setErrors({\n                      'email': true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0007A.toString():\n                    this.formGroup.controls['phoneNumber'].setErrors({\n                      'error.pattern.phoneNumber': true,\n                    });\n                    break;\n                  case ResponseCode.OK_SCR004.toString():\n                    this.userService.updateNameUser(this.formGroup.get('name').value);\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","import { Component, Injector, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IndexedDBEncFactoryService,\n  AUTH_INDEXED_DB,\n  SETTINGS_INDEXED_DB,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { HttpBaseModel } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\nimport { CheckboxModel, BaseFormComponent } from '@dongkap/do-common';\n\n@Component({\n  selector: 'do-settings-page',\n  styleUrls: ['./settings-page.component.scss'],\n  templateUrl: './settings-page.component.html',\n})\nexport class SettingsPageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public apiSelectLocale: HttpBaseModel;\n  public localeIcon: string;\n  private localeCode: any;\n  private localeIdentifier: any;\n  public dataTheme: CheckboxModel[] = [\n    {\n      selected: false,\n    },\n  ];\n\n  constructor(\n    public injector: Injector,\n    private translate: TranslateService,\n    private themeService: NbThemeService,\n    @Inject(SETTINGS_INDEXED_DB) private settingsIndexedDB: IndexedDBFactoryService,\n    @Inject(AUTH_INDEXED_DB) private authIndexedDB: IndexedDBEncFactoryService) {\n      super(injector, {\n        'locale': [],\n        'theme': [],\n      });\n      this.apiSelectLocale = this.api['master']['select-all-locale'];\n    }\n\n  ngOnInit(): void {\n    this.onInit('security', 'get-settings');\n  }\n\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.localeCode = success['localeCode'];\n          this.localeIdentifier = success['localeIdentifier'];\n          this.localeIcon = success['localeIcon'] ? success['localeIcon'] : '';\n          this.formGroup.controls['locale'].setValue(this.localeIdentifier);\n          let darkMode: CheckboxModel[] = [{\n            selected: false,\n          }];\n          if (success['theme'] === 'dark') {\n            darkMode = [{\n              selected: true,\n            }];\n          }\n          this.formGroup.controls['theme'].setValue(darkMode);\n          this.formGroup.markAsPristine();\n        },\n        (error: ApiBaseResponse) => {\n          this.loadingForm = true;\n          if (error.respStatusMessage)\n            this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        },\n      );\n  }\n\n  onSubmit() {\n    if (this.formGroup.get('locale').value['value']) {\n      this.localeCode = this.formGroup.get('locale').value['value'];\n      this.localeIdentifier = this.formGroup.get('locale').value['label'];\n      this.localeIcon = this.formGroup.get('locale').value['icon'];\n    }\n    const theme: CheckboxModel[] = this.formGroup.get('theme').value;\n    const data: any = {\n      'localeCode': this.localeCode,\n      'localeIdentifier': this.localeIdentifier,\n      'localeIcon': this.localeIcon,\n      'theme': theme[0].selected ? 'dark' : 'default',\n    };\n    this.disabled = true;\n    Promise.all([\n      this.settingsIndexedDB.get('locale'),\n      this.settingsIndexedDB.get('theme'),\n    ]).then((current: any[]) => {\n      if ((current[0] !== this.localeCode) || (current[1] !== data['theme'])) {\n        this.exec('security', 'change-settings', data).subscribe(\n          (success: ApiBaseResponse) => {\n            if (success) {\n              if (success.respStatusCode === ResponseCode.OK_SCR002.toString()) {\n                if (theme) {\n                  this.changeTheme(theme[0].selected);\n                }\n                if (current[0] !== this.localeCode) {\n                  this.settingsIndexedDB.put('locale', this.localeCode).then(() => {\n                    this.http.HTTP_AUTH(this.api['security']['get-menus']).subscribe(\n                      (menus: any) => {\n                        Promise.all([\n                          this.authIndexedDB.putEnc('menus', JSON.stringify(menus['main'])),\n                          this.authIndexedDB.putEnc('extras', JSON.stringify(menus['extra'])),\n                        ]).then(() => {\n                          this.translate.getTranslation(this.localeCode).subscribe((lang: any) => {\n                            this.translate.use(this.localeCode);\n                            this.translate.setTranslation(this.localeCode, lang, true);\n                            this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true);\n                            this.disabled = false;\n                            this.formGroup.markAsPristine();\n                          });\n                        });\n                      },\n                      (error: any) => {\n                        this.toastr.showI18n('error.translate', false, null, 'warning');\n                      });\n                  });\n                }\n              }\n            }\n          },\n          (error: ApiBaseResponse) => {\n              this.disabled = false;\n              this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n          },\n        );\n      }\n    });\n  }\n\n  changeTheme(dark: boolean) {\n    const theme: string = dark ? 'dark' : 'default';\n    this.settingsIndexedDB.put('theme', theme).then();\n    this.themeService.changeTheme(theme);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'do-deactivated-prompt',\n  templateUrl: 'deactivated-prompt.component.html',\n  styleUrls: ['deactivated-prompt.component.scss'],\n})\nexport class DeactivatedPromptComponent {\n\n  public disabled: boolean = false;\n  public password: string;\n\n  constructor(protected ref: NbDialogRef<DeactivatedPromptComponent>) {\n  }\n\n  submit(password) {\n    this.disabled = true;\n    this.ref.close(password);\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\nimport { Pattern } from '@dongkap/do-core';\n\n@Component({\n  selector: 'do-deactivated-provider-prompt',\n  templateUrl: 'deactivated-provider-prompt.component.html',\n  styleUrls: ['deactivated-provider-prompt.component.scss'],\n})\nexport class DeactivatedProviderPromptComponent {\n\n  public disabled: boolean = false;\n  public patternEmail: string = Pattern.EMAIL;\n\n  public form: FormGroup = new FormGroup({\n    email: new FormControl(),\n  });\n\n  constructor(protected ref: NbDialogRef<DeactivatedProviderPromptComponent>) {\n  }\n\n  submit() {\n    this.disabled = true;\n    this.ref.close(this.form.get('email').value);\n  }\n}\n","import { Component, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  ResponseCode,\n  OAUTH_INFO,\n  SecurityResourceModel,\n  EncryptionService\n } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { AuthIndexedDBService, AuthTokenService } from '@dongkap/do-auth';\nimport { BaseFormComponent } from '@dongkap/do-common';\nimport { DeactivatedPromptComponent } from './prompt/deactivated-prompt.component';\nimport { DeactivatedProviderPromptComponent } from './prompt/deactivated-provider-prompt.component';\n\n@Component({\n  selector: 'do-security-page',\n  styleUrls: ['./security-page.component.scss'],\n  templateUrl: './security-page.component.html',\n})\nexport class SecurityPageComponent extends BaseFormComponent<any> {\n\n  private enc: EncryptionService;\n  private oauthResource: SecurityResourceModel;\n  private authToken: AuthTokenService;\n  public authProvider: boolean = true;\n  public provider: any;\n\n  constructor(public injector: Injector,\n    private dialogService: NbDialogService,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector, {\n      'password': [],\n    });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n    this.authToken = injector.get(AuthTokenService);\n    this.authIndexedDB.getEnc('provider').then((value: string) => {\n      this.provider = {\n        'value': value,\n      };\n      if (value === 'local') {\n        this.authProvider = false;\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.disabled = true;\n    if (this.authProvider) {\n      this.dialogService.open(DeactivatedProviderPromptComponent)\n        .onClose.subscribe((email: string) => {\n          if (email) {\n            this.disabled = true;\n            const data: any = {\n              'email': email,\n              'provider': this.provider['value'],\n            };\n            (super.onSubmit(data, 'security', 'deactivated') as Observable<ApiBaseResponse>)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe((response: ApiBaseResponse) => {\n                if (response) {\n                  if (response.respStatusCode === ResponseCode.OK_SCR003.toString()) {\n                    this.authToken.logout();\n                  }\n                }\n              });\n          } else {\n            this.disabled = false;\n          }\n        });\n    } else {\n      this.dialogService.open(DeactivatedPromptComponent)\n        .onClose.subscribe((password: string) => {\n          if (password) {\n            this.disabled = true;\n            const data: any = {\n              password: this.enc.encryptAES(this.oauthResource['aes_key'], password),\n            };\n            (super.onSubmit(data, 'security', 'deactivated') as Observable<ApiBaseResponse>)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe((response: ApiBaseResponse) => {\n                if (response) {\n                  if (response.respStatusCode === ResponseCode.OK_SCR003.toString()) {\n                    this.authToken.logout();\n                  }\n                }\n              });\n          } else {\n            this.disabled = false;\n          }\n        });\n    }\n  }\n\n}\n","import { Component, Injector, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Validators, FormGroup } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  PROFILE_INDEXED_DB,\n  ResponseCode,\n  USER_INFO,\n  UserInfo,\n  Pattern,\n} from '@dongkap/do-core';\nimport { HttpBaseModel } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\nimport { BaseFormComponent, SelectParamModel } from '@dongkap/do-common';\nimport { AuthIndexedDBService } from '@dongkap/do-auth';\n\n@Component({\n  selector: 'do-system-page',\n  styleUrls: ['./system-page.component.scss'],\n  templateUrl: './system-page.component.html',\n})\nexport class SystemPageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public image: string;\n  public formGroupImage: FormGroup;\n  public uploadFinished: boolean;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPhoneNumber: string = Pattern.PHONE_NUMBER;\n  public minLength: number = 5;\n  public disabledUpload: boolean = false;\n  public provider: string = 'local';\n\n  public apiSelectCountry: HttpBaseModel;\n\n  public apiSelectProvince: HttpBaseModel;\n  public paramSelectProvince: SelectParamModel[];\n\n  public apiSelectCity: HttpBaseModel;\n  public paramSelectCity: SelectParamModel[];\n\n  public apiSelectDistrict: HttpBaseModel;\n  public paramSelectDistrict: SelectParamModel[];\n\n  public apiSelectSubDistrict: HttpBaseModel;\n  public paramSelectSubDistrict: SelectParamModel[];\n\n  constructor(\n    public injector: Injector,\n    @Inject(USER_INFO) private userService: UserInfo,\n    @Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector,\n      {\n        'username': [{\n          value: null,\n          disabled: true,\n        }],\n        'name': [],\n        'email': [],\n        'phoneNumber': [],\n        'address': [null, [Validators.minLength(5)]],\n        'country': [],\n        'province': [],\n        'city': [],\n        'district': [],\n        'subDistrict': [],\n      });\n    this.formGroupImage = this.formBuilder.group({\n      'image': [],\n    });\n    this.apiSelectCountry = this.api['master']['select-country'];\n    this.apiSelectProvince = this.api['master']['select-province'];\n    this.apiSelectCity = this.api['master']['select-city'];\n    this.apiSelectDistrict = this.api['master']['select-district'];\n    this.apiSelectSubDistrict = this.api['master']['select-subdistrict'];\n    this.authIndexedDB.getEnc('provider').then((value: string) => {\n      if (value !== 'local') {\n        this.provider = value;\n        this.formGroup.controls['email'].disable();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.onInit('profile', 'get-profile-system');\n    Promise.all([\n      this.profileIndexedDB.get('image-b64'),\n      this.profileIndexedDB.get('image'),\n    ]).then((value: any[]) => {\n      if (value[0])\n        this.image = value[0];\n      else\n        this.image = value[1];\n    });\n    this.paramSelectProvince = [{\n      key: 'country',\n      value: 'undefined',\n    }];\n    this.paramSelectCity = [{\n      key: 'province',\n      value: 'undefined',\n    }];\n    this.paramSelectDistrict = [{\n      key: 'city',\n      value: 'undefined',\n    }];\n    this.paramSelectSubDistrict = [{\n      key: 'district',\n      value: 'undefined',\n    }];\n  }\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.formGroup.controls['name'].setValue(success['name']);\n          this.formGroup.controls['username'].setValue(success['username']);\n          this.formGroup.controls['email'].setValue(success['email']);\n          if (success['address']) this.formGroup.controls['address'].setValue(success['address']);\n          if (success['country']) {\n            this.formGroup.controls['country'].setValue({\n              label: success['country'],\n              value: success['countryCode']\n            });\n            this.paramSelectProvince = [\n              {\n                key: 'country',\n                value: success['countryCode'],\n              },\n            ];\n          }\n          if (success['province']) {\n            this.formGroup.controls['province'].setValue({\n              label: success['province'],\n              value: success['provinceCode']\n            });\n            this.paramSelectCity = [\n              {\n                key: 'province',\n                value: success['provinceCode'],\n              },\n            ];\n          }\n          if (success['city']) {\n            this.formGroup.controls['city'].setValue({\n              label: success['city'],\n              value: success['cityCode']\n            });\n            this.paramSelectDistrict = [\n              {\n                key: 'city',\n                value: success['cityCode'],\n              },\n            ];\n          }\n          if (success['district']) {\n            this.formGroup.controls['district'].setValue({\n              label: success['district'],\n              value: success['districtCode']\n            });\n            this.paramSelectSubDistrict = [\n              {\n                key: 'district',\n                value: success['districtCode'],\n              },\n            ];\n          }\n          if (success['subDistrict']) {\n            this.formGroup.controls['subDistrict'].setValue({\n              label: success['subDistrict'],\n              value: success['subDistrictCode']\n            });\n          }\n          if (success['phoneNumber']) this.formGroup.controls['phoneNumber'].setValue(success['phoneNumber']);\n          if (success['mobileNumber']) this.formGroup.controls['mobileNumber'].setValue(success['mobileNumber']);\n          this.authIndexedDB.getEnc('provider').then((value: string) => {\n            if (value !== 'local') {\n              this.provider = value;\n              this.formGroup.controls['email'].disable();\n            }\n          });\n          this.formGroup.markAsPristine();\n        },\n        (error: HttpErrorResponse) => {\n          this.loadingForm = true;\n          const err: ApiBaseResponse = error['error'];\n          if (err) {\n            this.toastr.showI18n(err.respStatusMessage[err.respStatusCode], true, null, 'danger');\n          } else {\n            this.toastr.showI18n(err as any, true, null, 'danger');\n          }\n        },\n      );\n  }\n\n  onSelectCountry(select: any): void {\n    this.paramSelectProvince = [\n      {\n        key: 'country',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectProvince(select: any): void {\n    this.paramSelectCity = [\n      {\n        key: 'province',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectCity(select: any): void {\n    this.paramSelectDistrict = [\n      {\n        key: 'city',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearCity();\n  }\n  onSelectDistrict(select: any): void {\n    this.paramSelectSubDistrict = [\n      {\n        key: 'district',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearDistrict();\n  }\n\n  onClearCountry(): void {\n    this.formGroup.patchValue({\n      'province': null,\n      'city': null,\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearProvince(): void {\n    this.formGroup.patchValue({\n      'city': null,\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearCity(): void {\n    this.formGroup.patchValue({\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearDistrict(): void {\n    this.formGroup.patchValue({\n      'subDistrict': null,\n    });\n  }\n\n  uploadImage(file: any) {\n    const data: FormData = new FormData();\n    data.append('photo', file);\n    this.formGroupImage.get('image').disable();\n    this.exec('file', 'photo-profile', data).subscribe(\n        (success: ApiBaseResponse) => {\n          this.userService.updatePhotoUser(file, success.respStatusMessage['checksum']);\n          this.uploadFinished = true;\n          this.formGroupImage.markAsPristine();\n          this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true, null, 'success');\n        },\n        (error: ApiBaseResponse) => {\n          this.formGroupImage.get('image').enable();\n          this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        },\n    );\n  }\n\n  valueSelect(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.label) {\n        return this.formGroup.get(prop).value.label;\n      } else {\n        return this.formGroup.get(prop).value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  valueSelectNonLabel(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.value) {\n        return this.formGroup.get(prop).value.value;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onSubmit() {\n    const data: any = {\n      name: this.formGroup.get('name').value,\n      phoneNumber: this.formGroup.get('phoneNumber').value,\n      address: this.formGroup.get('address').value,\n      country: this.valueSelect('country'),\n      countryCode: this.valueSelectNonLabel('country'),\n      province: this.valueSelect('province'),\n      provinceCode: this.valueSelectNonLabel('province'),\n      city: this.valueSelect('city'),\n      cityCode: this.valueSelectNonLabel('city'),\n      district: this.valueSelect('district'),\n      districtCode: this.valueSelectNonLabel('district'),\n      subDistrict: this.valueSelect('subDistrict'),\n      subDistrictCode: this.valueSelectNonLabel('subDistrict'),\n    };\n    if (this.provider === 'local') {\n      data['email'] = this.formGroup.get('email').value;\n    }\n    (super.onSubmit(data, 'profile', 'change-profile-system') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0008.toString():\n                    this.formGroup.controls['email'].setErrors({\n                      'email': true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0007A.toString():\n                    this.formGroup.controls['phoneNumber'].setErrors({\n                      'error.pattern.phoneNumber': true,\n                    });\n                    break;\n                  case ResponseCode.OK_SCR004.toString():\n                    this.userService.updateNameUser(this.formGroup.get('name').value);\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","import { Component, Injector } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseComponent } from '@dongkap/do-common';\n\n@Component({\n  selector: 'do-terms-conditions-page',\n  styleUrls: ['./terms-conditions-page.component.scss'],\n  templateUrl: './terms-conditions-page.component.html',\n})\nexport class TermsConditionsPageComponent extends BaseComponent<any> implements OnInit, OnDestroy {\n\n  public content: string;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(public injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    const data: any = {\n      'parameterCode': 'TERMS_CONDITIONS.DONGKAP'\n    };\n    this.http.HTTP_AUTH(this.api['master']['parameter'], data)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.content = response['parameterValue'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n}\n","import { Component, Injector } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseComponent } from '@dongkap/do-common';\n\n@Component({\n  selector: 'do-privacy-policy-page-page',\n  styleUrls: ['./privacy-policy-page.component.scss'],\n  templateUrl: './privacy-policy-page.component.html',\n})\nexport class PrivacyPolicyPageComponent extends BaseComponent<any> implements OnInit, OnDestroy {\n\n  public content: string;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(public injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    const data: any = {\n      'parameterCode': 'PRIVACY_POLICY.DONGKAP'\n    };\n    this.http.HTTP_AUTH(this.api['master']['parameter'], data)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.content = response['parameterValue'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardChildService } from '@dongkap/do-auth';\nimport { ExtraComponent } from './do-extra.component';\nimport { ProfilePageComponent } from './profile/profile-page.component';\nimport { SettingsPageComponent } from './settings/settings-page.component';\nimport { SecurityPageComponent } from './security/security-page.component';\nimport { SystemPageComponent } from './system/system-page.component';\nimport { TermsConditionsPageComponent } from './terms/terms-conditions-page.component';\nimport { PrivacyPolicyPageComponent } from './privacy-policy/privacy-policy-page.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ExtraComponent,\n  canActivateChild: [AuthGuardChildService],\n  children: [\n    {\n      path: 'profile',\n      component: ProfilePageComponent,\n      data: {\n        code: '#PROFILE-PAGE',\n      },\n    },\n    {\n      path: 'system',\n      component: SystemPageComponent,\n      data: {\n        code: '#SYSTEM-PAGE',\n      },\n    },\n    {\n      path: 'security',\n      component: SecurityPageComponent,\n      data: {\n        code: '#SECURITY-PAGE',\n      },\n    },\n    {\n      path: 'settings',\n      component: SettingsPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n    {\n      path: 'terms',\n      component: TermsConditionsPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n    {\n      path: 'privacy-policy',\n      component: PrivacyPolicyPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoExtraRoutingModule {\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { PROFILE_INDEXED_DB } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\n\n@Component({\n  selector: 'do-home-page',\n  styleUrls: ['./home-page.component.scss'],\n  templateUrl: './home-page.component.html',\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n\n  public name: Promise<string>;\n\n  constructor(@Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService) {}\n\n  ngOnInit(): void {\n    this.name = this.profileIndexedDB.get('name');\n  }\n\n  ngOnDestroy(): void {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NbCardModule, NbDialogModule, NbAlertModule, NbIconModule } from '@nebular/theme';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport {\n  DoInputModule,\n  DoButtonModule,\n  DoBaseModule,\n  DoCheckBoxModule,\n  DoEditorModule,\n  DoSelectModule,\n  DoImageModule,\n  DoDatePickerModule,\n} from '@dongkap/do-common';\nimport { ChangePasswordPageComponent } from './password/change-password-page.component';\nimport { ExtraComponent } from './do-extra.component';\nimport { DoExtraRoutingModule } from './do-extra-routing.module';\nimport { ProfilePageComponent } from './profile/profile-page.component';\nimport { SettingsPageComponent } from './settings/settings-page.component';\nimport { SecurityPageComponent } from './security/security-page.component';\nimport { DeactivatedPromptComponent } from './security/prompt/deactivated-prompt.component';\nimport { HomePageComponent } from './home/home-page.component';\nimport { SystemPageComponent } from './system/system-page.component';\nimport { TermsConditionsPageComponent } from './terms/terms-conditions-page.component';\nimport { PrivacyPolicyPageComponent } from './privacy-policy/privacy-policy-page.component';\nimport { DeactivatedProviderPromptComponent } from './security/prompt/deactivated-provider-prompt.component';\n\nconst EXTRA_COMPONENTS = [\n  ExtraComponent,\n  ChangePasswordPageComponent,\n  DeactivatedPromptComponent,\n  DeactivatedProviderPromptComponent,\n  SecurityPageComponent,\n  ProfilePageComponent,\n  SystemPageComponent,\n  SettingsPageComponent,\n  HomePageComponent,\n  TermsConditionsPageComponent,\n  PrivacyPolicyPageComponent,\n];\n\nconst EXTRA_ENTRY_COMPONENTS = [\n  DeactivatedPromptComponent,\n  DeactivatedProviderPromptComponent,\n];\n\nconst modules = [\n  FormsModule,\n  ReactiveFormsModule,\n  NbCardModule,\n  NbAlertModule,\n  NbIconModule,\n  NbDialogModule.forChild(),\n  DoThemeModule,\n  DoInputModule,\n  DoCheckBoxModule,\n  DoButtonModule,\n  DoBaseModule,\n  DoEditorModule,\n  DoSelectModule,\n  DoDatePickerModule,\n  DoImageModule,\n  DoExtraRoutingModule,\n];\n\n@NgModule({\n  imports: [\n    ...modules,\n  ],\n  declarations: [\n    ...EXTRA_COMPONENTS,\n  ],\n  entryComponents: [\n    ...EXTRA_ENTRY_COMPONENTS,\n  ],\n})\nexport class DoExtraModule { }\n"]}