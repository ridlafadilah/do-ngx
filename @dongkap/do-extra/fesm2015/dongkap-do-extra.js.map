{"version":3,"file":"dongkap-do-extra.js","sources":["ng://@dongkap/do-extra/lib/password/change-password-page.component.ts","ng://@dongkap/do-extra/lib/do-extra.component.ts","ng://@dongkap/do-extra/lib/profile/profile-page.component.ts","ng://@dongkap/do-extra/lib/settings/settings-page.component.ts","ng://@dongkap/do-extra/lib/security/prompt/deactivated-prompt.component.ts","ng://@dongkap/do-extra/lib/security/prompt/deactivated-provider-prompt.component.ts","ng://@dongkap/do-extra/lib/security/security-page.component.ts","ng://@dongkap/do-extra/lib/system/system-page.component.ts","ng://@dongkap/do-extra/lib/terms/terms-conditions-page.component.ts","ng://@dongkap/do-extra/lib/privacy-policy/privacy-policy-page.component.ts","ng://@dongkap/do-extra/lib/do-extra-routing.module.ts","ng://@dongkap/do-extra/lib/home/home-page.component.ts","ng://@dongkap/do-extra/lib/do-extra.module.ts","ng://@dongkap/do-extra/index.ts","ng://@dongkap/do-extra/dongkap-do-extra.ts"],"sourcesContent":["import { Component, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  Pattern,\n  EncryptionService,\n  ResponseCode,\n  OAUTH_INFO,\n  SecurityResourceModel,\n} from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { BaseFormComponent } from '@dongkap/do-common';\n\n@Component({\n  selector: 'do-change-password-page',\n  styleUrls: ['./change-password-page.component.scss'],\n  templateUrl: './change-password-page.component.html',\n})\nexport class ChangePasswordPageComponent extends BaseFormComponent<any> {\n\n  passwordPattern: string = Pattern.PASSWORD_MEDIUM;\n  private enc: EncryptionService;\n  private oauthResource: SecurityResourceModel;\n\n  constructor(public injector: Injector) {\n    super(injector, {\n      'password': [],\n      'newPassword': [],\n      'confirmPassword': [],\n    });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n  }\n\n  onSubmit(): void {\n    const data: any = {\n      password: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('password').value),\n      newPassword: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('newPassword').value),\n      confirmPassword: this.enc.encryptAES(this.oauthResource['aes_key'], this.formGroup.get('confirmPassword').value),\n    };\n    (super.onSubmit(data, 'security', 'change-password') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0002.toString():\n                    this.formGroup.controls['password'].setErrors({\n                      'incorrect': true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0006.toString():\n                    this.formGroup.controls['newPassword'].setErrors({\n                      'equal': true,\n                    });\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'do-extra',\n  template: `\n    <router-outlet></router-outlet>\n  `,\n})\nexport class ExtraComponent {\n}\n","import { Component, Injector, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Validators, FormGroup } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  PROFILE_INDEXED_DB,\n  ResponseCode,\n  USER_INFO,\n  UserInfo,\n  Pattern,\n} from '@dongkap/do-core';\nimport { HttpBaseModel } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\nimport { BaseFormComponent, SelectParamModel } from '@dongkap/do-common';\nimport { AuthIndexedDBService } from '@dongkap/do-auth';\n\n@Component({\n  selector: 'do-profile-page',\n  styleUrls: ['./profile-page.component.scss'],\n  templateUrl: './profile-page.component.html',\n})\nexport class ProfilePageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public image: string;\n  public formGroupImage: FormGroup;\n  public uploadFinished: boolean;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPhoneNumber: string = Pattern.PHONE_NUMBER;\n  public minLength: number = 5;\n  public disabledUpload: boolean = false;\n  public provider: string = 'local';\n\n  public apiSelectGender: HttpBaseModel;\n  public paramSelectGender: SelectParamModel[];\n\n  public apiSelectCountry: HttpBaseModel;\n\n  public apiSelectProvince: HttpBaseModel;\n  public paramSelectProvince: SelectParamModel[];\n\n  public apiSelectCity: HttpBaseModel;\n  public paramSelectCity: SelectParamModel[];\n\n  public apiSelectDistrict: HttpBaseModel;\n  public paramSelectDistrict: SelectParamModel[];\n\n  public apiSelectSubDistrict: HttpBaseModel;\n  public paramSelectSubDistrict: SelectParamModel[];\n\n  constructor(\n    public injector: Injector,\n    @Inject(USER_INFO) private userService: UserInfo,\n    @Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector,\n      {\n        'username': [{\n          value: null,\n          disabled: true,\n        }],\n        'name': [],\n        'idNumber': [],\n        'placeOfBirth': [],\n        'dateOfBirth': [],\n        'gender': [],\n        'email': [],\n        'phoneNumber': [],\n        'address': [null, [Validators.minLength(5)]],\n        'country': [],\n        'province': [],\n        'city': [],\n        'district': [],\n        'subDistrict': [],\n      });\n    this.formGroupImage = this.formBuilder.group({\n      'image': [],\n    });\n    this.apiSelectGender = this.api['master']['select-parameter'];\n    this.apiSelectCountry = this.api['master']['select-country'];\n    this.apiSelectProvince = this.api['master']['select-province'];\n    this.apiSelectCity = this.api['master']['select-city'];\n    this.apiSelectDistrict = this.api['master']['select-district'];\n    this.apiSelectSubDistrict = this.api['master']['select-subdistrict'];\n    this.authIndexedDB.getEnc('provider').then((value: string) => {\n      if (value !== 'local') {\n        this.provider = value;\n        this.formGroup.controls['email'].disable();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.onInit('profile', 'get-profile');\n    Promise.all([\n      this.profileIndexedDB.get('image-b64'),\n      this.profileIndexedDB.get('image'),\n    ]).then((value: any[]) => {\n      if (value[0])\n        this.image = value[0];\n      else\n        this.image = value[1];\n    });\n    this.paramSelectGender = [{\n      key: 'parameterGroupCode',\n      value: 'GENDER',\n    }];\n    this.paramSelectProvince = [{\n      key: 'country',\n      value: 'undefined',\n    }];\n    this.paramSelectCity = [{\n      key: 'province',\n      value: 'undefined',\n    }];\n    this.paramSelectDistrict = [{\n      key: 'city',\n      value: 'undefined',\n    }];\n    this.paramSelectSubDistrict = [{\n      key: 'district',\n      value: 'undefined',\n    }];\n  }\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.formGroup.controls['name'].setValue(success['name']);\n          this.formGroup.controls['username'].setValue(success['username']);\n          this.formGroup.controls['idNumber'].setValue(success['idNumber']);\n          if (success['gender']) {\n            this.formGroup.controls['gender'].setValue({\n              label: success['gender'],\n              value: success['genderCode']\n            });\n          }\n          this.formGroup.controls['placeOfBirth'].setValue(success['placeOfBirth']);\n          if (success['dateOfBirth']) this.formGroup.get('dateOfBirth').setValue(success['dateOfBirth']);\n          this.formGroup.controls['email'].setValue(success['email']);\n          if (success['address']) this.formGroup.controls['address'].setValue(success['address']);\n          if (success['country']) {\n            this.formGroup.controls['country'].setValue({\n              label: success['country'],\n              value: success['countryCode']\n            });\n            this.paramSelectProvince = [\n              {\n                key: 'country',\n                value: success['countryCode'],\n              },\n            ];\n          }\n          if (success['province']) {\n            this.formGroup.controls['province'].setValue({\n              label: success['province'],\n              value: success['provinceCode']\n            });\n            this.paramSelectCity = [\n              {\n                key: 'province',\n                value: success['provinceCode'],\n              },\n            ];\n          }\n          if (success['city']) {\n            this.formGroup.controls['city'].setValue({\n              label: success['city'],\n              value: success['cityCode']\n            });\n            this.paramSelectDistrict = [\n              {\n                key: 'city',\n                value: success['cityCode'],\n              },\n            ];\n          }\n          if (success['district']) {\n            this.formGroup.controls['district'].setValue({\n              label: success['district'],\n              value: success['districtCode']\n            });\n            this.paramSelectSubDistrict = [\n              {\n                key: 'district',\n                value: success['districtCode'],\n              },\n            ];\n          }\n          if (success['subDistrict']) {\n            this.formGroup.controls['subDistrict'].setValue({\n              label: success['subDistrict'],\n              value: success['subDistrictCode']\n            });\n          }\n          if (success['phoneNumber']) this.formGroup.controls['phoneNumber'].setValue(success['phoneNumber']);\n          if (success['mobileNumber']) this.formGroup.controls['mobileNumber'].setValue(success['mobileNumber']);\n          this.authIndexedDB.getEnc('provider').then((value: string) => {\n            if (value !== 'local') {\n              this.provider = value;\n              this.formGroup.controls['email'].disable();\n            }\n          });\n          this.formGroup.markAsPristine();\n        },\n        (error: HttpErrorResponse) => {\n          this.loadingForm = true;\n          const err: ApiBaseResponse = error['error'];\n          if (err) {\n            this.toastr.showI18n(err.respStatusMessage[err.respStatusCode], true, null, 'danger');\n          } else {\n            this.toastr.showI18n(err as any, true, null, 'danger');\n          }\n        },\n      );\n  }\n\n  onSelectCountry(select: any): void {\n    this.paramSelectProvince = [\n      {\n        key: 'country',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectProvince(select: any): void {\n    this.paramSelectCity = [\n      {\n        key: 'province',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectCity(select: any): void {\n    this.paramSelectDistrict = [\n      {\n        key: 'city',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearCity();\n  }\n  onSelectDistrict(select: any): void {\n    this.paramSelectSubDistrict = [\n      {\n        key: 'district',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearDistrict();\n  }\n\n  onClearCountry(): void {\n    this.formGroup.patchValue({\n      'province': null,\n      'city': null,\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearProvince(): void {\n    this.formGroup.patchValue({\n      'city': null,\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearCity(): void {\n    this.formGroup.patchValue({\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearDistrict(): void {\n    this.formGroup.patchValue({\n      'subDistrict': null,\n    });\n  }\n\n  uploadImage(file: any) {\n    const data: FormData = new FormData();\n    data.append('photo', file);\n    this.formGroupImage.get('image').disable();\n    this.exec('file', 'photo-profile', data).subscribe(\n        (success: ApiBaseResponse) => {\n          this.userService.updatePhotoUser(file, success.respStatusMessage['checksum']);\n          this.uploadFinished = true;\n          this.formGroupImage.markAsPristine();\n          this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true, null, 'success');\n        },\n        (error: ApiBaseResponse) => {\n          this.formGroupImage.get('image').enable();\n          this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        },\n    );\n  }\n\n  valueSelect(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.label) {\n        return this.formGroup.get(prop).value.label;\n      } else {\n        return this.formGroup.get(prop).value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  valueSelectNonLabel(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.value) {\n        return this.formGroup.get(prop).value.value;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onSubmit() {\n    const data: any = {\n      name: this.formGroup.get('name').value,\n      idNumber: this.formGroup.get('idNumber').value,\n      placeOfBirth: this.formGroup.get('placeOfBirth').value,\n      dateOfBirth: this.formGroup.get('dateOfBirth').value,\n      gender: this.valueSelect('gender'),\n      genderCode: this.valueSelectNonLabel('gender'),\n      phoneNumber: this.formGroup.get('phoneNumber').value,\n      address: this.formGroup.get('address').value,\n      country: this.valueSelect('country'),\n      countryCode: this.valueSelectNonLabel('country'),\n      province: this.valueSelect('province'),\n      provinceCode: this.valueSelectNonLabel('province'),\n      city: this.valueSelect('city'),\n      cityCode: this.valueSelectNonLabel('city'),\n      district: this.valueSelect('district'),\n      districtCode: this.valueSelectNonLabel('district'),\n      subDistrict: this.valueSelect('subDistrict'),\n      subDistrictCode: this.valueSelectNonLabel('subDistrict'),\n    };\n    if (this.provider === 'local') {\n      data['email'] = this.formGroup.get('email').value;\n    }\n    (super.onSubmit(data, 'profile', 'change-profile') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0008.toString():\n                    this.formGroup.controls['email'].setErrors({\n                      'email': true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0007A.toString():\n                    this.formGroup.controls['phoneNumber'].setErrors({\n                      'error.pattern.phoneNumber': true,\n                    });\n                    break;\n                  case ResponseCode.OK_SCR004.toString():\n                    this.userService.updateNameUser(this.formGroup.get('name').value);\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","import { Component, Injector, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { NbThemeService } from '@nebular/theme';\nimport { TranslateService } from '@ngx-translate/core';\nimport {\n  IndexedDBEncFactoryService,\n  AUTH_INDEXED_DB,\n  SETTINGS_INDEXED_DB,\n  ResponseCode,\n} from '@dongkap/do-core';\nimport { HttpBaseModel } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\nimport { CheckboxModel, BaseFormComponent } from '@dongkap/do-common';\n\n@Component({\n  selector: 'do-settings-page',\n  styleUrls: ['./settings-page.component.scss'],\n  templateUrl: './settings-page.component.html',\n})\nexport class SettingsPageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public apiSelectLocale: HttpBaseModel;\n  public localeIcon: string;\n  private localeCode: any;\n  private localeIdentifier: any;\n  public dataTheme: CheckboxModel[] = [\n    {\n      selected: false,\n    },\n  ];\n\n  constructor(\n    public injector: Injector,\n    private translate: TranslateService,\n    private themeService: NbThemeService,\n    @Inject(SETTINGS_INDEXED_DB) private settingsIndexedDB: IndexedDBFactoryService,\n    @Inject(AUTH_INDEXED_DB) private authIndexedDB: IndexedDBEncFactoryService) {\n      super(injector, {\n        'locale': [],\n        'theme': [],\n      });\n      this.apiSelectLocale = this.api['master']['select-all-locale'];\n    }\n\n  ngOnInit(): void {\n    this.onInit('security', 'get-settings');\n  }\n\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.localeCode = success['localeCode'];\n          this.localeIdentifier = success['localeIdentifier'];\n          this.localeIcon = success['localeIcon'] ? success['localeIcon'] : '';\n          this.formGroup.controls['locale'].setValue(this.localeIdentifier);\n          let darkMode: CheckboxModel[] = [{\n            selected: false,\n          }];\n          if (success['theme'] === 'dark') {\n            darkMode = [{\n              selected: true,\n            }];\n          }\n          this.formGroup.controls['theme'].setValue(darkMode);\n          this.formGroup.markAsPristine();\n        },\n        (error: ApiBaseResponse) => {\n          this.loadingForm = true;\n          if (error.respStatusMessage)\n            this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        },\n      );\n  }\n\n  onSubmit() {\n    if (this.formGroup.get('locale').value['value']) {\n      this.localeCode = this.formGroup.get('locale').value['value'];\n      this.localeIdentifier = this.formGroup.get('locale').value['label'];\n      this.localeIcon = this.formGroup.get('locale').value['icon'];\n    }\n    const theme: CheckboxModel[] = this.formGroup.get('theme').value;\n    const data: any = {\n      'localeCode': this.localeCode,\n      'localeIdentifier': this.localeIdentifier,\n      'localeIcon': this.localeIcon,\n      'theme': theme[0].selected ? 'dark' : 'default',\n    };\n    this.disabled = true;\n    Promise.all([\n      this.settingsIndexedDB.get('locale'),\n      this.settingsIndexedDB.get('theme'),\n    ]).then((current: any[]) => {\n      if ((current[0] !== this.localeCode) || (current[1] !== data['theme'])) {\n        this.exec('security', 'change-settings', data).subscribe(\n          (success: ApiBaseResponse) => {\n            if (success) {\n              if (success.respStatusCode === ResponseCode.OK_SCR002.toString()) {\n                if (theme) {\n                  this.changeTheme(theme[0].selected);\n                }\n                if (current[0] !== this.localeCode) {\n                  this.settingsIndexedDB.put('locale', this.localeCode).then(() => {\n                    this.http.HTTP_AUTH(this.api['security']['get-menus']).subscribe(\n                      (menus: any) => {\n                        Promise.all([\n                          this.authIndexedDB.putEnc('menus', JSON.stringify(menus['main'])),\n                          this.authIndexedDB.putEnc('extras', JSON.stringify(menus['extra'])),\n                        ]).then(() => {\n                          this.translate.getTranslation(this.localeCode).subscribe((lang: any) => {\n                            this.translate.use(this.localeCode);\n                            this.translate.setTranslation(this.localeCode, lang, true);\n                            this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true);\n                            this.disabled = false;\n                            this.formGroup.markAsPristine();\n                          });\n                        });\n                      },\n                      (error: any) => {\n                        this.toastr.showI18n('error.translate', false, null, 'warning');\n                      });\n                  });\n                }\n              }\n            }\n          },\n          (error: ApiBaseResponse) => {\n              this.disabled = false;\n              this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n          },\n        );\n      }\n    });\n  }\n\n  changeTheme(dark: boolean) {\n    const theme: string = dark ? 'dark' : 'default';\n    this.settingsIndexedDB.put('theme', theme).then();\n    this.themeService.changeTheme(theme);\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'do-deactivated-prompt',\n  templateUrl: 'deactivated-prompt.component.html',\n  styleUrls: ['deactivated-prompt.component.scss'],\n})\nexport class DeactivatedPromptComponent {\n\n  public disabled: boolean = false;\n  public password: string;\n\n  constructor(protected ref: NbDialogRef<DeactivatedPromptComponent>) {\n  }\n\n  submit(password) {\n    this.disabled = true;\n    this.ref.close(password);\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { NbDialogRef } from '@nebular/theme';\nimport { Pattern } from '@dongkap/do-core';\n\n@Component({\n  selector: 'do-deactivated-provider-prompt',\n  templateUrl: 'deactivated-provider-prompt.component.html',\n  styleUrls: ['deactivated-provider-prompt.component.scss'],\n})\nexport class DeactivatedProviderPromptComponent {\n\n  public disabled: boolean = false;\n  public patternEmail: string = Pattern.EMAIL;\n\n  public form: FormGroup = new FormGroup({\n    email: new FormControl(),\n  });\n\n  constructor(protected ref: NbDialogRef<DeactivatedProviderPromptComponent>) {\n  }\n\n  submit() {\n    this.disabled = true;\n    this.ref.close(this.form.get('email').value);\n  }\n}\n","import { Component, Injector } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { NbDialogService } from '@nebular/theme';\nimport {\n  ResponseCode,\n  OAUTH_INFO,\n  SecurityResourceModel,\n  EncryptionService\n } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { AuthIndexedDBService, AuthTokenService } from '@dongkap/do-auth';\nimport { BaseFormComponent } from '@dongkap/do-common';\nimport { DeactivatedPromptComponent } from './prompt/deactivated-prompt.component';\nimport { DeactivatedProviderPromptComponent } from './prompt/deactivated-provider-prompt.component';\n\n@Component({\n  selector: 'do-security-page',\n  styleUrls: ['./security-page.component.scss'],\n  templateUrl: './security-page.component.html',\n})\nexport class SecurityPageComponent extends BaseFormComponent<any> {\n\n  private enc: EncryptionService;\n  private oauthResource: SecurityResourceModel;\n  private authToken: AuthTokenService;\n  public authProvider: boolean = true;\n  public provider: any;\n\n  constructor(public injector: Injector,\n    private dialogService: NbDialogService,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector, {\n      'password': [],\n    });\n    this.enc = injector.get(EncryptionService);\n    this.oauthResource = injector.get(OAUTH_INFO);\n    this.authToken = injector.get(AuthTokenService);\n    this.authIndexedDB.getEnc('provider').then((value: string) => {\n      this.provider = {\n        'value': value,\n      };\n      if (value === 'local') {\n        this.authProvider = false;\n      }\n    });\n  }\n\n  onSubmit(): void {\n    this.disabled = true;\n    if (this.authProvider) {\n      this.dialogService.open(DeactivatedProviderPromptComponent)\n        .onClose.subscribe((email: string) => {\n          if (email) {\n            this.disabled = true;\n            const data: any = {\n              'email': email,\n              'provider': this.provider['value'],\n            };\n            (super.onSubmit(data, 'security', 'deactivated') as Observable<ApiBaseResponse>)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe((response: ApiBaseResponse) => {\n                if (response) {\n                  if (response.respStatusCode === ResponseCode.OK_SCR003.toString()) {\n                    this.authToken.logout();\n                  }\n                }\n              });\n          } else {\n            this.disabled = false;\n          }\n        });\n    } else {\n      this.dialogService.open(DeactivatedPromptComponent)\n        .onClose.subscribe((password: string) => {\n          if (password) {\n            this.disabled = true;\n            const data: any = {\n              password: this.enc.encryptAES(this.oauthResource['aes_key'], password),\n            };\n            (super.onSubmit(data, 'security', 'deactivated') as Observable<ApiBaseResponse>)\n              .pipe(takeUntil(this.destroy$))\n              .subscribe((response: ApiBaseResponse) => {\n                if (response) {\n                  if (response.respStatusCode === ResponseCode.OK_SCR003.toString()) {\n                    this.authToken.logout();\n                  }\n                }\n              });\n          } else {\n            this.disabled = false;\n          }\n        });\n    }\n  }\n\n}\n","import { Component, Injector, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Validators, FormGroup } from '@angular/forms';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport {\n  PROFILE_INDEXED_DB,\n  ResponseCode,\n  USER_INFO,\n  UserInfo,\n  Pattern,\n} from '@dongkap/do-core';\nimport { HttpBaseModel } from '@dongkap/do-core';\nimport { ApiBaseResponse } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\nimport { BaseFormComponent, SelectParamModel } from '@dongkap/do-common';\nimport { AuthIndexedDBService } from '@dongkap/do-auth';\n\n@Component({\n  selector: 'do-system-page',\n  styleUrls: ['./system-page.component.scss'],\n  templateUrl: './system-page.component.html',\n})\nexport class SystemPageComponent extends BaseFormComponent<any> implements OnInit {\n\n  public image: string;\n  public formGroupImage: FormGroup;\n  public uploadFinished: boolean;\n  public patternEmail: string = Pattern.EMAIL;\n  public patternPhoneNumber: string = Pattern.PHONE_NUMBER;\n  public minLength: number = 5;\n  public disabledUpload: boolean = false;\n  public provider: string = 'local';\n\n  public apiSelectCountry: HttpBaseModel;\n\n  public apiSelectProvince: HttpBaseModel;\n  public paramSelectProvince: SelectParamModel[];\n\n  public apiSelectCity: HttpBaseModel;\n  public paramSelectCity: SelectParamModel[];\n\n  public apiSelectDistrict: HttpBaseModel;\n  public paramSelectDistrict: SelectParamModel[];\n\n  public apiSelectSubDistrict: HttpBaseModel;\n  public paramSelectSubDistrict: SelectParamModel[];\n\n  constructor(\n    public injector: Injector,\n    @Inject(USER_INFO) private userService: UserInfo,\n    @Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService,\n    private authIndexedDB: AuthIndexedDBService) {\n    super(injector,\n      {\n        'username': [{\n          value: null,\n          disabled: true,\n        }],\n        'name': [],\n        'email': [],\n        'phoneNumber': [],\n        'address': [null, [Validators.minLength(5)]],\n        'country': [],\n        'province': [],\n        'city': [],\n        'district': [],\n        'subDistrict': [],\n      });\n    this.formGroupImage = this.formBuilder.group({\n      'image': [],\n    });\n    this.apiSelectCountry = this.api['master']['select-country'];\n    this.apiSelectProvince = this.api['master']['select-province'];\n    this.apiSelectCity = this.api['master']['select-city'];\n    this.apiSelectDistrict = this.api['master']['select-district'];\n    this.apiSelectSubDistrict = this.api['master']['select-subdistrict'];\n    this.authIndexedDB.getEnc('provider').then((value: string) => {\n      if (value !== 'local') {\n        this.provider = value;\n        this.formGroup.controls['email'].disable();\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.onInit('profile', 'get-profile-system');\n    Promise.all([\n      this.profileIndexedDB.get('image-b64'),\n      this.profileIndexedDB.get('image'),\n    ]).then((value: any[]) => {\n      if (value[0])\n        this.image = value[0];\n      else\n        this.image = value[1];\n    });\n    this.paramSelectProvince = [{\n      key: 'country',\n      value: 'undefined',\n    }];\n    this.paramSelectCity = [{\n      key: 'province',\n      value: 'undefined',\n    }];\n    this.paramSelectDistrict = [{\n      key: 'city',\n      value: 'undefined',\n    }];\n    this.paramSelectSubDistrict = [{\n      key: 'district',\n      value: 'undefined',\n    }];\n  }\n\n  onInit(serviceName: string, apiName: string): void {\n    this.loadingForm = true;\n    this.exec(serviceName, apiName)\n      .subscribe(\n        (success: any) => {\n          this.loadingForm = false;\n          this.formGroup.controls['name'].setValue(success['name']);\n          this.formGroup.controls['username'].setValue(success['username']);\n          this.formGroup.controls['email'].setValue(success['email']);\n          if (success['address']) this.formGroup.controls['address'].setValue(success['address']);\n          if (success['country']) {\n            this.formGroup.controls['country'].setValue({\n              label: success['country'],\n              value: success['countryCode']\n            });\n            this.paramSelectProvince = [\n              {\n                key: 'country',\n                value: success['countryCode'],\n              },\n            ];\n          }\n          if (success['province']) {\n            this.formGroup.controls['province'].setValue({\n              label: success['province'],\n              value: success['provinceCode']\n            });\n            this.paramSelectCity = [\n              {\n                key: 'province',\n                value: success['provinceCode'],\n              },\n            ];\n          }\n          if (success['city']) {\n            this.formGroup.controls['city'].setValue({\n              label: success['city'],\n              value: success['cityCode']\n            });\n            this.paramSelectDistrict = [\n              {\n                key: 'city',\n                value: success['cityCode'],\n              },\n            ];\n          }\n          if (success['district']) {\n            this.formGroup.controls['district'].setValue({\n              label: success['district'],\n              value: success['districtCode']\n            });\n            this.paramSelectSubDistrict = [\n              {\n                key: 'district',\n                value: success['districtCode'],\n              },\n            ];\n          }\n          if (success['subDistrict']) {\n            this.formGroup.controls['subDistrict'].setValue({\n              label: success['subDistrict'],\n              value: success['subDistrictCode']\n            });\n          }\n          if (success['phoneNumber']) this.formGroup.controls['phoneNumber'].setValue(success['phoneNumber']);\n          if (success['mobileNumber']) this.formGroup.controls['mobileNumber'].setValue(success['mobileNumber']);\n          this.authIndexedDB.getEnc('provider').then((value: string) => {\n            if (value !== 'local') {\n              this.provider = value;\n              this.formGroup.controls['email'].disable();\n            }\n          });\n          this.formGroup.markAsPristine();\n        },\n        (error: HttpErrorResponse) => {\n          this.loadingForm = true;\n          const err: ApiBaseResponse = error['error'];\n          if (err) {\n            this.toastr.showI18n(err.respStatusMessage[err.respStatusCode], true, null, 'danger');\n          } else {\n            this.toastr.showI18n(err as any, true, null, 'danger');\n          }\n        },\n      );\n  }\n\n  onSelectCountry(select: any): void {\n    this.paramSelectProvince = [\n      {\n        key: 'country',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectProvince(select: any): void {\n    this.paramSelectCity = [\n      {\n        key: 'province',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearProvince();\n  }\n  onSelectCity(select: any): void {\n    this.paramSelectDistrict = [\n      {\n        key: 'city',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearCity();\n  }\n  onSelectDistrict(select: any): void {\n    this.paramSelectSubDistrict = [\n      {\n        key: 'district',\n        value: select ? select.value : 'undefined',\n      },\n    ];\n    this.onClearDistrict();\n  }\n\n  onClearCountry(): void {\n    this.formGroup.patchValue({\n      'province': null,\n      'city': null,\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearProvince(): void {\n    this.formGroup.patchValue({\n      'city': null,\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearCity(): void {\n    this.formGroup.patchValue({\n      'district': null,\n      'subDistrict': null,\n    });\n  }\n  onClearDistrict(): void {\n    this.formGroup.patchValue({\n      'subDistrict': null,\n    });\n  }\n\n  uploadImage(file: any) {\n    const data: FormData = new FormData();\n    data.append('photo', file);\n    this.formGroupImage.get('image').disable();\n    this.exec('file', 'photo-profile', data).subscribe(\n        (success: ApiBaseResponse) => {\n          this.userService.updatePhotoUser(file, success.respStatusMessage['checksum']);\n          this.uploadFinished = true;\n          this.formGroupImage.markAsPristine();\n          this.toastr.showI18n(success.respStatusMessage[success.respStatusCode], true, null, 'success');\n        },\n        (error: ApiBaseResponse) => {\n          this.formGroupImage.get('image').enable();\n          this.toastr.showI18n(error.respStatusMessage[error.respStatusCode], true, null, 'danger');\n        },\n    );\n  }\n\n  valueSelect(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.label) {\n        return this.formGroup.get(prop).value.label;\n      } else {\n        return this.formGroup.get(prop).value;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  valueSelectNonLabel(prop: string): string {\n    if (this.formGroup.get(prop).value) {\n      if (this.formGroup.get(prop).value.value) {\n        return this.formGroup.get(prop).value.value;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  onSubmit() {\n    const data: any = {\n      name: this.formGroup.get('name').value,\n      phoneNumber: this.formGroup.get('phoneNumber').value,\n      address: this.formGroup.get('address').value,\n      country: this.valueSelect('country'),\n      countryCode: this.valueSelectNonLabel('country'),\n      province: this.valueSelect('province'),\n      provinceCode: this.valueSelectNonLabel('province'),\n      city: this.valueSelect('city'),\n      cityCode: this.valueSelectNonLabel('city'),\n      district: this.valueSelect('district'),\n      districtCode: this.valueSelectNonLabel('district'),\n      subDistrict: this.valueSelect('subDistrict'),\n      subDistrictCode: this.valueSelectNonLabel('subDistrict'),\n    };\n    if (this.provider === 'local') {\n      data['email'] = this.formGroup.get('email').value;\n    }\n    (super.onSubmit(data, 'profile', 'change-profile-system') as Observable<ApiBaseResponse>)\n            .pipe(takeUntil(this.destroy$))\n            .subscribe((response: ApiBaseResponse) => {\n              if (response) {\n                switch (response.respStatusCode) {\n                  case ResponseCode.ERR_SCR0008.toString():\n                    this.formGroup.controls['email'].setErrors({\n                      'email': true,\n                    });\n                    break;\n                  case ResponseCode.ERR_SCR0007A.toString():\n                    this.formGroup.controls['phoneNumber'].setErrors({\n                      'error.pattern.phoneNumber': true,\n                    });\n                    break;\n                  case ResponseCode.OK_SCR004.toString():\n                    this.userService.updateNameUser(this.formGroup.get('name').value);\n                    break;\n                  default:\n                    break;\n                }\n              }\n            });\n  }\n\n}\n","import { Component, Injector } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseComponent } from '@dongkap/do-common';\n\n@Component({\n  selector: 'do-terms-conditions-page',\n  styleUrls: ['./terms-conditions-page.component.scss'],\n  templateUrl: './terms-conditions-page.component.html',\n})\nexport class TermsConditionsPageComponent extends BaseComponent<any> implements OnInit, OnDestroy {\n\n  public content: string;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(public injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    const data: any = {\n      'parameterCode': 'TERMS_CONDITIONS.DONGKAP'\n    };\n    this.http.HTTP_AUTH(this.api['master']['parameter'], data)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.content = response['parameterValue'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n}\n","import { Component, Injector } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { BaseComponent } from '@dongkap/do-common';\n\n@Component({\n  selector: 'do-privacy-policy-page-page',\n  styleUrls: ['./privacy-policy-page.component.scss'],\n  templateUrl: './privacy-policy-page.component.html',\n})\nexport class PrivacyPolicyPageComponent extends BaseComponent<any> implements OnInit, OnDestroy {\n\n  public content: string;\n  protected destroy$: Subject<any> = new Subject<any>();\n\n  constructor(public injector: Injector) {\n    super(injector);\n  }\n\n  ngOnInit(): void {\n    const data: any = {\n      'parameterCode': 'PRIVACY_POLICY.DONGKAP'\n    };\n    this.http.HTTP_AUTH(this.api['master']['parameter'], data)\n    .pipe(takeUntil(this.destroy$))\n    .subscribe((response: any) => {\n      this.content = response['parameterValue'];\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next(true);\n    this.destroy$.complete();\n    this.destroy$.unsubscribe();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuardChildService } from '@dongkap/do-auth';\nimport { ExtraComponent } from './do-extra.component';\nimport { ProfilePageComponent } from './profile/profile-page.component';\nimport { SettingsPageComponent } from './settings/settings-page.component';\nimport { SecurityPageComponent } from './security/security-page.component';\nimport { SystemPageComponent } from './system/system-page.component';\nimport { TermsConditionsPageComponent } from './terms/terms-conditions-page.component';\nimport { PrivacyPolicyPageComponent } from './privacy-policy/privacy-policy-page.component';\n\nconst routes: Routes = [{\n  path: '',\n  component: ExtraComponent,\n  canActivateChild: [AuthGuardChildService],\n  children: [\n    {\n      path: 'profile',\n      component: ProfilePageComponent,\n      data: {\n        code: '#PROFILE-PAGE',\n      },\n    },\n    {\n      path: 'system',\n      component: SystemPageComponent,\n      data: {\n        code: '#SYSTEM-PAGE',\n      },\n    },\n    {\n      path: 'security',\n      component: SecurityPageComponent,\n      data: {\n        code: '#SECURITY-PAGE',\n      },\n    },\n    {\n      path: 'settings',\n      component: SettingsPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n    {\n      path: 'terms',\n      component: TermsConditionsPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n    {\n      path: 'privacy-policy',\n      component: PrivacyPolicyPageComponent,\n      data: {\n        code: '#SETTINGS-PAGE',\n      },\n    },\n  ],\n}];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DoExtraRoutingModule {\n}\n","import { Component, Inject } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { OnDestroy } from '@angular/core';\nimport { PROFILE_INDEXED_DB } from '@dongkap/do-core';\nimport { IndexedDBFactoryService } from '@dongkap/do-core';\n\n@Component({\n  selector: 'do-home-page',\n  styleUrls: ['./home-page.component.scss'],\n  templateUrl: './home-page.component.html',\n})\nexport class HomePageComponent implements OnInit, OnDestroy {\n\n  public name: Promise<string>;\n\n  constructor(@Inject(PROFILE_INDEXED_DB) private profileIndexedDB: IndexedDBFactoryService) {}\n\n  ngOnInit(): void {\n    this.name = this.profileIndexedDB.get('name');\n  }\n\n  ngOnDestroy(): void {}\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NbCardModule, NbDialogModule, NbAlertModule, NbIconModule } from '@nebular/theme';\nimport { DoThemeModule } from '@dongkap/do-theme';\nimport {\n  DoInputModule,\n  DoButtonModule,\n  DoBaseModule,\n  DoCheckBoxModule,\n  DoEditorModule,\n  DoSelectModule,\n  DoImageModule,\n  DoDatePickerModule,\n} from '@dongkap/do-common';\nimport { ChangePasswordPageComponent } from './password/change-password-page.component';\nimport { ExtraComponent } from './do-extra.component';\nimport { DoExtraRoutingModule } from './do-extra-routing.module';\nimport { ProfilePageComponent } from './profile/profile-page.component';\nimport { SettingsPageComponent } from './settings/settings-page.component';\nimport { SecurityPageComponent } from './security/security-page.component';\nimport { DeactivatedPromptComponent } from './security/prompt/deactivated-prompt.component';\nimport { HomePageComponent } from './home/home-page.component';\nimport { SystemPageComponent } from './system/system-page.component';\nimport { TermsConditionsPageComponent } from './terms/terms-conditions-page.component';\nimport { PrivacyPolicyPageComponent } from './privacy-policy/privacy-policy-page.component';\nimport { DeactivatedProviderPromptComponent } from './security/prompt/deactivated-provider-prompt.component';\n\nconst EXTRA_COMPONENTS = [\n  ExtraComponent,\n  ChangePasswordPageComponent,\n  DeactivatedPromptComponent,\n  DeactivatedProviderPromptComponent,\n  SecurityPageComponent,\n  ProfilePageComponent,\n  SystemPageComponent,\n  SettingsPageComponent,\n  HomePageComponent,\n  TermsConditionsPageComponent,\n  PrivacyPolicyPageComponent,\n];\n\nconst EXTRA_ENTRY_COMPONENTS = [\n  DeactivatedPromptComponent,\n  DeactivatedProviderPromptComponent,\n];\n\nconst modules = [\n  FormsModule,\n  ReactiveFormsModule,\n  NbCardModule,\n  NbAlertModule,\n  NbIconModule,\n  NbDialogModule.forChild(),\n  DoThemeModule,\n  DoInputModule,\n  DoCheckBoxModule,\n  DoButtonModule,\n  DoBaseModule,\n  DoEditorModule,\n  DoSelectModule,\n  DoDatePickerModule,\n  DoImageModule,\n  DoExtraRoutingModule,\n];\n\n@NgModule({\n  imports: [\n    ...modules,\n  ],\n  declarations: [\n    ...EXTRA_COMPONENTS,\n  ],\n  entryComponents: [\n    ...EXTRA_ENTRY_COMPONENTS,\n  ],\n})\nexport class DoExtraModule { }\n","/*\n * Public API Surface of do-extra\n */\n\nexport * from './lib/do-extra.module';\n\nexport { HomePageComponent } from './lib/home/home-page.component';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {DoExtraRoutingModule as Éµa} from './lib/do-extra-routing.module';\nexport {ExtraComponent as Éµb} from './lib/do-extra.component';\nexport {ChangePasswordPageComponent as Éµi} from './lib/password/change-password-page.component';\nexport {PrivacyPolicyPageComponent as Éµh} from './lib/privacy-policy/privacy-policy-page.component';\nexport {ProfilePageComponent as Éµc} from './lib/profile/profile-page.component';\nexport {DeactivatedPromptComponent as Éµj} from './lib/security/prompt/deactivated-prompt.component';\nexport {DeactivatedProviderPromptComponent as Éµk} from './lib/security/prompt/deactivated-provider-prompt.component';\nexport {SecurityPageComponent as Éµe} from './lib/security/security-page.component';\nexport {SettingsPageComponent as Éµf} from './lib/settings/settings-page.component';\nexport {SystemPageComponent as Éµd} from './lib/system/system-page.component';\nexport {TermsConditionsPageComponent as Éµg} from './lib/terms/terms-conditions-page.component';"],"names":[],"mappings":"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"}