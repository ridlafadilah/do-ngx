import { __read, __spread } from "tslib";
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NbActionsModule, NbLayoutModule, NbMenuModule, NbSearchModule, NbSidebarModule, NbUserModule, NbContextMenuModule, NbButtonModule, NbSelectModule, NbIconModule, NbThemeModule, } from '@nebular/theme';
import { NbEvaIconsModule } from '@nebular/eva-icons';
import { TranslateModule } from '@ngx-translate/core';
import { FooterComponent } from './components/footer/footer.component';
import { HeaderComponent } from './components/header/header.component';
import { SearchInputComponent } from './components/search-input/search-input.component';
import { CapitalizePipe } from './pipes/capitalize.pipe';
import { PluralPipe } from './pipes/plural.pipe';
import { RoundPipe } from './pipes/round.pipe';
import { TimingPipe } from './pipes/timing.pipe';
import { NumberWithCommasPipe } from './pipes/number-with-commas.pipe';
import { OneColumnLayoutComponent } from './layouts/one-column/one-column.layout';
import { TwoColumnsLayoutComponent } from './layouts/two-columns/two-columns.layout';
import { ThreeColumnsLayoutComponent } from './layouts/three-columns/three-columns.layout';
import { DEFAULT_THEME } from './styles/theme.default';
import { COSMIC_THEME } from './styles/theme.cosmic';
import { CORPORATE_THEME } from './styles/theme.corporate';
import { DARK_THEME } from './styles/theme.dark';
import { RouterModule } from '@angular/router';
export var NB_MODULES = [
    RouterModule,
    TranslateModule,
    NbLayoutModule,
    NbMenuModule,
    NbUserModule,
    NbActionsModule,
    NbSearchModule,
    NbSidebarModule,
    NbContextMenuModule,
    NbButtonModule,
    NbSelectModule,
    NbIconModule,
    NbEvaIconsModule,
];
export var THEME_COMPONENTS = [
    HeaderComponent,
    FooterComponent,
    SearchInputComponent,
    OneColumnLayoutComponent,
    ThreeColumnsLayoutComponent,
    TwoColumnsLayoutComponent,
];
export var THEME_PIPES = [
    CapitalizePipe,
    PluralPipe,
    RoundPipe,
    TimingPipe,
    NumberWithCommasPipe,
];
var DoThemeModule = /** @class */ (function () {
    function DoThemeModule() {
    }
    DoThemeModule.forRoot = function () {
        return {
            ngModule: DoThemeModule,
            providers: __spread(NbThemeModule.forRoot({
                name: 'default',
            }, [DEFAULT_THEME, COSMIC_THEME, CORPORATE_THEME, DARK_THEME]).providers),
        };
    };
    DoThemeModule.decorators = [
        { type: NgModule, args: [{
                    imports: __spread([CommonModule], NB_MODULES),
                    exports: __spread([CommonModule], THEME_PIPES, THEME_COMPONENTS),
                    declarations: __spread(THEME_COMPONENTS, THEME_PIPES),
                },] }
    ];
    return DoThemeModule;
}());
export { DoThemeModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG8tdGhlbWUubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGRvbmdrYXAvZG8tdGhlbWUvIiwic291cmNlcyI6WyJsaWIvZG8tdGhlbWUubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUNMLGVBQWUsRUFDZixjQUFjLEVBQ2QsWUFBWSxFQUNaLGNBQWMsRUFDZCxlQUFlLEVBQ2YsWUFBWSxFQUNaLG1CQUFtQixFQUNuQixjQUFjLEVBQ2QsY0FBYyxFQUNkLFlBQVksRUFDWixhQUFhLEdBQ2QsTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFdEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUN4RixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDekQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUMvQyxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDakQsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDdkUsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sd0NBQXdDLENBQUM7QUFDbEYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sMENBQTBDLENBQUM7QUFDckYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sOENBQThDLENBQUM7QUFDM0YsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUUvQyxNQUFNLENBQUMsSUFBTSxVQUFVLEdBQUc7SUFDeEIsWUFBWTtJQUNaLGVBQWU7SUFDZixjQUFjO0lBQ2QsWUFBWTtJQUNaLFlBQVk7SUFDWixlQUFlO0lBQ2YsY0FBYztJQUNkLGVBQWU7SUFDZixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLGNBQWM7SUFDZCxZQUFZO0lBQ1osZ0JBQWdCO0NBQ2pCLENBQUM7QUFDRixNQUFNLENBQUMsSUFBTSxnQkFBZ0IsR0FBRztJQUM5QixlQUFlO0lBQ2YsZUFBZTtJQUNmLG9CQUFvQjtJQUNwQix3QkFBd0I7SUFDeEIsMkJBQTJCO0lBQzNCLHlCQUF5QjtDQUMxQixDQUFDO0FBQ0YsTUFBTSxDQUFDLElBQU0sV0FBVyxHQUFHO0lBQ3pCLGNBQWM7SUFDZCxVQUFVO0lBQ1YsU0FBUztJQUNULFVBQVU7SUFDVixvQkFBb0I7Q0FDckIsQ0FBQztBQUVGO0lBQUE7SUFtQkEsQ0FBQztJQWJRLHFCQUFPLEdBQWQ7UUFDRSxPQUFPO1lBQ0wsUUFBUSxFQUFFLGFBQWE7WUFDdkIsU0FBUyxXQUNKLGFBQWEsQ0FBQyxPQUFPLENBQ3RCO2dCQUNFLElBQUksRUFBRSxTQUFTO2FBQ2hCLEVBQ0QsQ0FBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLGVBQWUsRUFBRSxVQUFVLENBQUUsQ0FDN0QsQ0FBQyxTQUFTLENBQ1o7U0FDRixDQUFDO0lBQ0osQ0FBQzs7Z0JBbEJGLFFBQVEsU0FBQztvQkFDUixPQUFPLFlBQUcsWUFBWSxHQUFLLFVBQVUsQ0FBQztvQkFDdEMsT0FBTyxZQUFHLFlBQVksR0FBSyxXQUFXLEVBQUssZ0JBQWdCLENBQUM7b0JBQzVELFlBQVksV0FBTSxnQkFBZ0IsRUFBSyxXQUFXLENBQUM7aUJBQ3BEOztJQWVELG9CQUFDO0NBQUEsQUFuQkQsSUFtQkM7U0FkWSxhQUFhIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTW9kdWxlV2l0aFByb3ZpZGVycywgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge1xuICBOYkFjdGlvbnNNb2R1bGUsXG4gIE5iTGF5b3V0TW9kdWxlLFxuICBOYk1lbnVNb2R1bGUsXG4gIE5iU2VhcmNoTW9kdWxlLFxuICBOYlNpZGViYXJNb2R1bGUsXG4gIE5iVXNlck1vZHVsZSxcbiAgTmJDb250ZXh0TWVudU1vZHVsZSxcbiAgTmJCdXR0b25Nb2R1bGUsXG4gIE5iU2VsZWN0TW9kdWxlLFxuICBOYkljb25Nb2R1bGUsXG4gIE5iVGhlbWVNb2R1bGUsXG59IGZyb20gJ0BuZWJ1bGFyL3RoZW1lJztcbmltcG9ydCB7IE5iRXZhSWNvbnNNb2R1bGUgfSBmcm9tICdAbmVidWxhci9ldmEtaWNvbnMnO1xuaW1wb3J0IHsgVHJhbnNsYXRlTW9kdWxlIH0gZnJvbSAnQG5neC10cmFuc2xhdGUvY29yZSc7XG5cbmltcG9ydCB7IEZvb3RlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy9mb290ZXIvZm9vdGVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBIZWFkZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvaGVhZGVyL2hlYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgU2VhcmNoSW5wdXRDb21wb25lbnQgfSBmcm9tICcuL2NvbXBvbmVudHMvc2VhcmNoLWlucHV0L3NlYXJjaC1pbnB1dC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQ2FwaXRhbGl6ZVBpcGUgfSBmcm9tICcuL3BpcGVzL2NhcGl0YWxpemUucGlwZSc7XG5pbXBvcnQgeyBQbHVyYWxQaXBlIH0gZnJvbSAnLi9waXBlcy9wbHVyYWwucGlwZSc7XG5pbXBvcnQgeyBSb3VuZFBpcGUgfSBmcm9tICcuL3BpcGVzL3JvdW5kLnBpcGUnO1xuaW1wb3J0IHsgVGltaW5nUGlwZSB9IGZyb20gJy4vcGlwZXMvdGltaW5nLnBpcGUnO1xuaW1wb3J0IHsgTnVtYmVyV2l0aENvbW1hc1BpcGUgfSBmcm9tICcuL3BpcGVzL251bWJlci13aXRoLWNvbW1hcy5waXBlJztcbmltcG9ydCB7IE9uZUNvbHVtbkxheW91dENvbXBvbmVudCB9IGZyb20gJy4vbGF5b3V0cy9vbmUtY29sdW1uL29uZS1jb2x1bW4ubGF5b3V0JztcbmltcG9ydCB7IFR3b0NvbHVtbnNMYXlvdXRDb21wb25lbnQgfSBmcm9tICcuL2xheW91dHMvdHdvLWNvbHVtbnMvdHdvLWNvbHVtbnMubGF5b3V0JztcbmltcG9ydCB7IFRocmVlQ29sdW1uc0xheW91dENvbXBvbmVudCB9IGZyb20gJy4vbGF5b3V0cy90aHJlZS1jb2x1bW5zL3RocmVlLWNvbHVtbnMubGF5b3V0JztcbmltcG9ydCB7IERFRkFVTFRfVEhFTUUgfSBmcm9tICcuL3N0eWxlcy90aGVtZS5kZWZhdWx0JztcbmltcG9ydCB7IENPU01JQ19USEVNRSB9IGZyb20gJy4vc3R5bGVzL3RoZW1lLmNvc21pYyc7XG5pbXBvcnQgeyBDT1JQT1JBVEVfVEhFTUUgfSBmcm9tICcuL3N0eWxlcy90aGVtZS5jb3Jwb3JhdGUnO1xuaW1wb3J0IHsgREFSS19USEVNRSB9IGZyb20gJy4vc3R5bGVzL3RoZW1lLmRhcmsnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcblxuZXhwb3J0IGNvbnN0IE5CX01PRFVMRVMgPSBbXG4gIFJvdXRlck1vZHVsZSxcbiAgVHJhbnNsYXRlTW9kdWxlLFxuICBOYkxheW91dE1vZHVsZSxcbiAgTmJNZW51TW9kdWxlLFxuICBOYlVzZXJNb2R1bGUsXG4gIE5iQWN0aW9uc01vZHVsZSxcbiAgTmJTZWFyY2hNb2R1bGUsXG4gIE5iU2lkZWJhck1vZHVsZSxcbiAgTmJDb250ZXh0TWVudU1vZHVsZSxcbiAgTmJCdXR0b25Nb2R1bGUsXG4gIE5iU2VsZWN0TW9kdWxlLFxuICBOYkljb25Nb2R1bGUsXG4gIE5iRXZhSWNvbnNNb2R1bGUsXG5dO1xuZXhwb3J0IGNvbnN0IFRIRU1FX0NPTVBPTkVOVFMgPSBbXG4gIEhlYWRlckNvbXBvbmVudCxcbiAgRm9vdGVyQ29tcG9uZW50LFxuICBTZWFyY2hJbnB1dENvbXBvbmVudCxcbiAgT25lQ29sdW1uTGF5b3V0Q29tcG9uZW50LFxuICBUaHJlZUNvbHVtbnNMYXlvdXRDb21wb25lbnQsXG4gIFR3b0NvbHVtbnNMYXlvdXRDb21wb25lbnQsXG5dO1xuZXhwb3J0IGNvbnN0IFRIRU1FX1BJUEVTID0gW1xuICBDYXBpdGFsaXplUGlwZSxcbiAgUGx1cmFsUGlwZSxcbiAgUm91bmRQaXBlLFxuICBUaW1pbmdQaXBlLFxuICBOdW1iZXJXaXRoQ29tbWFzUGlwZSxcbl07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIC4uLk5CX01PRFVMRVNdLFxuICBleHBvcnRzOiBbQ29tbW9uTW9kdWxlLCAuLi5USEVNRV9QSVBFUywgLi4uVEhFTUVfQ09NUE9ORU5UU10sXG4gIGRlY2xhcmF0aW9uczogWy4uLlRIRU1FX0NPTVBPTkVOVFMsIC4uLlRIRU1FX1BJUEVTXSxcbn0pXG5leHBvcnQgY2xhc3MgRG9UaGVtZU1vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8RG9UaGVtZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogRG9UaGVtZU1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICAuLi5OYlRoZW1lTW9kdWxlLmZvclJvb3QoXG4gICAgICAgICAge1xuICAgICAgICAgICAgbmFtZTogJ2RlZmF1bHQnLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgWyBERUZBVUxUX1RIRU1FLCBDT1NNSUNfVEhFTUUsIENPUlBPUkFURV9USEVNRSwgREFSS19USEVNRSBdLFxuICAgICAgICApLnByb3ZpZGVycyxcbiAgICAgIF0sXG4gICAgfTtcbiAgfVxufVxuIl19